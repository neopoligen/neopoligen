<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="10766"><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::file_set::FileSet&gt; (2 samples, 0.02%)</title><rect x="0.0186%" y="853" width="0.0186%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="2"/><text x="0.2686%" y="863.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.0186%" y="837" width="0.0186%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.2686%" y="847.50"></text></g><g><title>libcopyfile.dylib`fcopyfile (2 samples, 0.02%)</title><rect x="0.0557%" y="805" width="0.0186%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="2"/><text x="0.3057%" y="815.50"></text></g><g><title>neopoligengine`neopoligengine::builder::Builder::copy_theme_assets (5 samples, 0.05%)</title><rect x="0.0464%" y="853" width="0.0464%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="5"/><text x="0.2964%" y="863.50"></text></g><g><title>neopoligengine`fs_extra::dir::copy (5 samples, 0.05%)</title><rect x="0.0464%" y="837" width="0.0464%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="5"/><text x="0.2964%" y="847.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::copy (4 samples, 0.04%)</title><rect x="0.0557%" y="821" width="0.0372%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="4"/><text x="0.3057%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`close (89 samples, 0.83%)</title><rect x="0.0929%" y="837" width="0.8267%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="89"/><text x="0.3429%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mkdir (2 samples, 0.02%)</title><rect x="0.9196%" y="837" width="0.0186%" height="15" fill="rgb(228,23,34)" fg:x="99" fg:w="2"/><text x="1.1696%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`write (25 samples, 0.23%)</title><rect x="0.9381%" y="837" width="0.2322%" height="15" fill="rgb(218,30,26)" fg:x="101" fg:w="25"/><text x="1.1881%" y="847.50"></text></g><g><title>neopoligengine`core::str::pattern::TwoWaySearcher::next (7 samples, 0.07%)</title><rect x="1.2261%" y="821" width="0.0650%" height="15" fill="rgb(220,122,19)" fg:x="132" fg:w="7"/><text x="1.4761%" y="831.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::insert_cow (2 samples, 0.02%)</title><rect x="1.2911%" y="821" width="0.0186%" height="15" fill="rgb(250,228,42)" fg:x="139" fg:w="2"/><text x="1.5411%" y="831.50"></text></g><g><title>neopoligengine`minijinja::template::CompiledTemplate::new (2 samples, 0.02%)</title><rect x="1.2911%" y="805" width="0.0186%" height="15" fill="rgb(240,193,28)" fg:x="139" fg:w="2"/><text x="1.5411%" y="815.50"></text></g><g><title>neopoligengine`minijinja::compiler::parser::parse_with_syntax (2 samples, 0.02%)</title><rect x="1.2911%" y="789" width="0.0186%" height="15" fill="rgb(216,20,37)" fg:x="139" fg:w="2"/><text x="1.5411%" y="799.50"></text></g><g><title>neopoligengine`minijinja::compiler::parser::Parser::subparse (2 samples, 0.02%)</title><rect x="1.2911%" y="773" width="0.0186%" height="15" fill="rgb(206,188,39)" fg:x="139" fg:w="2"/><text x="1.5411%" y="783.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::list::List&gt; (3 samples, 0.03%)</title><rect x="1.3375%" y="709" width="0.0279%" height="15" fill="rgb(217,207,13)" fg:x="144" fg:w="3"/><text x="1.5875%" y="719.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;[neopoligengine::child::Child]&gt; (2 samples, 0.02%)</title><rect x="1.3468%" y="693" width="0.0186%" height="15" fill="rgb(231,73,38)" fg:x="145" fg:w="2"/><text x="1.5968%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="1.3933%" y="677" width="0.0279%" height="15" fill="rgb(225,20,46)" fg:x="150" fg:w="3"/><text x="1.6433%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="1.4490%" y="661" width="0.0186%" height="15" fill="rgb(210,31,41)" fg:x="156" fg:w="2"/><text x="1.6990%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.03%)</title><rect x="1.4676%" y="661" width="0.0279%" height="15" fill="rgb(221,200,47)" fg:x="158" fg:w="3"/><text x="1.7176%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.03%)</title><rect x="1.4676%" y="645" width="0.0279%" height="15" fill="rgb(226,26,5)" fg:x="158" fg:w="3"/><text x="1.7176%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.03%)</title><rect x="1.4954%" y="661" width="0.0279%" height="15" fill="rgb(249,33,26)" fg:x="161" fg:w="3"/><text x="1.7454%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (2 samples, 0.02%)</title><rect x="1.5047%" y="645" width="0.0186%" height="15" fill="rgb(235,183,28)" fg:x="162" fg:w="2"/><text x="1.7547%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="1.5047%" y="629" width="0.0186%" height="15" fill="rgb(221,5,38)" fg:x="162" fg:w="2"/><text x="1.7547%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.02%)</title><rect x="1.5233%" y="661" width="0.0186%" height="15" fill="rgb(247,18,42)" fg:x="164" fg:w="2"/><text x="1.7733%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.02%)</title><rect x="1.5233%" y="645" width="0.0186%" height="15" fill="rgb(241,131,45)" fg:x="164" fg:w="2"/><text x="1.7733%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="1.5233%" y="629" width="0.0186%" height="15" fill="rgb(249,31,29)" fg:x="164" fg:w="2"/><text x="1.7733%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.07%)</title><rect x="1.5419%" y="645" width="0.0650%" height="15" fill="rgb(225,111,53)" fg:x="166" fg:w="7"/><text x="1.7919%" y="655.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;[neopoligengine::child::Child]&gt; (19 samples, 0.18%)</title><rect x="1.4397%" y="677" width="0.1765%" height="15" fill="rgb(238,160,17)" fg:x="155" fg:w="19"/><text x="1.6897%" y="687.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::span::Span&gt; (8 samples, 0.07%)</title><rect x="1.5419%" y="661" width="0.0743%" height="15" fill="rgb(214,148,48)" fg:x="166" fg:w="8"/><text x="1.7919%" y="671.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.31%)</title><rect x="1.3190%" y="789" width="0.3065%" height="15" fill="rgb(232,36,49)" fg:x="142" fg:w="33"/><text x="1.5690%" y="799.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (33 samples, 0.31%)</title><rect x="1.3190%" y="773" width="0.3065%" height="15" fill="rgb(209,103,24)" fg:x="142" fg:w="33"/><text x="1.5690%" y="783.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::site::Site&gt; (33 samples, 0.31%)</title><rect x="1.3190%" y="757" width="0.3065%" height="15" fill="rgb(229,88,8)" fg:x="142" fg:w="33"/><text x="1.5690%" y="767.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.31%)</title><rect x="1.3190%" y="741" width="0.3065%" height="15" fill="rgb(213,181,19)" fg:x="142" fg:w="33"/><text x="1.5690%" y="751.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::page::Page&gt; (32 samples, 0.30%)</title><rect x="1.3283%" y="725" width="0.2972%" height="15" fill="rgb(254,191,54)" fg:x="143" fg:w="32"/><text x="1.5783%" y="735.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::section::Section&gt; (28 samples, 0.26%)</title><rect x="1.3654%" y="709" width="0.2601%" height="15" fill="rgb(241,83,37)" fg:x="147" fg:w="28"/><text x="1.6154%" y="719.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::section_category::SectionCategory&gt; (25 samples, 0.23%)</title><rect x="1.3933%" y="693" width="0.2322%" height="15" fill="rgb(233,36,39)" fg:x="150" fg:w="25"/><text x="1.6433%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="1.6441%" y="773" width="0.0186%" height="15" fill="rgb(226,3,54)" fg:x="177" fg:w="2"/><text x="1.8941%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.09%)</title><rect x="1.7277%" y="757" width="0.0929%" height="15" fill="rgb(245,192,40)" fg:x="186" fg:w="10"/><text x="1.9777%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.02%)</title><rect x="1.8205%" y="757" width="0.0186%" height="15" fill="rgb(238,167,29)" fg:x="196" fg:w="2"/><text x="2.0705%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.02%)</title><rect x="1.8205%" y="741" width="0.0186%" height="15" fill="rgb(232,182,51)" fg:x="196" fg:w="2"/><text x="2.0705%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="1.8205%" y="725" width="0.0186%" height="15" fill="rgb(231,60,39)" fg:x="196" fg:w="2"/><text x="2.0705%" y="735.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.02%)</title><rect x="1.8391%" y="757" width="0.0186%" height="15" fill="rgb(208,69,12)" fg:x="198" fg:w="2"/><text x="2.0891%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.06%)</title><rect x="1.8577%" y="757" width="0.0557%" height="15" fill="rgb(235,93,37)" fg:x="200" fg:w="6"/><text x="2.1077%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (2 samples, 0.02%)</title><rect x="2.0156%" y="709" width="0.0186%" height="15" fill="rgb(213,116,39)" fg:x="217" fg:w="2"/><text x="2.2656%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.02%)</title><rect x="2.0156%" y="693" width="0.0186%" height="15" fill="rgb(222,207,29)" fg:x="217" fg:w="2"/><text x="2.2656%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (3 samples, 0.03%)</title><rect x="2.0342%" y="709" width="0.0279%" height="15" fill="rgb(206,96,30)" fg:x="219" fg:w="3"/><text x="2.2842%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="2.0620%" y="709" width="0.0186%" height="15" fill="rgb(218,138,4)" fg:x="222" fg:w="2"/><text x="2.3120%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="2.0806%" y="709" width="0.0186%" height="15" fill="rgb(250,191,14)" fg:x="224" fg:w="2"/><text x="2.3306%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (3 samples, 0.03%)</title><rect x="2.0992%" y="709" width="0.0279%" height="15" fill="rgb(239,60,40)" fg:x="226" fg:w="3"/><text x="2.3492%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.20%)</title><rect x="1.9877%" y="725" width="0.1951%" height="15" fill="rgb(206,27,48)" fg:x="214" fg:w="21"/><text x="2.2377%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (6 samples, 0.06%)</title><rect x="2.1271%" y="709" width="0.0557%" height="15" fill="rgb(225,35,8)" fg:x="229" fg:w="6"/><text x="2.3771%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.06%)</title><rect x="2.1271%" y="693" width="0.0557%" height="15" fill="rgb(250,213,24)" fg:x="229" fg:w="6"/><text x="2.3771%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.22%)</title><rect x="1.9692%" y="741" width="0.2229%" height="15" fill="rgb(247,123,22)" fg:x="212" fg:w="24"/><text x="2.2192%" y="751.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (30 samples, 0.28%)</title><rect x="1.9320%" y="757" width="0.2787%" height="15" fill="rgb(231,138,38)" fg:x="208" fg:w="30"/><text x="2.1820%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="2.2200%" y="741" width="0.0279%" height="15" fill="rgb(231,145,46)" fg:x="239" fg:w="3"/><text x="2.4700%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="2.2478%" y="741" width="0.0372%" height="15" fill="rgb(251,118,11)" fg:x="242" fg:w="4"/><text x="2.4978%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.06%)</title><rect x="2.2943%" y="725" width="0.0557%" height="15" fill="rgb(217,147,25)" fg:x="247" fg:w="6"/><text x="2.5443%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (3 samples, 0.03%)</title><rect x="2.3500%" y="725" width="0.0279%" height="15" fill="rgb(247,81,37)" fg:x="253" fg:w="3"/><text x="2.6000%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (3 samples, 0.03%)</title><rect x="2.3500%" y="709" width="0.0279%" height="15" fill="rgb(209,12,38)" fg:x="253" fg:w="3"/><text x="2.6000%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.03%)</title><rect x="2.3500%" y="693" width="0.0279%" height="15" fill="rgb(227,1,9)" fg:x="253" fg:w="3"/><text x="2.6000%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.05%)</title><rect x="2.3779%" y="725" width="0.0464%" height="15" fill="rgb(248,47,43)" fg:x="256" fg:w="5"/><text x="2.6279%" y="735.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.06%)</title><rect x="2.4243%" y="725" width="0.0557%" height="15" fill="rgb(221,10,30)" fg:x="261" fg:w="6"/><text x="2.6743%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="2.4522%" y="709" width="0.0279%" height="15" fill="rgb(210,229,1)" fg:x="264" fg:w="3"/><text x="2.7022%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="2.4522%" y="693" width="0.0279%" height="15" fill="rgb(222,148,37)" fg:x="264" fg:w="3"/><text x="2.7022%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="2.4800%" y="709" width="0.0279%" height="15" fill="rgb(234,67,33)" fg:x="267" fg:w="3"/><text x="2.7300%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="2.5358%" y="693" width="0.0186%" height="15" fill="rgb(247,98,35)" fg:x="273" fg:w="2"/><text x="2.7858%" y="703.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.28%)</title><rect x="2.2850%" y="741" width="0.2787%" height="15" fill="rgb(247,138,52)" fg:x="246" fg:w="30"/><text x="2.5350%" y="751.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.08%)</title><rect x="2.4800%" y="725" width="0.0836%" height="15" fill="rgb(213,79,30)" fg:x="267" fg:w="9"/><text x="2.7300%" y="735.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::macro_object::Macro&gt; (5 samples, 0.05%)</title><rect x="2.5172%" y="709" width="0.0464%" height="15" fill="rgb(246,177,23)" fg:x="271" fg:w="5"/><text x="2.7672%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.09%)</title><rect x="2.6194%" y="725" width="0.0929%" height="15" fill="rgb(230,62,27)" fg:x="282" fg:w="10"/><text x="2.8694%" y="735.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (57 samples, 0.53%)</title><rect x="2.2107%" y="757" width="0.5294%" height="15" fill="rgb(216,154,8)" fg:x="238" fg:w="57"/><text x="2.4607%" y="767.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::macro_object::Macro&gt; (17 samples, 0.16%)</title><rect x="2.5822%" y="741" width="0.1579%" height="15" fill="rgb(244,35,45)" fg:x="278" fg:w="17"/><text x="2.8322%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="2.7215%" y="725" width="0.0186%" height="15" fill="rgb(251,115,12)" fg:x="293" fg:w="2"/><text x="2.9715%" y="735.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 1.09%)</title><rect x="1.6626%" y="773" width="1.0868%" height="15" fill="rgb(240,54,50)" fg:x="179" fg:w="117"/><text x="1.9126%" y="783.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::ClosureTracker as core::ops::drop::Drop&gt;::drop (132 samples, 1.23%)</title><rect x="1.6255%" y="789" width="1.2261%" height="15" fill="rgb(233,84,52)" fg:x="175" fg:w="132"/><text x="1.8755%" y="799.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (11 samples, 0.10%)</title><rect x="2.7494%" y="773" width="0.1022%" height="15" fill="rgb(207,117,47)" fg:x="296" fg:w="11"/><text x="2.9994%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="2.8516%" y="773" width="0.0279%" height="15" fill="rgb(249,43,39)" fg:x="307" fg:w="3"/><text x="3.1016%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.02%)</title><rect x="2.8794%" y="773" width="0.0186%" height="15" fill="rgb(209,38,44)" fg:x="310" fg:w="2"/><text x="3.1294%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.02%)</title><rect x="2.8794%" y="757" width="0.0186%" height="15" fill="rgb(236,212,23)" fg:x="310" fg:w="2"/><text x="3.1294%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="2.8794%" y="741" width="0.0186%" height="15" fill="rgb(242,79,21)" fg:x="310" fg:w="2"/><text x="3.1294%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (5 samples, 0.05%)</title><rect x="2.9073%" y="757" width="0.0464%" height="15" fill="rgb(211,96,35)" fg:x="313" fg:w="5"/><text x="3.1573%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (5 samples, 0.05%)</title><rect x="2.9073%" y="741" width="0.0464%" height="15" fill="rgb(253,215,40)" fg:x="313" fg:w="5"/><text x="3.1573%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.04%)</title><rect x="2.9166%" y="725" width="0.0372%" height="15" fill="rgb(211,81,21)" fg:x="314" fg:w="4"/><text x="3.1666%" y="735.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (183 samples, 1.70%)</title><rect x="1.3097%" y="805" width="1.6998%" height="15" fill="rgb(208,190,38)" fg:x="141" fg:w="183"/><text x="1.5597%" y="815.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;minijinja::vm::closure_object::Closure&gt;&gt;&gt;&gt; (17 samples, 0.16%)</title><rect x="2.8516%" y="789" width="0.1579%" height="15" fill="rgb(235,213,38)" fg:x="307" fg:w="17"/><text x="3.1016%" y="799.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.11%)</title><rect x="2.8980%" y="773" width="0.1115%" height="15" fill="rgb(237,122,38)" fg:x="312" fg:w="12"/><text x="3.1480%" y="783.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.05%)</title><rect x="2.9630%" y="757" width="0.0464%" height="15" fill="rgb(244,218,35)" fg:x="319" fg:w="5"/><text x="3.2130%" y="767.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="2.9630%" y="741" width="0.0464%" height="15" fill="rgb(240,68,47)" fg:x="319" fg:w="5"/><text x="3.2130%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="3.1024%" y="741" width="0.0186%" height="15" fill="rgb(210,16,53)" fg:x="334" fg:w="2"/><text x="3.3524%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="3.1024%" y="725" width="0.0186%" height="15" fill="rgb(235,124,12)" fg:x="334" fg:w="2"/><text x="3.3524%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.04%)</title><rect x="3.1209%" y="741" width="0.0372%" height="15" fill="rgb(224,169,11)" fg:x="336" fg:w="4"/><text x="3.3709%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="3.1767%" y="725" width="0.0186%" height="15" fill="rgb(250,166,2)" fg:x="342" fg:w="2"/><text x="3.4267%" y="735.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (4 samples, 0.04%)</title><rect x="3.1767%" y="741" width="0.0372%" height="15" fill="rgb(242,216,29)" fg:x="342" fg:w="4"/><text x="3.4267%" y="751.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="3.1952%" y="725" width="0.0186%" height="15" fill="rgb(230,116,27)" fg:x="344" fg:w="2"/><text x="3.4452%" y="735.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="3.1952%" y="709" width="0.0186%" height="15" fill="rgb(228,99,48)" fg:x="344" fg:w="2"/><text x="3.4452%" y="719.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="3.1952%" y="693" width="0.0186%" height="15" fill="rgb(253,11,6)" fg:x="344" fg:w="2"/><text x="3.4452%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="3.1952%" y="677" width="0.0186%" height="15" fill="rgb(247,143,39)" fg:x="344" fg:w="2"/><text x="3.4452%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="3.1952%" y="661" width="0.0186%" height="15" fill="rgb(236,97,10)" fg:x="344" fg:w="2"/><text x="3.4452%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="3.1952%" y="645" width="0.0186%" height="15" fill="rgb(233,208,19)" fg:x="344" fg:w="2"/><text x="3.4452%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (2 samples, 0.02%)</title><rect x="3.1952%" y="629" width="0.0186%" height="15" fill="rgb(216,164,2)" fg:x="344" fg:w="2"/><text x="3.4452%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="3.1952%" y="613" width="0.0186%" height="15" fill="rgb(220,129,5)" fg:x="344" fg:w="2"/><text x="3.4452%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.06%)</title><rect x="3.2324%" y="709" width="0.0557%" height="15" fill="rgb(242,17,10)" fg:x="348" fg:w="6"/><text x="3.4824%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.06%)</title><rect x="3.2324%" y="693" width="0.0557%" height="15" fill="rgb(242,107,0)" fg:x="348" fg:w="6"/><text x="3.4824%" y="703.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (3 samples, 0.03%)</title><rect x="3.3067%" y="693" width="0.0279%" height="15" fill="rgb(251,28,31)" fg:x="356" fg:w="3"/><text x="3.5567%" y="703.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (2 samples, 0.02%)</title><rect x="3.3160%" y="677" width="0.0186%" height="15" fill="rgb(233,223,10)" fg:x="357" fg:w="2"/><text x="3.5660%" y="687.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.03%)</title><rect x="3.4832%" y="437" width="0.0279%" height="15" fill="rgb(215,21,27)" fg:x="375" fg:w="3"/><text x="3.7332%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="3.4925%" y="421" width="0.0186%" height="15" fill="rgb(232,23,21)" fg:x="376" fg:w="2"/><text x="3.7425%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="3.5296%" y="405" width="0.0186%" height="15" fill="rgb(244,5,23)" fg:x="380" fg:w="2"/><text x="3.7796%" y="415.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.10%)</title><rect x="3.4739%" y="453" width="0.1022%" height="15" fill="rgb(226,81,46)" fg:x="374" fg:w="11"/><text x="3.7239%" y="463.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.07%)</title><rect x="3.5111%" y="437" width="0.0650%" height="15" fill="rgb(247,70,30)" fg:x="378" fg:w="7"/><text x="3.7611%" y="447.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="3.5203%" y="421" width="0.0557%" height="15" fill="rgb(212,68,19)" fg:x="379" fg:w="6"/><text x="3.7703%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="3.5575%" y="405" width="0.0186%" height="15" fill="rgb(240,187,13)" fg:x="383" fg:w="2"/><text x="3.8075%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="3.5575%" y="389" width="0.0186%" height="15" fill="rgb(223,113,26)" fg:x="383" fg:w="2"/><text x="3.8075%" y="399.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.14%)</title><rect x="3.4460%" y="549" width="0.1393%" height="15" fill="rgb(206,192,2)" fg:x="371" fg:w="15"/><text x="3.6960%" y="559.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.13%)</title><rect x="3.4553%" y="533" width="0.1300%" height="15" fill="rgb(241,108,4)" fg:x="372" fg:w="14"/><text x="3.7053%" y="543.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.13%)</title><rect x="3.4553%" y="517" width="0.1300%" height="15" fill="rgb(247,173,49)" fg:x="372" fg:w="14"/><text x="3.7053%" y="527.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.13%)</title><rect x="3.4553%" y="501" width="0.1300%" height="15" fill="rgb(224,114,35)" fg:x="372" fg:w="14"/><text x="3.7053%" y="511.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.12%)</title><rect x="3.4646%" y="485" width="0.1208%" height="15" fill="rgb(245,159,27)" fg:x="373" fg:w="13"/><text x="3.7146%" y="495.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.11%)</title><rect x="3.4739%" y="469" width="0.1115%" height="15" fill="rgb(245,172,44)" fg:x="374" fg:w="12"/><text x="3.7239%" y="479.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.20%)</title><rect x="3.3996%" y="677" width="0.1951%" height="15" fill="rgb(236,23,11)" fg:x="366" fg:w="21"/><text x="3.6496%" y="687.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (19 samples, 0.18%)</title><rect x="3.4182%" y="661" width="0.1765%" height="15" fill="rgb(205,117,38)" fg:x="368" fg:w="19"/><text x="3.6682%" y="671.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.18%)</title><rect x="3.4182%" y="645" width="0.1765%" height="15" fill="rgb(237,72,25)" fg:x="368" fg:w="19"/><text x="3.6682%" y="655.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (18 samples, 0.17%)</title><rect x="3.4275%" y="629" width="0.1672%" height="15" fill="rgb(244,70,9)" fg:x="369" fg:w="18"/><text x="3.6775%" y="639.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.17%)</title><rect x="3.4275%" y="613" width="0.1672%" height="15" fill="rgb(217,125,39)" fg:x="369" fg:w="18"/><text x="3.6775%" y="623.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (18 samples, 0.17%)</title><rect x="3.4275%" y="597" width="0.1672%" height="15" fill="rgb(235,36,10)" fg:x="369" fg:w="18"/><text x="3.6775%" y="607.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.17%)</title><rect x="3.4275%" y="581" width="0.1672%" height="15" fill="rgb(251,123,47)" fg:x="369" fg:w="18"/><text x="3.6775%" y="591.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.15%)</title><rect x="3.4460%" y="565" width="0.1486%" height="15" fill="rgb(221,13,13)" fg:x="371" fg:w="16"/><text x="3.6960%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="3.6225%" y="629" width="0.0186%" height="15" fill="rgb(238,131,9)" fg:x="390" fg:w="2"/><text x="3.8725%" y="639.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::pad (2 samples, 0.02%)</title><rect x="3.6411%" y="613" width="0.0186%" height="15" fill="rgb(211,50,8)" fg:x="392" fg:w="2"/><text x="3.8911%" y="623.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::Value as core::cmp::PartialEq&gt;::eq (8 samples, 0.07%)</title><rect x="3.5946%" y="677" width="0.0743%" height="15" fill="rgb(245,182,24)" fg:x="387" fg:w="8"/><text x="3.8446%" y="687.50"></text></g><g><title>neopoligengine`minijinja::value::ops::coerce (7 samples, 0.07%)</title><rect x="3.6039%" y="661" width="0.0650%" height="15" fill="rgb(242,14,37)" fg:x="388" fg:w="7"/><text x="3.8539%" y="671.50"></text></g><g><title>neopoligengine`minijinja::value::argtypes::_&lt;impl core::convert::TryFrom&lt;minijinja::value::Value&gt; for i128&gt;::try_from (6 samples, 0.06%)</title><rect x="3.6132%" y="645" width="0.0557%" height="15" fill="rgb(246,228,12)" fg:x="389" fg:w="6"/><text x="3.8632%" y="655.50"></text></g><g><title>neopoligengine`alloc::fmt::format::format_inner (3 samples, 0.03%)</title><rect x="3.6411%" y="629" width="0.0279%" height="15" fill="rgb(213,55,15)" fg:x="392" fg:w="3"/><text x="3.8911%" y="639.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (3 samples, 0.03%)</title><rect x="3.7154%" y="645" width="0.0279%" height="15" fill="rgb(209,9,3)" fg:x="400" fg:w="3"/><text x="3.9654%" y="655.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (3 samples, 0.03%)</title><rect x="3.7154%" y="629" width="0.0279%" height="15" fill="rgb(230,59,30)" fg:x="400" fg:w="3"/><text x="3.9654%" y="639.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="3.7247%" y="613" width="0.0186%" height="15" fill="rgb(209,121,21)" fg:x="401" fg:w="2"/><text x="3.9747%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="3.7897%" y="629" width="0.0279%" height="15" fill="rgb(220,109,13)" fg:x="408" fg:w="3"/><text x="4.0397%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (4 samples, 0.04%)</title><rect x="3.8454%" y="613" width="0.0372%" height="15" fill="rgb(232,18,1)" fg:x="414" fg:w="4"/><text x="4.0954%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.04%)</title><rect x="3.8454%" y="597" width="0.0372%" height="15" fill="rgb(215,41,42)" fg:x="414" fg:w="4"/><text x="4.0954%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="3.9383%" y="581" width="0.0186%" height="15" fill="rgb(224,123,36)" fg:x="424" fg:w="2"/><text x="4.1883%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (416 samples, 3.86%)</title><rect x="3.9662%" y="549" width="3.8640%" height="15" fill="rgb(240,125,3)" fg:x="427" fg:w="416"/><text x="4.2162%" y="559.50">libs..</text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (418 samples, 3.88%)</title><rect x="3.9569%" y="581" width="3.8826%" height="15" fill="rgb(205,98,50)" fg:x="426" fg:w="418"/><text x="4.2069%" y="591.50">neop..</text></g><g><title>libsystem_malloc.dylib`free_medium (418 samples, 3.88%)</title><rect x="3.9569%" y="565" width="3.8826%" height="15" fill="rgb(205,185,37)" fg:x="426" fg:w="418"/><text x="4.2069%" y="575.50">libs..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="7.8488%" y="517" width="0.0186%" height="15" fill="rgb(238,207,15)" fg:x="845" fg:w="2"/><text x="8.0988%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.03%)</title><rect x="7.8674%" y="517" width="0.0279%" height="15" fill="rgb(213,199,42)" fg:x="847" fg:w="3"/><text x="8.1174%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.05%)</title><rect x="7.9138%" y="501" width="0.0464%" height="15" fill="rgb(235,201,11)" fg:x="852" fg:w="5"/><text x="8.1638%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.04%)</title><rect x="7.9231%" y="485" width="0.0372%" height="15" fill="rgb(207,46,11)" fg:x="853" fg:w="4"/><text x="8.1731%" y="495.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.12%)</title><rect x="7.8488%" y="533" width="0.1208%" height="15" fill="rgb(241,35,35)" fg:x="845" fg:w="13"/><text x="8.0988%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.07%)</title><rect x="7.8952%" y="517" width="0.0743%" height="15" fill="rgb(243,32,47)" fg:x="850" fg:w="8"/><text x="8.1452%" y="527.50"></text></g><g><title>neopoligengine`DYLD-STUB$$free (2 samples, 0.02%)</title><rect x="7.9695%" y="533" width="0.0186%" height="15" fill="rgb(247,202,23)" fg:x="858" fg:w="2"/><text x="8.2195%" y="543.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.18%)</title><rect x="7.8488%" y="565" width="0.1765%" height="15" fill="rgb(219,102,11)" fg:x="845" fg:w="19"/><text x="8.0988%" y="575.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (19 samples, 0.18%)</title><rect x="7.8488%" y="549" width="0.1765%" height="15" fill="rgb(243,110,44)" fg:x="845" fg:w="19"/><text x="8.0988%" y="559.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (3 samples, 0.03%)</title><rect x="7.9974%" y="533" width="0.0279%" height="15" fill="rgb(222,74,54)" fg:x="861" fg:w="3"/><text x="8.2474%" y="543.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (441 samples, 4.10%)</title><rect x="3.9383%" y="597" width="4.0962%" height="15" fill="rgb(216,99,12)" fg:x="424" fg:w="441"/><text x="4.1883%" y="607.50">neop..</text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (21 samples, 0.20%)</title><rect x="7.8395%" y="581" width="0.1951%" height="15" fill="rgb(226,22,26)" fg:x="844" fg:w="21"/><text x="8.0895%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="8.0810%" y="581" width="0.0279%" height="15" fill="rgb(217,163,10)" fg:x="870" fg:w="3"/><text x="8.3310%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="8.1089%" y="581" width="0.0279%" height="15" fill="rgb(213,25,53)" fg:x="873" fg:w="3"/><text x="8.3589%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.09%)</title><rect x="8.1460%" y="581" width="0.0929%" height="15" fill="rgb(252,105,26)" fg:x="877" fg:w="10"/><text x="8.3960%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="8.2389%" y="581" width="0.0372%" height="15" fill="rgb(220,39,43)" fg:x="887" fg:w="4"/><text x="8.4889%" y="591.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (3 samples, 0.03%)</title><rect x="8.3411%" y="581" width="0.0279%" height="15" fill="rgb(229,68,48)" fg:x="898" fg:w="3"/><text x="8.5911%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_free (4 samples, 0.04%)</title><rect x="8.5361%" y="565" width="0.0372%" height="15" fill="rgb(252,8,32)" fg:x="919" fg:w="4"/><text x="8.7861%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.08%)</title><rect x="8.5733%" y="565" width="0.0836%" height="15" fill="rgb(223,20,43)" fg:x="923" fg:w="9"/><text x="8.8233%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="8.6569%" y="565" width="0.0186%" height="15" fill="rgb(229,81,49)" fg:x="932" fg:w="2"/><text x="8.9069%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="8.6755%" y="565" width="0.0186%" height="15" fill="rgb(236,28,36)" fg:x="934" fg:w="2"/><text x="8.9255%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="8.6940%" y="565" width="0.0186%" height="15" fill="rgb(249,185,26)" fg:x="936" fg:w="2"/><text x="8.9440%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="8.6940%" y="549" width="0.0186%" height="15" fill="rgb(249,174,33)" fg:x="936" fg:w="2"/><text x="8.9440%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.19%)</title><rect x="8.7126%" y="565" width="0.1858%" height="15" fill="rgb(233,201,37)" fg:x="938" fg:w="20"/><text x="8.9626%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="8.8984%" y="565" width="0.0279%" height="15" fill="rgb(221,78,26)" fg:x="958" fg:w="3"/><text x="9.1484%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,349 samples, 12.53%)</title><rect x="8.9262%" y="565" width="12.5302%" height="15" fill="rgb(250,127,30)" fg:x="961" fg:w="1349"/><text x="9.1762%" y="575.50">libsystem_platform...</text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="21.4750%" y="565" width="0.0372%" height="15" fill="rgb(230,49,44)" fg:x="2312" fg:w="4"/><text x="21.7250%" y="575.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.04%)</title><rect x="21.4750%" y="549" width="0.0372%" height="15" fill="rgb(229,67,23)" fg:x="2312" fg:w="4"/><text x="21.7250%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="21.4843%" y="533" width="0.0279%" height="15" fill="rgb(249,83,47)" fg:x="2313" fg:w="3"/><text x="21.7343%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="21.4936%" y="517" width="0.0186%" height="15" fill="rgb(215,43,3)" fg:x="2314" fg:w="2"/><text x="21.7436%" y="527.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="21.5122%" y="565" width="0.0372%" height="15" fill="rgb(238,154,13)" fg:x="2316" fg:w="4"/><text x="21.7622%" y="575.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="21.5122%" y="549" width="0.0372%" height="15" fill="rgb(219,56,2)" fg:x="2316" fg:w="4"/><text x="21.7622%" y="559.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="21.5122%" y="533" width="0.0372%" height="15" fill="rgb(233,0,4)" fg:x="2316" fg:w="4"/><text x="21.7622%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.04%)</title><rect x="21.5122%" y="517" width="0.0372%" height="15" fill="rgb(235,30,7)" fg:x="2316" fg:w="4"/><text x="21.7622%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.04%)</title><rect x="21.5122%" y="501" width="0.0372%" height="15" fill="rgb(250,79,13)" fg:x="2316" fg:w="4"/><text x="21.7622%" y="511.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (5 samples, 0.05%)</title><rect x="21.5586%" y="565" width="0.0464%" height="15" fill="rgb(211,146,34)" fg:x="2321" fg:w="5"/><text x="21.8086%" y="575.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="21.6422%" y="533" width="0.0186%" height="15" fill="rgb(228,22,38)" fg:x="2330" fg:w="2"/><text x="21.8922%" y="543.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (2 samples, 0.02%)</title><rect x="21.6608%" y="533" width="0.0186%" height="15" fill="rgb(235,168,5)" fg:x="2332" fg:w="2"/><text x="21.9108%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="21.7444%" y="517" width="0.0279%" height="15" fill="rgb(221,155,16)" fg:x="2341" fg:w="3"/><text x="21.9944%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="21.7722%" y="517" width="0.0186%" height="15" fill="rgb(215,215,53)" fg:x="2344" fg:w="2"/><text x="22.0222%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="21.7908%" y="517" width="0.0186%" height="15" fill="rgb(223,4,10)" fg:x="2346" fg:w="2"/><text x="22.0408%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="21.8094%" y="517" width="0.0372%" height="15" fill="rgb(234,103,6)" fg:x="2348" fg:w="4"/><text x="22.0594%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="21.8466%" y="517" width="0.0279%" height="15" fill="rgb(227,97,0)" fg:x="2352" fg:w="3"/><text x="22.0966%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="21.9116%" y="501" width="0.0186%" height="15" fill="rgb(234,150,53)" fg:x="2359" fg:w="2"/><text x="22.1616%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="21.9302%" y="501" width="0.0372%" height="15" fill="rgb(228,201,54)" fg:x="2361" fg:w="4"/><text x="22.1802%" y="511.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (4 samples, 0.04%)</title><rect x="22.0230%" y="485" width="0.0372%" height="15" fill="rgb(222,22,37)" fg:x="2371" fg:w="4"/><text x="22.2730%" y="495.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.07%)</title><rect x="22.0695%" y="469" width="0.0650%" height="15" fill="rgb(237,53,32)" fg:x="2376" fg:w="7"/><text x="22.3195%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (7 samples, 0.07%)</title><rect x="22.0695%" y="453" width="0.0650%" height="15" fill="rgb(233,25,53)" fg:x="2376" fg:w="7"/><text x="22.3195%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`madvise (7 samples, 0.07%)</title><rect x="22.0695%" y="437" width="0.0650%" height="15" fill="rgb(210,40,34)" fg:x="2376" fg:w="7"/><text x="22.3195%" y="447.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="22.1345%" y="453" width="0.0464%" height="15" fill="rgb(241,220,44)" fg:x="2383" fg:w="5"/><text x="22.3845%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.03%)</title><rect x="22.1531%" y="437" width="0.0279%" height="15" fill="rgb(235,28,35)" fg:x="2385" fg:w="3"/><text x="22.4031%" y="447.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (14 samples, 0.13%)</title><rect x="22.0602%" y="485" width="0.1300%" height="15" fill="rgb(210,56,17)" fg:x="2375" fg:w="14"/><text x="22.3102%" y="495.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (6 samples, 0.06%)</title><rect x="22.1345%" y="469" width="0.0557%" height="15" fill="rgb(224,130,29)" fg:x="2383" fg:w="6"/><text x="22.3845%" y="479.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="22.4317%" y="469" width="0.0186%" height="15" fill="rgb(235,212,8)" fg:x="2415" fg:w="2"/><text x="22.6817%" y="479.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="22.4317%" y="453" width="0.0186%" height="15" fill="rgb(223,33,50)" fg:x="2415" fg:w="2"/><text x="22.6817%" y="463.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::context::Stack as core::default::Default&gt;::default (6 samples, 0.06%)</title><rect x="22.4503%" y="469" width="0.0557%" height="15" fill="rgb(219,149,13)" fg:x="2417" fg:w="6"/><text x="22.7003%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.06%)</title><rect x="22.4503%" y="453" width="0.0557%" height="15" fill="rgb(250,156,29)" fg:x="2417" fg:w="6"/><text x="22.7003%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.05%)</title><rect x="22.4596%" y="437" width="0.0464%" height="15" fill="rgb(216,193,19)" fg:x="2418" fg:w="5"/><text x="22.7096%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="22.4875%" y="421" width="0.0186%" height="15" fill="rgb(216,135,14)" fg:x="2421" fg:w="2"/><text x="22.7375%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="22.5246%" y="453" width="0.0186%" height="15" fill="rgb(241,47,5)" fg:x="2425" fg:w="2"/><text x="22.7746%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.04%)</title><rect x="22.5525%" y="437" width="0.0372%" height="15" fill="rgb(233,42,35)" fg:x="2428" fg:w="4"/><text x="22.8025%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.04%)</title><rect x="22.5525%" y="421" width="0.0372%" height="15" fill="rgb(231,13,6)" fg:x="2428" fg:w="4"/><text x="22.8025%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="22.5711%" y="405" width="0.0186%" height="15" fill="rgb(207,181,40)" fg:x="2430" fg:w="2"/><text x="22.8211%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="22.5711%" y="389" width="0.0186%" height="15" fill="rgb(254,173,49)" fg:x="2430" fg:w="2"/><text x="22.8211%" y="399.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.09%)</title><rect x="22.5153%" y="469" width="0.0929%" height="15" fill="rgb(221,1,38)" fg:x="2424" fg:w="10"/><text x="22.7653%" y="479.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="22.5432%" y="453" width="0.0650%" height="15" fill="rgb(206,124,46)" fg:x="2427" fg:w="7"/><text x="22.7932%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.02%)</title><rect x="22.5896%" y="437" width="0.0186%" height="15" fill="rgb(249,21,11)" fg:x="2432" fg:w="2"/><text x="22.8396%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="22.6361%" y="453" width="0.0279%" height="15" fill="rgb(222,201,40)" fg:x="2437" fg:w="3"/><text x="22.8861%" y="463.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (6 samples, 0.06%)</title><rect x="22.6268%" y="469" width="0.0557%" height="15" fill="rgb(235,61,29)" fg:x="2436" fg:w="6"/><text x="22.8768%" y="479.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="22.6639%" y="453" width="0.0186%" height="15" fill="rgb(219,207,3)" fg:x="2440" fg:w="2"/><text x="22.9139%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.05%)</title><rect x="22.7104%" y="453" width="0.0464%" height="15" fill="rgb(222,56,46)" fg:x="2445" fg:w="5"/><text x="22.9604%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.04%)</title><rect x="22.7197%" y="437" width="0.0372%" height="15" fill="rgb(239,76,54)" fg:x="2446" fg:w="4"/><text x="22.9697%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="22.7383%" y="421" width="0.0186%" height="15" fill="rgb(231,124,27)" fg:x="2448" fg:w="2"/><text x="22.9883%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="22.7568%" y="453" width="0.0186%" height="15" fill="rgb(249,195,6)" fg:x="2450" fg:w="2"/><text x="23.0068%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.46%)</title><rect x="22.7754%" y="453" width="0.4551%" height="15" fill="rgb(237,174,47)" fg:x="2452" fg:w="49"/><text x="23.0254%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="23.2398%" y="453" width="0.0279%" height="15" fill="rgb(206,201,31)" fg:x="2502" fg:w="3"/><text x="23.4898%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (26 samples, 0.24%)</title><rect x="23.3141%" y="357" width="0.2415%" height="15" fill="rgb(231,57,52)" fg:x="2510" fg:w="26"/><text x="23.5641%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (26 samples, 0.24%)</title><rect x="23.3141%" y="341" width="0.2415%" height="15" fill="rgb(248,177,22)" fg:x="2510" fg:w="26"/><text x="23.5641%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.25%)</title><rect x="23.3141%" y="373" width="0.2508%" height="15" fill="rgb(215,211,37)" fg:x="2510" fg:w="27"/><text x="23.5641%" y="383.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (44 samples, 0.41%)</title><rect x="23.3141%" y="437" width="0.4087%" height="15" fill="rgb(241,128,51)" fg:x="2510" fg:w="44"/><text x="23.5641%" y="447.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (44 samples, 0.41%)</title><rect x="23.3141%" y="421" width="0.4087%" height="15" fill="rgb(227,165,31)" fg:x="2510" fg:w="44"/><text x="23.5641%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (44 samples, 0.41%)</title><rect x="23.3141%" y="405" width="0.4087%" height="15" fill="rgb(228,167,24)" fg:x="2510" fg:w="44"/><text x="23.5641%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (44 samples, 0.41%)</title><rect x="23.3141%" y="389" width="0.4087%" height="15" fill="rgb(228,143,12)" fg:x="2510" fg:w="44"/><text x="23.5641%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.16%)</title><rect x="23.5649%" y="373" width="0.1579%" height="15" fill="rgb(249,149,8)" fg:x="2537" fg:w="17"/><text x="23.8149%" y="383.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (52 samples, 0.48%)</title><rect x="23.2863%" y="453" width="0.4830%" height="15" fill="rgb(243,35,44)" fg:x="2507" fg:w="52"/><text x="23.5363%" y="463.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (4 samples, 0.04%)</title><rect x="23.7321%" y="437" width="0.0372%" height="15" fill="rgb(246,89,9)" fg:x="2555" fg:w="4"/><text x="23.9821%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (3 samples, 0.03%)</title><rect x="23.7414%" y="421" width="0.0279%" height="15" fill="rgb(233,213,13)" fg:x="2556" fg:w="3"/><text x="23.9914%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="23.7507%" y="405" width="0.0186%" height="15" fill="rgb(233,141,41)" fg:x="2557" fg:w="2"/><text x="24.0007%" y="415.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (118 samples, 1.10%)</title><rect x="22.6825%" y="469" width="1.0960%" height="15" fill="rgb(239,167,4)" fg:x="2442" fg:w="118"/><text x="22.9325%" y="479.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (7 samples, 0.07%)</title><rect x="23.7786%" y="469" width="0.0650%" height="15" fill="rgb(209,217,16)" fg:x="2560" fg:w="7"/><text x="24.0286%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="23.8529%" y="453" width="0.0186%" height="15" fill="rgb(219,88,35)" fg:x="2568" fg:w="2"/><text x="24.1029%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.04%)</title><rect x="23.8900%" y="437" width="0.0372%" height="15" fill="rgb(220,193,23)" fg:x="2572" fg:w="4"/><text x="24.1400%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="23.8900%" y="421" width="0.0372%" height="15" fill="rgb(230,90,52)" fg:x="2572" fg:w="4"/><text x="24.1400%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.10%)</title><rect x="23.8714%" y="453" width="0.1022%" height="15" fill="rgb(252,106,19)" fg:x="2570" fg:w="11"/><text x="24.1214%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.03%)</title><rect x="23.9458%" y="437" width="0.0279%" height="15" fill="rgb(206,74,20)" fg:x="2578" fg:w="3"/><text x="24.1958%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (15 samples, 0.14%)</title><rect x="23.8436%" y="469" width="0.1393%" height="15" fill="rgb(230,138,44)" fg:x="2567" fg:w="15"/><text x="24.0936%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="24.0015%" y="453" width="0.0279%" height="15" fill="rgb(235,182,43)" fg:x="2584" fg:w="3"/><text x="24.2515%" y="463.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (239 samples, 2.22%)</title><rect x="21.8837%" y="517" width="2.2200%" height="15" fill="rgb(242,16,51)" fg:x="2356" fg:w="239"/><text x="22.1337%" y="527.50">n..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (230 samples, 2.14%)</title><rect x="21.9673%" y="501" width="2.1364%" height="15" fill="rgb(248,9,4)" fg:x="2365" fg:w="230"/><text x="22.2173%" y="511.50">n..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (204 samples, 1.89%)</title><rect x="22.2088%" y="485" width="1.8949%" height="15" fill="rgb(210,31,22)" fg:x="2391" fg:w="204"/><text x="22.4588%" y="495.50">n..</text></g><g><title>neopoligengine`minijinja::vm::state::State::get_template (13 samples, 0.12%)</title><rect x="23.9829%" y="469" width="0.1208%" height="15" fill="rgb(239,54,39)" fg:x="2582" fg:w="13"/><text x="24.2329%" y="479.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::get (8 samples, 0.07%)</title><rect x="24.0294%" y="453" width="0.0743%" height="15" fill="rgb(230,99,41)" fg:x="2587" fg:w="8"/><text x="24.2794%" y="463.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="24.1315%" y="517" width="0.0186%" height="15" fill="rgb(253,106,12)" fg:x="2598" fg:w="2"/><text x="24.3815%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="24.1594%" y="501" width="0.0186%" height="15" fill="rgb(213,46,41)" fg:x="2601" fg:w="2"/><text x="24.4094%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="24.1780%" y="453" width="0.0186%" height="15" fill="rgb(215,133,35)" fg:x="2603" fg:w="2"/><text x="24.4280%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="24.1780%" y="501" width="0.0279%" height="15" fill="rgb(213,28,5)" fg:x="2603" fg:w="3"/><text x="24.4280%" y="511.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="24.1780%" y="485" width="0.0279%" height="15" fill="rgb(215,77,49)" fg:x="2603" fg:w="3"/><text x="24.4280%" y="495.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="24.1780%" y="469" width="0.0279%" height="15" fill="rgb(248,100,22)" fg:x="2603" fg:w="3"/><text x="24.4280%" y="479.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (9 samples, 0.08%)</title><rect x="24.1501%" y="517" width="0.0836%" height="15" fill="rgb(208,67,9)" fg:x="2600" fg:w="9"/><text x="24.4001%" y="527.50"></text></g><g><title>neopoligengine`minijinja::utils::write_with_html_escaping (3 samples, 0.03%)</title><rect x="24.2058%" y="501" width="0.0279%" height="15" fill="rgb(219,133,21)" fg:x="2606" fg:w="3"/><text x="24.4558%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="24.2430%" y="501" width="0.0186%" height="15" fill="rgb(246,46,29)" fg:x="2610" fg:w="2"/><text x="24.4930%" y="511.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (5 samples, 0.05%)</title><rect x="24.2337%" y="517" width="0.0464%" height="15" fill="rgb(246,185,52)" fg:x="2609" fg:w="5"/><text x="24.4837%" y="527.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="24.2616%" y="501" width="0.0186%" height="15" fill="rgb(252,136,11)" fg:x="2612" fg:w="2"/><text x="24.5116%" y="511.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (5 samples, 0.05%)</title><rect x="24.3544%" y="485" width="0.0464%" height="15" fill="rgb(219,138,53)" fg:x="2622" fg:w="5"/><text x="24.6044%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (13 samples, 0.12%)</title><rect x="24.2894%" y="517" width="0.1208%" height="15" fill="rgb(211,51,23)" fg:x="2615" fg:w="13"/><text x="24.5394%" y="527.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (7 samples, 0.07%)</title><rect x="24.3452%" y="501" width="0.0650%" height="15" fill="rgb(247,221,28)" fg:x="2621" fg:w="7"/><text x="24.5952%" y="511.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (304 samples, 2.82%)</title><rect x="21.6051%" y="565" width="2.8237%" height="15" fill="rgb(251,222,45)" fg:x="2326" fg:w="304"/><text x="21.8551%" y="575.50">ne..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (302 samples, 2.81%)</title><rect x="21.6236%" y="549" width="2.8051%" height="15" fill="rgb(217,162,53)" fg:x="2328" fg:w="302"/><text x="21.8736%" y="559.50">ne..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (296 samples, 2.75%)</title><rect x="21.6794%" y="533" width="2.7494%" height="15" fill="rgb(229,93,14)" fg:x="2334" fg:w="296"/><text x="21.9294%" y="543.50">ne..</text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (2 samples, 0.02%)</title><rect x="24.4102%" y="517" width="0.0186%" height="15" fill="rgb(209,67,49)" fg:x="2628" fg:w="2"/><text x="24.6602%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.07%)</title><rect x="24.5309%" y="549" width="0.0743%" height="15" fill="rgb(213,87,29)" fg:x="2641" fg:w="8"/><text x="24.7809%" y="559.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (11 samples, 0.10%)</title><rect x="24.6052%" y="549" width="0.1022%" height="15" fill="rgb(205,151,52)" fg:x="2649" fg:w="11"/><text x="24.8552%" y="559.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (32 samples, 0.30%)</title><rect x="24.4473%" y="565" width="0.2972%" height="15" fill="rgb(253,215,39)" fg:x="2632" fg:w="32"/><text x="24.6973%" y="575.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.04%)</title><rect x="24.7074%" y="549" width="0.0372%" height="15" fill="rgb(221,220,41)" fg:x="2660" fg:w="4"/><text x="24.9574%" y="559.50"></text></g><g><title>neopoligengine`alloc::sync::arcinner_layout_for_value_layout (2 samples, 0.02%)</title><rect x="24.7631%" y="565" width="0.0186%" height="15" fill="rgb(218,133,21)" fg:x="2666" fg:w="2"/><text x="25.0131%" y="575.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (3 samples, 0.03%)</title><rect x="24.7817%" y="565" width="0.0279%" height="15" fill="rgb(221,193,43)" fg:x="2668" fg:w="3"/><text x="25.0317%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="24.8096%" y="549" width="0.0186%" height="15" fill="rgb(240,128,52)" fg:x="2671" fg:w="2"/><text x="25.0596%" y="559.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (4 samples, 0.04%)</title><rect x="24.8096%" y="565" width="0.0372%" height="15" fill="rgb(253,114,12)" fg:x="2671" fg:w="4"/><text x="25.0596%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="24.8653%" y="549" width="0.0279%" height="15" fill="rgb(215,223,47)" fg:x="2677" fg:w="3"/><text x="25.1153%" y="559.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (6 samples, 0.06%)</title><rect x="24.8467%" y="565" width="0.0557%" height="15" fill="rgb(248,225,23)" fg:x="2675" fg:w="6"/><text x="25.0967%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="25.2276%" y="549" width="0.0279%" height="15" fill="rgb(250,108,0)" fg:x="2716" fg:w="3"/><text x="25.4776%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.06%)</title><rect x="25.2554%" y="549" width="0.0557%" height="15" fill="rgb(228,208,7)" fg:x="2719" fg:w="6"/><text x="25.5054%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (16 samples, 0.15%)</title><rect x="25.3205%" y="549" width="0.1486%" height="15" fill="rgb(244,45,10)" fg:x="2726" fg:w="16"/><text x="25.5705%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.05%)</title><rect x="25.4226%" y="533" width="0.0464%" height="15" fill="rgb(207,125,25)" fg:x="2737" fg:w="5"/><text x="25.6726%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.12%)</title><rect x="25.4691%" y="549" width="0.1208%" height="15" fill="rgb(210,195,18)" fg:x="2742" fg:w="13"/><text x="25.7191%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.15%)</title><rect x="25.6084%" y="549" width="0.1486%" height="15" fill="rgb(249,80,12)" fg:x="2757" fg:w="16"/><text x="25.8584%" y="559.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="25.7849%" y="549" width="0.0372%" height="15" fill="rgb(221,65,9)" fg:x="2776" fg:w="4"/><text x="26.0349%" y="559.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::context::Stack as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="25.8313%" y="549" width="0.0186%" height="15" fill="rgb(235,49,36)" fg:x="2781" fg:w="2"/><text x="26.0813%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="25.8313%" y="533" width="0.0186%" height="15" fill="rgb(225,32,20)" fg:x="2781" fg:w="2"/><text x="26.0813%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="25.8313%" y="517" width="0.0186%" height="15" fill="rgb(215,141,46)" fg:x="2781" fg:w="2"/><text x="26.0813%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="25.8313%" y="501" width="0.0186%" height="15" fill="rgb(250,160,47)" fg:x="2781" fg:w="2"/><text x="26.0813%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="25.8592%" y="517" width="0.0186%" height="15" fill="rgb(216,222,40)" fg:x="2784" fg:w="2"/><text x="26.1092%" y="527.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (3 samples, 0.03%)</title><rect x="25.9149%" y="517" width="0.0279%" height="15" fill="rgb(234,217,39)" fg:x="2790" fg:w="3"/><text x="26.1649%" y="527.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (7 samples, 0.07%)</title><rect x="25.9428%" y="517" width="0.0650%" height="15" fill="rgb(207,178,40)" fg:x="2793" fg:w="7"/><text x="26.1928%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="26.1750%" y="501" width="0.0186%" height="15" fill="rgb(221,136,13)" fg:x="2818" fg:w="2"/><text x="26.4250%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.05%)</title><rect x="26.1936%" y="501" width="0.0464%" height="15" fill="rgb(249,199,10)" fg:x="2820" fg:w="5"/><text x="26.4436%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="26.2400%" y="501" width="0.0279%" height="15" fill="rgb(249,222,13)" fg:x="2825" fg:w="3"/><text x="26.4900%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="26.2679%" y="501" width="0.0279%" height="15" fill="rgb(244,185,38)" fg:x="2828" fg:w="3"/><text x="26.5179%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.12%)</title><rect x="26.2957%" y="501" width="0.1208%" height="15" fill="rgb(236,202,9)" fg:x="2831" fg:w="13"/><text x="26.5457%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="26.4165%" y="501" width="0.0372%" height="15" fill="rgb(250,229,37)" fg:x="2844" fg:w="4"/><text x="26.6665%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="26.4537%" y="501" width="0.0186%" height="15" fill="rgb(206,174,23)" fg:x="2848" fg:w="2"/><text x="26.7037%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="26.4722%" y="501" width="0.0186%" height="15" fill="rgb(211,33,43)" fg:x="2850" fg:w="2"/><text x="26.7222%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="26.4908%" y="501" width="0.0279%" height="15" fill="rgb(245,58,50)" fg:x="2852" fg:w="3"/><text x="26.7408%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="26.6394%" y="485" width="0.0186%" height="15" fill="rgb(244,68,36)" fg:x="2868" fg:w="2"/><text x="26.8894%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="26.6394%" y="469" width="0.0186%" height="15" fill="rgb(232,229,15)" fg:x="2868" fg:w="2"/><text x="26.8894%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="26.6580%" y="485" width="0.0186%" height="15" fill="rgb(254,30,23)" fg:x="2870" fg:w="2"/><text x="26.9080%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (4 samples, 0.04%)</title><rect x="26.7323%" y="469" width="0.0372%" height="15" fill="rgb(235,160,14)" fg:x="2878" fg:w="4"/><text x="26.9823%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="26.7695%" y="469" width="0.0186%" height="15" fill="rgb(212,155,44)" fg:x="2882" fg:w="2"/><text x="27.0195%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.02%)</title><rect x="26.7695%" y="453" width="0.0186%" height="15" fill="rgb(226,2,50)" fg:x="2882" fg:w="2"/><text x="27.0195%" y="463.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="26.7973%" y="469" width="0.0186%" height="15" fill="rgb(234,177,6)" fg:x="2885" fg:w="2"/><text x="27.0473%" y="479.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (13 samples, 0.12%)</title><rect x="26.8159%" y="469" width="0.1208%" height="15" fill="rgb(217,24,9)" fg:x="2887" fg:w="13"/><text x="27.0659%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="26.9831%" y="453" width="0.0186%" height="15" fill="rgb(220,13,46)" fg:x="2905" fg:w="2"/><text x="27.2331%" y="463.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (59 samples, 0.55%)</title><rect x="27.0017%" y="453" width="0.5480%" height="15" fill="rgb(239,221,27)" fg:x="2907" fg:w="59"/><text x="27.2517%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (59 samples, 0.55%)</title><rect x="27.0017%" y="437" width="0.5480%" height="15" fill="rgb(222,198,25)" fg:x="2907" fg:w="59"/><text x="27.2517%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (59 samples, 0.55%)</title><rect x="27.0017%" y="421" width="0.5480%" height="15" fill="rgb(211,99,13)" fg:x="2907" fg:w="59"/><text x="27.2517%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.07%)</title><rect x="27.6890%" y="405" width="0.0650%" height="15" fill="rgb(232,111,31)" fg:x="2981" fg:w="7"/><text x="27.9390%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.05%)</title><rect x="27.7076%" y="389" width="0.0464%" height="15" fill="rgb(245,82,37)" fg:x="2983" fg:w="5"/><text x="27.9576%" y="399.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.21%)</title><rect x="27.5590%" y="437" width="0.2136%" height="15" fill="rgb(227,149,46)" fg:x="2967" fg:w="23"/><text x="27.8090%" y="447.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.19%)</title><rect x="27.5868%" y="421" width="0.1858%" height="15" fill="rgb(218,36,50)" fg:x="2970" fg:w="20"/><text x="27.8368%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="27.7540%" y="405" width="0.0186%" height="15" fill="rgb(226,80,48)" fg:x="2988" fg:w="2"/><text x="28.0040%" y="415.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="27.7726%" y="437" width="0.0186%" height="15" fill="rgb(238,224,15)" fg:x="2990" fg:w="2"/><text x="28.0226%" y="447.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (93 samples, 0.86%)</title><rect x="26.9367%" y="469" width="0.8638%" height="15" fill="rgb(241,136,10)" fg:x="2900" fg:w="93"/><text x="27.1867%" y="479.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (26 samples, 0.24%)</title><rect x="27.5590%" y="453" width="0.2415%" height="15" fill="rgb(208,32,45)" fg:x="2967" fg:w="26"/><text x="27.8090%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="28.2185%" y="453" width="0.0186%" height="15" fill="rgb(207,135,9)" fg:x="3038" fg:w="2"/><text x="28.4685%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.06%)</title><rect x="28.2370%" y="453" width="0.0557%" height="15" fill="rgb(206,86,44)" fg:x="3040" fg:w="6"/><text x="28.4870%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.06%)</title><rect x="28.3021%" y="453" width="0.0557%" height="15" fill="rgb(245,177,15)" fg:x="3047" fg:w="6"/><text x="28.5521%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="28.3578%" y="453" width="0.0279%" height="15" fill="rgb(206,64,50)" fg:x="3053" fg:w="3"/><text x="28.6078%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="28.3857%" y="453" width="0.0186%" height="15" fill="rgb(234,36,40)" fg:x="3056" fg:w="2"/><text x="28.6357%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="28.4042%" y="453" width="0.0279%" height="15" fill="rgb(213,64,8)" fg:x="3058" fg:w="3"/><text x="28.6542%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="28.4042%" y="437" width="0.0279%" height="15" fill="rgb(210,75,36)" fg:x="3058" fg:w="3"/><text x="28.6542%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="28.4321%" y="453" width="0.0186%" height="15" fill="rgb(229,88,21)" fg:x="3061" fg:w="2"/><text x="28.6821%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="28.4600%" y="421" width="0.0186%" height="15" fill="rgb(252,204,47)" fg:x="3064" fg:w="2"/><text x="28.7100%" y="431.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::context::Stack as core::default::Default&gt;::default (7 samples, 0.07%)</title><rect x="28.4507%" y="453" width="0.0650%" height="15" fill="rgb(208,77,27)" fg:x="3063" fg:w="7"/><text x="28.7007%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.07%)</title><rect x="28.4507%" y="437" width="0.0650%" height="15" fill="rgb(221,76,26)" fg:x="3063" fg:w="7"/><text x="28.7007%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="28.4785%" y="421" width="0.0372%" height="15" fill="rgb(225,139,18)" fg:x="3066" fg:w="4"/><text x="28.7285%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="28.4785%" y="405" width="0.0372%" height="15" fill="rgb(230,137,11)" fg:x="3066" fg:w="4"/><text x="28.7285%" y="415.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="28.5250%" y="453" width="0.0186%" height="15" fill="rgb(212,28,1)" fg:x="3071" fg:w="2"/><text x="28.7750%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.03%)</title><rect x="28.5993%" y="405" width="0.0279%" height="15" fill="rgb(248,164,17)" fg:x="3079" fg:w="3"/><text x="28.8493%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.04%)</title><rect x="28.5993%" y="421" width="0.0372%" height="15" fill="rgb(222,171,42)" fg:x="3079" fg:w="4"/><text x="28.8493%" y="431.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.11%)</title><rect x="28.5436%" y="453" width="0.1115%" height="15" fill="rgb(243,84,45)" fg:x="3073" fg:w="12"/><text x="28.7936%" y="463.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (9 samples, 0.08%)</title><rect x="28.5714%" y="437" width="0.0836%" height="15" fill="rgb(252,49,23)" fg:x="3076" fg:w="9"/><text x="28.8214%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.02%)</title><rect x="28.6364%" y="421" width="0.0186%" height="15" fill="rgb(215,19,7)" fg:x="3083" fg:w="2"/><text x="28.8864%" y="431.50"></text></g><g><title>neopoligengine`core::option::Option&lt;&amp;T&gt;::cloned (6 samples, 0.06%)</title><rect x="28.6550%" y="453" width="0.0557%" height="15" fill="rgb(238,81,41)" fg:x="3085" fg:w="6"/><text x="28.9050%" y="463.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::ValueRepr&gt; (3 samples, 0.03%)</title><rect x="28.7200%" y="453" width="0.0279%" height="15" fill="rgb(210,199,37)" fg:x="3092" fg:w="3"/><text x="28.9700%" y="463.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::get (2 samples, 0.02%)</title><rect x="28.7479%" y="453" width="0.0186%" height="15" fill="rgb(244,192,49)" fg:x="3095" fg:w="2"/><text x="28.9979%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="28.8129%" y="437" width="0.0372%" height="15" fill="rgb(226,211,11)" fg:x="3102" fg:w="4"/><text x="29.0629%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (6 samples, 0.06%)</title><rect x="28.8501%" y="437" width="0.0557%" height="15" fill="rgb(236,162,54)" fg:x="3106" fg:w="6"/><text x="29.1001%" y="447.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (17 samples, 0.16%)</title><rect x="28.7665%" y="453" width="0.1579%" height="15" fill="rgb(220,229,9)" fg:x="3097" fg:w="17"/><text x="29.0165%" y="463.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="28.9058%" y="437" width="0.0186%" height="15" fill="rgb(250,87,22)" fg:x="3112" fg:w="2"/><text x="29.1558%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="29.0823%" y="437" width="0.0186%" height="15" fill="rgb(239,43,17)" fg:x="3131" fg:w="2"/><text x="29.3323%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.11%)</title><rect x="29.1195%" y="437" width="0.1115%" height="15" fill="rgb(231,177,25)" fg:x="3135" fg:w="12"/><text x="29.3695%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.05%)</title><rect x="29.1845%" y="421" width="0.0464%" height="15" fill="rgb(219,179,1)" fg:x="3142" fg:w="5"/><text x="29.4345%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="29.2402%" y="437" width="0.0279%" height="15" fill="rgb(238,219,53)" fg:x="3148" fg:w="3"/><text x="29.4902%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (225 samples, 2.09%)</title><rect x="29.2681%" y="437" width="2.0899%" height="15" fill="rgb(232,167,36)" fg:x="3151" fg:w="225"/><text x="29.5181%" y="447.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="31.4137%" y="421" width="0.0372%" height="15" fill="rgb(244,19,51)" fg:x="3382" fg:w="4"/><text x="31.6637%" y="431.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="31.4602%" y="421" width="0.0186%" height="15" fill="rgb(224,6,22)" fg:x="3387" fg:w="2"/><text x="31.7102%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (14 samples, 0.13%)</title><rect x="31.3673%" y="437" width="0.1300%" height="15" fill="rgb(224,145,5)" fg:x="3377" fg:w="14"/><text x="31.6173%" y="447.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="31.4787%" y="421" width="0.0186%" height="15" fill="rgb(234,130,49)" fg:x="3389" fg:w="2"/><text x="31.7287%" y="431.50"></text></g><g><title>neopoligengine`core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="31.4973%" y="437" width="0.0186%" height="15" fill="rgb(254,6,2)" fg:x="3391" fg:w="2"/><text x="31.7473%" y="447.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="31.5159%" y="437" width="0.0186%" height="15" fill="rgb(208,96,46)" fg:x="3393" fg:w="2"/><text x="31.7659%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="31.5437%" y="421" width="0.0279%" height="15" fill="rgb(239,3,39)" fg:x="3396" fg:w="3"/><text x="31.7937%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="31.5809%" y="389" width="0.0186%" height="15" fill="rgb(233,210,1)" fg:x="3400" fg:w="2"/><text x="31.8309%" y="399.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (8 samples, 0.07%)</title><rect x="31.5345%" y="437" width="0.0743%" height="15" fill="rgb(244,137,37)" fg:x="3395" fg:w="8"/><text x="31.7845%" y="447.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="31.5716%" y="421" width="0.0372%" height="15" fill="rgb(240,136,2)" fg:x="3399" fg:w="4"/><text x="31.8216%" y="431.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="31.5809%" y="405" width="0.0279%" height="15" fill="rgb(239,18,37)" fg:x="3400" fg:w="3"/><text x="31.8309%" y="415.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::state::State&gt; (3 samples, 0.03%)</title><rect x="31.6366%" y="389" width="0.0279%" height="15" fill="rgb(218,185,22)" fg:x="3406" fg:w="3"/><text x="31.8866%" y="399.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::vm::context::Frame&gt; (3 samples, 0.03%)</title><rect x="31.6366%" y="373" width="0.0279%" height="15" fill="rgb(225,218,4)" fg:x="3406" fg:w="3"/><text x="31.8866%" y="383.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="31.6366%" y="357" width="0.0279%" height="15" fill="rgb(230,182,32)" fg:x="3406" fg:w="3"/><text x="31.8866%" y="367.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.03%)</title><rect x="31.6366%" y="341" width="0.0279%" height="15" fill="rgb(242,56,43)" fg:x="3406" fg:w="3"/><text x="31.8866%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="31.6366%" y="325" width="0.0279%" height="15" fill="rgb(233,99,24)" fg:x="3406" fg:w="3"/><text x="31.8866%" y="335.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="31.7852%" y="373" width="0.0186%" height="15" fill="rgb(234,209,42)" fg:x="3422" fg:w="2"/><text x="32.0352%" y="383.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="31.7852%" y="357" width="0.0186%" height="15" fill="rgb(227,7,12)" fg:x="3422" fg:w="2"/><text x="32.0352%" y="367.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (3 samples, 0.03%)</title><rect x="31.8224%" y="373" width="0.0279%" height="15" fill="rgb(245,203,43)" fg:x="3426" fg:w="3"/><text x="32.0724%" y="383.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="31.8317%" y="357" width="0.0186%" height="15" fill="rgb(238,205,33)" fg:x="3427" fg:w="2"/><text x="32.0817%" y="367.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (9 samples, 0.08%)</title><rect x="31.8503%" y="373" width="0.0836%" height="15" fill="rgb(231,56,7)" fg:x="3429" fg:w="9"/><text x="32.1003%" y="383.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (2 samples, 0.02%)</title><rect x="31.9339%" y="373" width="0.0186%" height="15" fill="rgb(244,186,29)" fg:x="3438" fg:w="2"/><text x="32.1839%" y="383.50"></text></g><g><title>neopoligengine`minijinja::value::Value::call_method (40 samples, 0.37%)</title><rect x="31.6088%" y="437" width="0.3715%" height="15" fill="rgb(234,111,31)" fg:x="3403" fg:w="40"/><text x="31.8588%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (39 samples, 0.36%)</title><rect x="31.6181%" y="421" width="0.3623%" height="15" fill="rgb(241,149,10)" fg:x="3404" fg:w="39"/><text x="31.8681%" y="431.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (37 samples, 0.34%)</title><rect x="31.6366%" y="405" width="0.3437%" height="15" fill="rgb(249,206,44)" fg:x="3406" fg:w="37"/><text x="31.8866%" y="415.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (34 samples, 0.32%)</title><rect x="31.6645%" y="389" width="0.3158%" height="15" fill="rgb(251,153,30)" fg:x="3409" fg:w="34"/><text x="31.9145%" y="399.50"></text></g><g><title>neopoligengine`minijinja::vm::state::State::get_template (3 samples, 0.03%)</title><rect x="31.9524%" y="373" width="0.0279%" height="15" fill="rgb(239,152,38)" fg:x="3440" fg:w="3"/><text x="32.2024%" y="383.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::get (3 samples, 0.03%)</title><rect x="31.9524%" y="357" width="0.0279%" height="15" fill="rgb(249,139,47)" fg:x="3440" fg:w="3"/><text x="32.2024%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="31.9896%" y="421" width="0.0186%" height="15" fill="rgb(244,64,35)" fg:x="3444" fg:w="2"/><text x="32.2396%" y="431.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (4 samples, 0.04%)</title><rect x="31.9803%" y="437" width="0.0372%" height="15" fill="rgb(216,46,15)" fg:x="3443" fg:w="4"/><text x="32.2303%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.04%)</title><rect x="32.0639%" y="421" width="0.0372%" height="15" fill="rgb(250,74,19)" fg:x="3452" fg:w="4"/><text x="32.3139%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.03%)</title><rect x="32.0732%" y="405" width="0.0279%" height="15" fill="rgb(249,42,33)" fg:x="3453" fg:w="3"/><text x="32.3232%" y="415.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="32.1103%" y="421" width="0.0279%" height="15" fill="rgb(242,149,17)" fg:x="3457" fg:w="3"/><text x="32.3603%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="32.1382%" y="341" width="0.0186%" height="15" fill="rgb(244,29,21)" fg:x="3460" fg:w="2"/><text x="32.3882%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="32.1382%" y="325" width="0.0186%" height="15" fill="rgb(220,130,37)" fg:x="3460" fg:w="2"/><text x="32.3882%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.05%)</title><rect x="32.1382%" y="357" width="0.0464%" height="15" fill="rgb(211,67,2)" fg:x="3460" fg:w="5"/><text x="32.3882%" y="367.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (108 samples, 1.00%)</title><rect x="32.1382%" y="421" width="1.0032%" height="15" fill="rgb(235,68,52)" fg:x="3460" fg:w="108"/><text x="32.3882%" y="431.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (108 samples, 1.00%)</title><rect x="32.1382%" y="405" width="1.0032%" height="15" fill="rgb(246,142,3)" fg:x="3460" fg:w="108"/><text x="32.3882%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (108 samples, 1.00%)</title><rect x="32.1382%" y="389" width="1.0032%" height="15" fill="rgb(241,25,7)" fg:x="3460" fg:w="108"/><text x="32.3882%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (108 samples, 1.00%)</title><rect x="32.1382%" y="373" width="1.0032%" height="15" fill="rgb(242,119,39)" fg:x="3460" fg:w="108"/><text x="32.3882%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (103 samples, 0.96%)</title><rect x="32.1847%" y="357" width="0.9567%" height="15" fill="rgb(241,98,45)" fg:x="3465" fg:w="103"/><text x="32.4347%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="33.1507%" y="405" width="0.0186%" height="15" fill="rgb(254,28,30)" fg:x="3569" fg:w="2"/><text x="33.4007%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="33.1785%" y="389" width="0.0186%" height="15" fill="rgb(241,142,54)" fg:x="3572" fg:w="2"/><text x="33.4285%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="33.2064%" y="357" width="0.0186%" height="15" fill="rgb(222,85,15)" fg:x="3575" fg:w="2"/><text x="33.4564%" y="367.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::enclose (11 samples, 0.10%)</title><rect x="33.1414%" y="421" width="0.1022%" height="15" fill="rgb(210,85,47)" fg:x="3568" fg:w="11"/><text x="33.3914%" y="431.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store_if_missing (8 samples, 0.07%)</title><rect x="33.1692%" y="405" width="0.0743%" height="15" fill="rgb(224,206,25)" fg:x="3571" fg:w="8"/><text x="33.4192%" y="415.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (4 samples, 0.04%)</title><rect x="33.2064%" y="389" width="0.0372%" height="15" fill="rgb(243,201,19)" fg:x="3575" fg:w="4"/><text x="33.4564%" y="399.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (4 samples, 0.04%)</title><rect x="33.2064%" y="373" width="0.0372%" height="15" fill="rgb(236,59,4)" fg:x="3575" fg:w="4"/><text x="33.4564%" y="383.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (2 samples, 0.02%)</title><rect x="33.2250%" y="357" width="0.0186%" height="15" fill="rgb(254,179,45)" fg:x="3577" fg:w="2"/><text x="33.4750%" y="367.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="33.2993%" y="405" width="0.0186%" height="15" fill="rgb(226,14,10)" fg:x="3585" fg:w="2"/><text x="33.5493%" y="415.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (143 samples, 1.33%)</title><rect x="32.0268%" y="437" width="1.3283%" height="15" fill="rgb(244,27,41)" fg:x="3448" fg:w="143"/><text x="32.2768%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (12 samples, 0.11%)</title><rect x="33.2435%" y="421" width="0.1115%" height="15" fill="rgb(235,35,32)" fg:x="3579" fg:w="12"/><text x="33.4935%" y="431.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (4 samples, 0.04%)</title><rect x="33.3179%" y="405" width="0.0372%" height="15" fill="rgb(218,68,31)" fg:x="3587" fg:w="4"/><text x="33.5679%" y="415.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="33.3364%" y="389" width="0.0186%" height="15" fill="rgb(207,120,37)" fg:x="3589" fg:w="2"/><text x="33.5864%" y="399.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (481 samples, 4.47%)</title><rect x="28.9244%" y="453" width="4.4678%" height="15" fill="rgb(227,98,0)" fg:x="3114" fg:w="481"/><text x="29.1744%" y="463.50">neopo..</text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (4 samples, 0.04%)</title><rect x="33.3550%" y="437" width="0.0372%" height="15" fill="rgb(207,7,3)" fg:x="3591" fg:w="4"/><text x="33.6050%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::incr_depth (2 samples, 0.02%)</title><rect x="33.3922%" y="453" width="0.0186%" height="15" fill="rgb(206,98,19)" fg:x="3595" fg:w="2"/><text x="33.6422%" y="463.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (4 samples, 0.04%)</title><rect x="33.4107%" y="453" width="0.0372%" height="15" fill="rgb(217,5,26)" fg:x="3597" fg:w="4"/><text x="33.6607%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="33.4665%" y="437" width="0.0186%" height="15" fill="rgb(235,190,38)" fg:x="3603" fg:w="2"/><text x="33.7165%" y="447.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="33.4850%" y="437" width="0.0186%" height="15" fill="rgb(247,86,24)" fg:x="3605" fg:w="2"/><text x="33.7350%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.06%)</title><rect x="33.5408%" y="421" width="0.0557%" height="15" fill="rgb(205,101,16)" fg:x="3611" fg:w="6"/><text x="33.7908%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.05%)</title><rect x="33.5501%" y="405" width="0.0464%" height="15" fill="rgb(246,168,33)" fg:x="3612" fg:w="5"/><text x="33.8001%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="33.5594%" y="389" width="0.0372%" height="15" fill="rgb(231,114,1)" fg:x="3613" fg:w="4"/><text x="33.8094%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="33.6058%" y="421" width="0.0279%" height="15" fill="rgb(207,184,53)" fg:x="3618" fg:w="3"/><text x="33.8558%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 0.14%)</title><rect x="33.5036%" y="437" width="0.1393%" height="15" fill="rgb(224,95,51)" fg:x="3607" fg:w="15"/><text x="33.7536%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (21 samples, 0.20%)</title><rect x="33.4572%" y="453" width="0.1951%" height="15" fill="rgb(212,188,45)" fg:x="3602" fg:w="21"/><text x="33.7072%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.18%)</title><rect x="33.6801%" y="437" width="0.1765%" height="15" fill="rgb(223,154,38)" fg:x="3626" fg:w="19"/><text x="33.9301%" y="447.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (5 samples, 0.05%)</title><rect x="33.8566%" y="437" width="0.0464%" height="15" fill="rgb(251,22,52)" fg:x="3645" fg:w="5"/><text x="34.1066%" y="447.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (673 samples, 6.25%)</title><rect x="27.8098%" y="469" width="6.2512%" height="15" fill="rgb(229,209,22)" fg:x="2994" fg:w="673"/><text x="28.0598%" y="479.50">neopolig..</text></g><g><title>neopoligengine`minijinja::vm::state::State::get_template (44 samples, 0.41%)</title><rect x="33.6522%" y="453" width="0.4087%" height="15" fill="rgb(234,138,34)" fg:x="3623" fg:w="44"/><text x="33.9022%" y="463.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::get (17 samples, 0.16%)</title><rect x="33.9030%" y="437" width="0.1579%" height="15" fill="rgb(212,95,11)" fg:x="3650" fg:w="17"/><text x="34.1530%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (811 samples, 7.53%)</title><rect x="26.5465%" y="501" width="7.5330%" height="15" fill="rgb(240,179,47)" fg:x="2858" fg:w="811"/><text x="26.7965%" y="511.50">neopoligen..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (796 samples, 7.39%)</title><rect x="26.6859%" y="485" width="7.3936%" height="15" fill="rgb(240,163,11)" fg:x="2873" fg:w="796"/><text x="26.9359%" y="495.50">neopoligen..</text></g><g><title>neopoligengine`DYLD-STUB$$malloc (2 samples, 0.02%)</title><rect x="34.0795%" y="501" width="0.0186%" height="15" fill="rgb(236,37,12)" fg:x="3669" fg:w="2"/><text x="34.3295%" y="511.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (4 samples, 0.04%)</title><rect x="34.0981%" y="501" width="0.0372%" height="15" fill="rgb(232,164,16)" fg:x="3671" fg:w="4"/><text x="34.3481%" y="511.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (3 samples, 0.03%)</title><rect x="34.1724%" y="501" width="0.0279%" height="15" fill="rgb(244,205,15)" fg:x="3679" fg:w="3"/><text x="34.4224%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="34.3396%" y="469" width="0.0464%" height="15" fill="rgb(223,117,47)" fg:x="3697" fg:w="5"/><text x="34.5896%" y="479.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (8 samples, 0.07%)</title><rect x="34.3953%" y="469" width="0.0743%" height="15" fill="rgb(244,107,35)" fg:x="3703" fg:w="8"/><text x="34.6453%" y="479.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (4 samples, 0.04%)</title><rect x="34.4696%" y="469" width="0.0372%" height="15" fill="rgb(205,140,8)" fg:x="3711" fg:w="4"/><text x="34.7196%" y="479.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (34 samples, 0.32%)</title><rect x="34.2003%" y="501" width="0.3158%" height="15" fill="rgb(228,84,46)" fg:x="3682" fg:w="34"/><text x="34.4503%" y="511.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (20 samples, 0.19%)</title><rect x="34.3303%" y="485" width="0.1858%" height="15" fill="rgb(254,188,9)" fg:x="3696" fg:w="20"/><text x="34.5803%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (919 samples, 8.54%)</title><rect x="26.0078%" y="517" width="8.5361%" height="15" fill="rgb(206,112,54)" fg:x="2800" fg:w="919"/><text x="26.2578%" y="527.50">neopoligengi..</text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (3 samples, 0.03%)</title><rect x="34.5161%" y="501" width="0.0279%" height="15" fill="rgb(216,84,49)" fg:x="3716" fg:w="3"/><text x="34.7661%" y="511.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (938 samples, 8.71%)</title><rect x="25.8499%" y="549" width="8.7126%" height="15" fill="rgb(214,194,35)" fg:x="2783" fg:w="938"/><text x="26.0999%" y="559.50">neopoligengi..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (937 samples, 8.70%)</title><rect x="25.8592%" y="533" width="8.7033%" height="15" fill="rgb(249,28,3)" fg:x="2784" fg:w="937"/><text x="26.1092%" y="543.50">neopoligengi..</text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (2 samples, 0.02%)</title><rect x="34.5439%" y="517" width="0.0186%" height="15" fill="rgb(222,56,52)" fg:x="3719" fg:w="2"/><text x="34.7939%" y="527.50"></text></g><g><title>neopoligengine`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.03%)</title><rect x="34.5625%" y="549" width="0.0279%" height="15" fill="rgb(245,217,50)" fg:x="3721" fg:w="3"/><text x="34.8125%" y="559.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (4 samples, 0.04%)</title><rect x="34.6368%" y="533" width="0.0372%" height="15" fill="rgb(213,201,24)" fg:x="3729" fg:w="4"/><text x="34.8868%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.11%)</title><rect x="34.5904%" y="549" width="0.1115%" height="15" fill="rgb(248,116,28)" fg:x="3724" fg:w="12"/><text x="34.8404%" y="559.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.03%)</title><rect x="34.6740%" y="533" width="0.0279%" height="15" fill="rgb(219,72,43)" fg:x="3733" fg:w="3"/><text x="34.9240%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (2 samples, 0.02%)</title><rect x="34.6833%" y="517" width="0.0186%" height="15" fill="rgb(209,138,14)" fg:x="3734" fg:w="2"/><text x="34.9333%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (16 samples, 0.15%)</title><rect x="34.7204%" y="469" width="0.1486%" height="15" fill="rgb(222,18,33)" fg:x="3738" fg:w="16"/><text x="34.9704%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (16 samples, 0.15%)</title><rect x="34.7204%" y="453" width="0.1486%" height="15" fill="rgb(213,199,7)" fg:x="3738" fg:w="16"/><text x="34.9704%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (41 samples, 0.38%)</title><rect x="34.7204%" y="485" width="0.3808%" height="15" fill="rgb(250,110,10)" fg:x="3738" fg:w="41"/><text x="34.9704%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (25 samples, 0.23%)</title><rect x="34.8690%" y="469" width="0.2322%" height="15" fill="rgb(248,123,6)" fg:x="3754" fg:w="25"/><text x="35.1190%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (25 samples, 0.23%)</title><rect x="34.8690%" y="453" width="0.2322%" height="15" fill="rgb(206,91,31)" fg:x="3754" fg:w="25"/><text x="35.1190%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (475 samples, 4.41%)</title><rect x="34.7204%" y="501" width="4.4120%" height="15" fill="rgb(211,154,13)" fg:x="3738" fg:w="475"/><text x="34.9704%" y="511.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (434 samples, 4.03%)</title><rect x="35.1012%" y="485" width="4.0312%" height="15" fill="rgb(225,148,7)" fg:x="3779" fg:w="434"/><text x="35.3512%" y="495.50">libs..</text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (478 samples, 4.44%)</title><rect x="34.7018%" y="549" width="4.4399%" height="15" fill="rgb(220,160,43)" fg:x="3736" fg:w="478"/><text x="34.9518%" y="559.50">neopo..</text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (476 samples, 4.42%)</title><rect x="34.7204%" y="533" width="4.4213%" height="15" fill="rgb(213,52,39)" fg:x="3738" fg:w="476"/><text x="34.9704%" y="543.50">neopo..</text></g><g><title>libsystem_malloc.dylib`_realloc (476 samples, 4.42%)</title><rect x="34.7204%" y="517" width="4.4213%" height="15" fill="rgb(243,137,7)" fg:x="3738" fg:w="476"/><text x="34.9704%" y="527.50">libsy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="39.1603%" y="533" width="0.0186%" height="15" fill="rgb(230,79,13)" fg:x="4216" fg:w="2"/><text x="39.4103%" y="543.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (3 samples, 0.03%)</title><rect x="39.1603%" y="549" width="0.0279%" height="15" fill="rgb(247,105,23)" fg:x="4216" fg:w="3"/><text x="39.4103%" y="559.50"></text></g><g><title>neopoligengine`minijinja::loader::LoaderStore::get (2 samples, 0.02%)</title><rect x="39.1882%" y="549" width="0.0186%" height="15" fill="rgb(223,179,41)" fg:x="4219" fg:w="2"/><text x="39.4382%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (6 samples, 0.06%)</title><rect x="39.2904%" y="533" width="0.0557%" height="15" fill="rgb(218,9,34)" fg:x="4230" fg:w="6"/><text x="39.5404%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.04%)</title><rect x="39.3089%" y="517" width="0.0372%" height="15" fill="rgb(222,106,8)" fg:x="4232" fg:w="4"/><text x="39.5589%" y="527.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="39.3554%" y="533" width="0.0186%" height="15" fill="rgb(211,220,0)" fg:x="4237" fg:w="2"/><text x="39.6054%" y="543.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="39.3554%" y="517" width="0.0186%" height="15" fill="rgb(229,52,16)" fg:x="4237" fg:w="2"/><text x="39.6054%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="39.3554%" y="501" width="0.0186%" height="15" fill="rgb(212,155,18)" fg:x="4237" fg:w="2"/><text x="39.6054%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="39.3554%" y="485" width="0.0186%" height="15" fill="rgb(242,21,14)" fg:x="4237" fg:w="2"/><text x="39.6054%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (2 samples, 0.02%)</title><rect x="39.3740%" y="533" width="0.0186%" height="15" fill="rgb(222,19,48)" fg:x="4239" fg:w="2"/><text x="39.6240%" y="543.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (2 samples, 0.02%)</title><rect x="39.3740%" y="517" width="0.0186%" height="15" fill="rgb(232,45,27)" fg:x="4239" fg:w="2"/><text x="39.6240%" y="527.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (2 samples, 0.02%)</title><rect x="39.3740%" y="501" width="0.0186%" height="15" fill="rgb(249,103,42)" fg:x="4239" fg:w="2"/><text x="39.6240%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="39.3740%" y="485" width="0.0186%" height="15" fill="rgb(246,81,33)" fg:x="4239" fg:w="2"/><text x="39.6240%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="39.4204%" y="517" width="0.0279%" height="15" fill="rgb(252,33,42)" fg:x="4244" fg:w="3"/><text x="39.6704%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="39.4483%" y="517" width="0.0279%" height="15" fill="rgb(209,212,41)" fg:x="4247" fg:w="3"/><text x="39.6983%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="39.5504%" y="501" width="0.0186%" height="15" fill="rgb(207,154,6)" fg:x="4258" fg:w="2"/><text x="39.8004%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="39.5504%" y="485" width="0.0186%" height="15" fill="rgb(223,64,47)" fg:x="4258" fg:w="2"/><text x="39.8004%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="39.5690%" y="501" width="0.0464%" height="15" fill="rgb(211,161,38)" fg:x="4260" fg:w="5"/><text x="39.8190%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="39.6340%" y="501" width="0.0279%" height="15" fill="rgb(219,138,40)" fg:x="4267" fg:w="3"/><text x="39.8840%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="39.6433%" y="485" width="0.0186%" height="15" fill="rgb(241,228,46)" fg:x="4268" fg:w="2"/><text x="39.8933%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::enclose (36 samples, 0.33%)</title><rect x="39.3925%" y="533" width="0.3344%" height="15" fill="rgb(223,209,38)" fg:x="4241" fg:w="36"/><text x="39.6425%" y="543.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store_if_missing (24 samples, 0.22%)</title><rect x="39.5040%" y="517" width="0.2229%" height="15" fill="rgb(236,164,45)" fg:x="4253" fg:w="24"/><text x="39.7540%" y="527.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (6 samples, 0.06%)</title><rect x="39.6712%" y="501" width="0.0557%" height="15" fill="rgb(231,15,5)" fg:x="4271" fg:w="6"/><text x="39.9212%" y="511.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (2 samples, 0.02%)</title><rect x="39.7083%" y="485" width="0.0186%" height="15" fill="rgb(252,35,15)" fg:x="4275" fg:w="2"/><text x="39.9583%" y="495.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (2 samples, 0.02%)</title><rect x="39.7083%" y="469" width="0.0186%" height="15" fill="rgb(248,181,18)" fg:x="4275" fg:w="2"/><text x="39.9583%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="39.7362%" y="517" width="0.0186%" height="15" fill="rgb(233,39,42)" fg:x="4278" fg:w="2"/><text x="39.9862%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="39.7548%" y="517" width="0.0186%" height="15" fill="rgb(238,110,33)" fg:x="4280" fg:w="2"/><text x="40.0048%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.04%)</title><rect x="39.7734%" y="517" width="0.0372%" height="15" fill="rgb(233,195,10)" fg:x="4282" fg:w="4"/><text x="40.0234%" y="527.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.04%)</title><rect x="39.8198%" y="517" width="0.0372%" height="15" fill="rgb(254,105,3)" fg:x="4287" fg:w="4"/><text x="40.0698%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="39.8755%" y="501" width="0.0464%" height="15" fill="rgb(221,225,9)" fg:x="4293" fg:w="5"/><text x="40.1255%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="39.9220%" y="501" width="0.0186%" height="15" fill="rgb(224,227,45)" fg:x="4298" fg:w="2"/><text x="40.1720%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="39.9963%" y="485" width="0.0186%" height="15" fill="rgb(229,198,43)" fg:x="4306" fg:w="2"/><text x="40.2463%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (90 samples, 0.84%)</title><rect x="39.2068%" y="549" width="0.8360%" height="15" fill="rgb(206,209,35)" fg:x="4221" fg:w="90"/><text x="39.4568%" y="559.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (34 samples, 0.32%)</title><rect x="39.7269%" y="533" width="0.3158%" height="15" fill="rgb(245,195,53)" fg:x="4277" fg:w="34"/><text x="39.9769%" y="543.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (20 samples, 0.19%)</title><rect x="39.8570%" y="517" width="0.1858%" height="15" fill="rgb(240,92,26)" fg:x="4291" fg:w="20"/><text x="40.1070%" y="527.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.09%)</title><rect x="39.9498%" y="501" width="0.0929%" height="15" fill="rgb(207,40,23)" fg:x="4301" fg:w="10"/><text x="40.1998%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="40.0242%" y="485" width="0.0186%" height="15" fill="rgb(223,111,35)" fg:x="4309" fg:w="2"/><text x="40.2742%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="40.0520%" y="533" width="0.0186%" height="15" fill="rgb(229,147,28)" fg:x="4312" fg:w="2"/><text x="40.3020%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="40.0706%" y="533" width="0.0279%" height="15" fill="rgb(211,29,28)" fg:x="4314" fg:w="3"/><text x="40.3206%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.12%)</title><rect x="40.0985%" y="533" width="0.1208%" height="15" fill="rgb(228,72,33)" fg:x="4317" fg:w="13"/><text x="40.3485%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="40.2192%" y="533" width="0.0186%" height="15" fill="rgb(205,214,31)" fg:x="4330" fg:w="2"/><text x="40.4692%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.07%)</title><rect x="40.3678%" y="517" width="0.0650%" height="15" fill="rgb(224,111,15)" fg:x="4346" fg:w="7"/><text x="40.6178%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.04%)</title><rect x="40.4328%" y="517" width="0.0372%" height="15" fill="rgb(253,21,26)" fg:x="4353" fg:w="4"/><text x="40.6828%" y="527.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memcmp (2 samples, 0.02%)</title><rect x="40.4700%" y="517" width="0.0186%" height="15" fill="rgb(245,139,43)" fg:x="4357" fg:w="2"/><text x="40.7200%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="40.5257%" y="501" width="0.0372%" height="15" fill="rgb(252,170,7)" fg:x="4363" fg:w="4"/><text x="40.7757%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (16 samples, 0.15%)</title><rect x="40.4886%" y="517" width="0.1486%" height="15" fill="rgb(231,118,14)" fg:x="4359" fg:w="16"/><text x="40.7386%" y="527.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.07%)</title><rect x="40.5629%" y="501" width="0.0743%" height="15" fill="rgb(238,83,0)" fg:x="4367" fg:w="8"/><text x="40.8129%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (5 samples, 0.05%)</title><rect x="40.5907%" y="485" width="0.0464%" height="15" fill="rgb(221,39,39)" fg:x="4370" fg:w="5"/><text x="40.8407%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="40.6186%" y="469" width="0.0186%" height="15" fill="rgb(222,119,46)" fg:x="4373" fg:w="2"/><text x="40.8686%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.07%)</title><rect x="40.6836%" y="485" width="0.0650%" height="15" fill="rgb(222,165,49)" fg:x="4380" fg:w="7"/><text x="40.9336%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="40.7487%" y="485" width="0.0186%" height="15" fill="rgb(219,113,52)" fg:x="4387" fg:w="2"/><text x="40.9987%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::enclose (83 samples, 0.77%)</title><rect x="40.0427%" y="549" width="0.7709%" height="15" fill="rgb(214,7,15)" fg:x="4311" fg:w="83"/><text x="40.2927%" y="559.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store_if_missing (59 samples, 0.55%)</title><rect x="40.2657%" y="533" width="0.5480%" height="15" fill="rgb(235,32,4)" fg:x="4335" fg:w="59"/><text x="40.5157%" y="543.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (19 samples, 0.18%)</title><rect x="40.6372%" y="517" width="0.1765%" height="15" fill="rgb(238,90,54)" fg:x="4375" fg:w="19"/><text x="40.8872%" y="527.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (15 samples, 0.14%)</title><rect x="40.6743%" y="501" width="0.1393%" height="15" fill="rgb(213,208,19)" fg:x="4379" fg:w="15"/><text x="40.9243%" y="511.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (5 samples, 0.05%)</title><rect x="40.7672%" y="485" width="0.0464%" height="15" fill="rgb(233,156,4)" fg:x="4389" fg:w="5"/><text x="41.0172%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (2 samples, 0.02%)</title><rect x="40.8137%" y="549" width="0.0186%" height="15" fill="rgb(207,194,5)" fg:x="4394" fg:w="2"/><text x="41.0637%" y="559.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (2 samples, 0.02%)</title><rect x="40.8137%" y="533" width="0.0186%" height="15" fill="rgb(206,111,30)" fg:x="4394" fg:w="2"/><text x="41.0637%" y="543.50"></text></g><g><title>neopoligengine`core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="40.8137%" y="517" width="0.0186%" height="15" fill="rgb(243,70,54)" fg:x="4394" fg:w="2"/><text x="41.0637%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="40.8508%" y="533" width="0.0186%" height="15" fill="rgb(242,28,8)" fg:x="4398" fg:w="2"/><text x="41.1008%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.07%)</title><rect x="40.8694%" y="533" width="0.0650%" height="15" fill="rgb(219,106,18)" fg:x="4400" fg:w="7"/><text x="41.1194%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="40.9344%" y="533" width="0.0186%" height="15" fill="rgb(244,222,10)" fg:x="4407" fg:w="2"/><text x="41.1844%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.12%)</title><rect x="40.9623%" y="533" width="0.1208%" height="15" fill="rgb(236,179,52)" fg:x="4410" fg:w="13"/><text x="41.2123%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.03%)</title><rect x="41.0552%" y="517" width="0.0279%" height="15" fill="rgb(213,23,39)" fg:x="4420" fg:w="3"/><text x="41.3052%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.05%)</title><rect x="41.1016%" y="517" width="0.0464%" height="15" fill="rgb(238,48,10)" fg:x="4425" fg:w="5"/><text x="41.3516%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.03%)</title><rect x="41.1202%" y="501" width="0.0279%" height="15" fill="rgb(251,196,23)" fg:x="4427" fg:w="3"/><text x="41.3702%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="41.1481%" y="517" width="0.0464%" height="15" fill="rgb(250,152,24)" fg:x="4430" fg:w="5"/><text x="41.3981%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="41.2781%" y="501" width="0.0186%" height="15" fill="rgb(209,150,17)" fg:x="4444" fg:w="2"/><text x="41.5281%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="41.2967%" y="501" width="0.0186%" height="15" fill="rgb(234,202,34)" fg:x="4446" fg:w="2"/><text x="41.5467%" y="511.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (58 samples, 0.54%)</title><rect x="40.8415%" y="549" width="0.5387%" height="15" fill="rgb(253,148,53)" fg:x="4397" fg:w="58"/><text x="41.0915%" y="559.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (31 samples, 0.29%)</title><rect x="41.0923%" y="533" width="0.2879%" height="15" fill="rgb(218,129,16)" fg:x="4424" fg:w="31"/><text x="41.3423%" y="543.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.16%)</title><rect x="41.2224%" y="517" width="0.1579%" height="15" fill="rgb(216,85,19)" fg:x="4438" fg:w="17"/><text x="41.4724%" y="527.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.07%)</title><rect x="41.3153%" y="501" width="0.0650%" height="15" fill="rgb(235,228,7)" fg:x="4448" fg:w="7"/><text x="41.5653%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="41.4174%" y="517" width="0.0186%" height="15" fill="rgb(245,175,0)" fg:x="4459" fg:w="2"/><text x="41.6674%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="41.4174%" y="501" width="0.0186%" height="15" fill="rgb(208,168,36)" fg:x="4459" fg:w="2"/><text x="41.6674%" y="511.50"></text></g><g><title>neopoligengine`alloc::fmt::format::format_inner (2 samples, 0.02%)</title><rect x="41.4546%" y="501" width="0.0186%" height="15" fill="rgb(246,171,24)" fg:x="4463" fg:w="2"/><text x="41.7046%" y="511.50"></text></g><g><title>neopoligengine`core::fmt::write (2 samples, 0.02%)</title><rect x="41.4546%" y="485" width="0.0186%" height="15" fill="rgb(215,142,24)" fg:x="4463" fg:w="2"/><text x="41.7046%" y="495.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="41.4453%" y="517" width="0.0372%" height="15" fill="rgb(250,187,7)" fg:x="4462" fg:w="4"/><text x="41.6953%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="41.5010%" y="501" width="0.0186%" height="15" fill="rgb(228,66,33)" fg:x="4468" fg:w="2"/><text x="41.7510%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="41.5568%" y="485" width="0.0279%" height="15" fill="rgb(234,215,21)" fg:x="4474" fg:w="3"/><text x="41.8068%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="41.5846%" y="485" width="0.0186%" height="15" fill="rgb(222,191,20)" fg:x="4477" fg:w="2"/><text x="41.8346%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="41.6311%" y="469" width="0.0186%" height="15" fill="rgb(245,79,54)" fg:x="4482" fg:w="2"/><text x="41.8811%" y="479.50"></text></g><g><title>neopoligengine`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="41.6218%" y="485" width="0.0372%" height="15" fill="rgb(240,10,37)" fg:x="4481" fg:w="4"/><text x="41.8718%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="41.7239%" y="437" width="0.0279%" height="15" fill="rgb(214,192,32)" fg:x="4492" fg:w="3"/><text x="41.9739%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="41.7518%" y="437" width="0.0186%" height="15" fill="rgb(209,36,54)" fg:x="4495" fg:w="2"/><text x="42.0018%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="41.8447%" y="405" width="0.0186%" height="15" fill="rgb(220,10,11)" fg:x="4505" fg:w="2"/><text x="42.0947%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="41.8726%" y="405" width="0.0186%" height="15" fill="rgb(221,106,17)" fg:x="4508" fg:w="2"/><text x="42.1226%" y="415.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_set::SyntaxSet&gt; (46 samples, 0.43%)</title><rect x="41.4917%" y="517" width="0.4273%" height="15" fill="rgb(251,142,44)" fg:x="4467" fg:w="46"/><text x="41.7417%" y="527.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_set::SyntaxReference&gt; (40 samples, 0.37%)</title><rect x="41.5475%" y="501" width="0.3715%" height="15" fill="rgb(238,13,15)" fg:x="4473" fg:w="40"/><text x="41.7975%" y="511.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;once_cell::sync::OnceCell&lt;syntect::parsing::syntax_set::LazyContexts&gt;&gt; (28 samples, 0.26%)</title><rect x="41.6589%" y="485" width="0.2601%" height="15" fill="rgb(208,107,27)" fg:x="4485" fg:w="28"/><text x="41.9089%" y="495.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_definition::Context&gt; (25 samples, 0.23%)</title><rect x="41.6868%" y="469" width="0.2322%" height="15" fill="rgb(205,136,37)" fg:x="4488" fg:w="25"/><text x="41.9368%" y="479.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_definition::Pattern&gt; (23 samples, 0.21%)</title><rect x="41.7054%" y="453" width="0.2136%" height="15" fill="rgb(250,205,27)" fg:x="4490" fg:w="23"/><text x="41.9554%" y="463.50"></text></g><g><title>neopoligengine`onig_free (16 samples, 0.15%)</title><rect x="41.7704%" y="437" width="0.1486%" height="15" fill="rgb(210,80,43)" fg:x="4497" fg:w="16"/><text x="42.0204%" y="447.50"></text></g><g><title>neopoligengine`onig_free_body (14 samples, 0.13%)</title><rect x="41.7890%" y="421" width="0.1300%" height="15" fill="rgb(247,160,36)" fg:x="4499" fg:w="14"/><text x="42.0390%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="41.9004%" y="405" width="0.0186%" height="15" fill="rgb(234,13,49)" fg:x="4511" fg:w="2"/><text x="42.1504%" y="415.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.03%)</title><rect x="41.9283%" y="469" width="0.0279%" height="15" fill="rgb(234,122,0)" fg:x="4514" fg:w="3"/><text x="42.1783%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="41.9654%" y="453" width="0.0186%" height="15" fill="rgb(207,146,38)" fg:x="4518" fg:w="2"/><text x="42.2154%" y="463.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="41.9840%" y="453" width="0.0186%" height="15" fill="rgb(207,177,25)" fg:x="4520" fg:w="2"/><text x="42.2340%" y="463.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.02%)</title><rect x="42.0026%" y="453" width="0.0186%" height="15" fill="rgb(211,178,42)" fg:x="4522" fg:w="2"/><text x="42.2526%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="42.0490%" y="405" width="0.0186%" height="15" fill="rgb(230,69,54)" fg:x="4527" fg:w="2"/><text x="42.2990%" y="415.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="42.0769%" y="389" width="0.0372%" height="15" fill="rgb(214,135,41)" fg:x="4530" fg:w="4"/><text x="42.3269%" y="399.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (13 samples, 0.12%)</title><rect x="42.0212%" y="453" width="0.1208%" height="15" fill="rgb(237,67,25)" fg:x="4524" fg:w="13"/><text x="42.2712%" y="463.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (10 samples, 0.09%)</title><rect x="42.0490%" y="437" width="0.0929%" height="15" fill="rgb(222,189,50)" fg:x="4527" fg:w="10"/><text x="42.2990%" y="447.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (10 samples, 0.09%)</title><rect x="42.0490%" y="421" width="0.0929%" height="15" fill="rgb(245,148,34)" fg:x="4527" fg:w="10"/><text x="42.2990%" y="431.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.07%)</title><rect x="42.0676%" y="405" width="0.0743%" height="15" fill="rgb(222,29,6)" fg:x="4529" fg:w="8"/><text x="42.3176%" y="415.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="42.1234%" y="389" width="0.0186%" height="15" fill="rgb(221,189,43)" fg:x="4535" fg:w="2"/><text x="42.3734%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="42.1512%" y="437" width="0.0186%" height="15" fill="rgb(207,36,27)" fg:x="4538" fg:w="2"/><text x="42.4012%" y="447.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.05%)</title><rect x="42.1419%" y="453" width="0.0464%" height="15" fill="rgb(217,90,24)" fg:x="4537" fg:w="5"/><text x="42.3919%" y="463.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.02%)</title><rect x="42.1698%" y="437" width="0.0186%" height="15" fill="rgb(224,66,35)" fg:x="4540" fg:w="2"/><text x="42.4198%" y="447.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="42.1698%" y="421" width="0.0186%" height="15" fill="rgb(221,13,50)" fg:x="4540" fg:w="2"/><text x="42.4198%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.04%)</title><rect x="42.2441%" y="421" width="0.0372%" height="15" fill="rgb(236,68,49)" fg:x="4548" fg:w="4"/><text x="42.4941%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="42.2905%" y="389" width="0.0279%" height="15" fill="rgb(229,146,28)" fg:x="4553" fg:w="3"/><text x="42.5405%" y="399.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.05%)</title><rect x="42.2905%" y="405" width="0.0464%" height="15" fill="rgb(225,31,38)" fg:x="4553" fg:w="5"/><text x="42.5405%" y="415.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (15 samples, 0.14%)</title><rect x="42.2813%" y="421" width="0.1393%" height="15" fill="rgb(250,208,3)" fg:x="4552" fg:w="15"/><text x="42.5313%" y="431.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (9 samples, 0.08%)</title><rect x="42.3370%" y="405" width="0.0836%" height="15" fill="rgb(246,54,23)" fg:x="4558" fg:w="9"/><text x="42.5870%" y="415.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_map (24 samples, 0.22%)</title><rect x="42.2348%" y="437" width="0.2229%" height="15" fill="rgb(243,76,11)" fg:x="4547" fg:w="24"/><text x="42.4848%" y="447.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="42.4392%" y="421" width="0.0186%" height="15" fill="rgb(245,21,50)" fg:x="4569" fg:w="2"/><text x="42.6892%" y="431.50"></text></g><g><title>neopoligengine`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="42.4392%" y="405" width="0.0186%" height="15" fill="rgb(228,9,43)" fg:x="4569" fg:w="2"/><text x="42.6892%" y="415.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (462 samples, 4.29%)</title><rect x="41.9562%" y="469" width="4.2913%" height="15" fill="rgb(208,100,47)" fg:x="4517" fg:w="462"/><text x="42.2062%" y="479.50">neopo..</text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (435 samples, 4.04%)</title><rect x="42.2069%" y="453" width="4.0405%" height="15" fill="rgb(232,26,8)" fg:x="4544" fg:w="435"/><text x="42.4569%" y="463.50">neop..</text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (408 samples, 3.79%)</title><rect x="42.4577%" y="437" width="3.7897%" height="15" fill="rgb(216,166,38)" fg:x="4571" fg:w="408"/><text x="42.7077%" y="447.50">neop..</text></g><g><title>neopoligengine`syntect::dumps::_&lt;impl syntect::parsing::syntax_set::SyntaxSet&gt;::load_defaults_newlines (467 samples, 4.34%)</title><rect x="41.9190%" y="517" width="4.3377%" height="15" fill="rgb(251,202,51)" fg:x="4513" fg:w="467"/><text x="42.1690%" y="527.50">neopo..</text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (467 samples, 4.34%)</title><rect x="41.9190%" y="501" width="4.3377%" height="15" fill="rgb(254,216,34)" fg:x="4513" fg:w="467"/><text x="42.1690%" y="511.50">neopo..</text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (467 samples, 4.34%)</title><rect x="41.9190%" y="485" width="4.3377%" height="15" fill="rgb(251,32,27)" fg:x="4513" fg:w="467"/><text x="42.1690%" y="495.50">neopo..</text></g><g><title>libsystem_malloc.dylib`free_medium (17 samples, 0.16%)</title><rect x="46.2567%" y="421" width="0.1579%" height="15" fill="rgb(208,127,28)" fg:x="4980" fg:w="17"/><text x="46.5067%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.16%)</title><rect x="46.2567%" y="405" width="0.1579%" height="15" fill="rgb(224,137,22)" fg:x="4980" fg:w="17"/><text x="46.5067%" y="415.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (7 samples, 0.07%)</title><rect x="46.4146%" y="389" width="0.0650%" height="15" fill="rgb(254,70,32)" fg:x="4997" fg:w="7"/><text x="46.6646%" y="399.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (4 samples, 0.04%)</title><rect x="46.4425%" y="373" width="0.0372%" height="15" fill="rgb(229,75,37)" fg:x="5000" fg:w="4"/><text x="46.6925%" y="383.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="46.4611%" y="357" width="0.0186%" height="15" fill="rgb(252,64,23)" fg:x="5002" fg:w="2"/><text x="46.7111%" y="367.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="46.4797%" y="389" width="0.0186%" height="15" fill="rgb(232,162,48)" fg:x="5004" fg:w="2"/><text x="46.7297%" y="399.50"></text></g><g><title>neopoligengine`adler::Adler32::write_slice (2 samples, 0.02%)</title><rect x="46.5075%" y="309" width="0.0186%" height="15" fill="rgb(246,160,12)" fg:x="5007" fg:w="2"/><text x="46.7575%" y="319.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::init_tree (3 samples, 0.03%)</title><rect x="46.6933%" y="293" width="0.0279%" height="15" fill="rgb(247,166,0)" fg:x="5027" fg:w="3"/><text x="46.9433%" y="303.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::decompress (30 samples, 0.28%)</title><rect x="46.5261%" y="309" width="0.2787%" height="15" fill="rgb(249,219,21)" fg:x="5009" fg:w="30"/><text x="46.7761%" y="319.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::transfer (9 samples, 0.08%)</title><rect x="46.7212%" y="293" width="0.0836%" height="15" fill="rgb(205,209,3)" fg:x="5030" fg:w="9"/><text x="46.9712%" y="303.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_map (44 samples, 0.41%)</title><rect x="46.4146%" y="405" width="0.4087%" height="15" fill="rgb(243,44,1)" fg:x="4997" fg:w="44"/><text x="46.6646%" y="415.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (35 samples, 0.33%)</title><rect x="46.4982%" y="389" width="0.3251%" height="15" fill="rgb(206,159,16)" fg:x="5006" fg:w="35"/><text x="46.7482%" y="399.50"></text></g><g><title>neopoligengine`flate2::zio::read (35 samples, 0.33%)</title><rect x="46.4982%" y="373" width="0.3251%" height="15" fill="rgb(244,77,30)" fg:x="5006" fg:w="35"/><text x="46.7482%" y="383.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (35 samples, 0.33%)</title><rect x="46.4982%" y="357" width="0.3251%" height="15" fill="rgb(218,69,12)" fg:x="5006" fg:w="35"/><text x="46.7482%" y="367.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (35 samples, 0.33%)</title><rect x="46.4982%" y="341" width="0.3251%" height="15" fill="rgb(212,87,7)" fg:x="5006" fg:w="35"/><text x="46.7482%" y="351.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate_loop (34 samples, 0.32%)</title><rect x="46.5075%" y="325" width="0.3158%" height="15" fill="rgb(245,114,25)" fg:x="5007" fg:w="34"/><text x="46.7575%" y="335.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::transfer (2 samples, 0.02%)</title><rect x="46.8048%" y="309" width="0.0186%" height="15" fill="rgb(210,61,42)" fg:x="5039" fg:w="2"/><text x="47.0548%" y="319.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_bool (2 samples, 0.02%)</title><rect x="46.8512%" y="373" width="0.0186%" height="15" fill="rgb(211,52,33)" fg:x="5044" fg:w="2"/><text x="47.1012%" y="383.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="46.8698%" y="373" width="0.0186%" height="15" fill="rgb(234,58,33)" fg:x="5046" fg:w="2"/><text x="47.1198%" y="383.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="46.8698%" y="357" width="0.0186%" height="15" fill="rgb(220,115,36)" fg:x="5046" fg:w="2"/><text x="47.1198%" y="367.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="46.8698%" y="341" width="0.0186%" height="15" fill="rgb(243,153,54)" fg:x="5046" fg:w="2"/><text x="47.1198%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="46.9162%" y="293" width="0.0186%" height="15" fill="rgb(251,47,18)" fg:x="5051" fg:w="2"/><text x="47.1662%" y="303.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="46.9348%" y="293" width="0.0372%" height="15" fill="rgb(242,102,42)" fg:x="5053" fg:w="4"/><text x="47.1848%" y="303.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.09%)</title><rect x="46.8884%" y="373" width="0.0929%" height="15" fill="rgb(234,31,38)" fg:x="5048" fg:w="10"/><text x="47.1384%" y="383.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (10 samples, 0.09%)</title><rect x="46.8884%" y="357" width="0.0929%" height="15" fill="rgb(221,117,51)" fg:x="5048" fg:w="10"/><text x="47.1384%" y="367.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (9 samples, 0.08%)</title><rect x="46.8976%" y="341" width="0.0836%" height="15" fill="rgb(212,20,18)" fg:x="5049" fg:w="9"/><text x="47.1476%" y="351.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (8 samples, 0.07%)</title><rect x="46.9069%" y="325" width="0.0743%" height="15" fill="rgb(245,133,36)" fg:x="5050" fg:w="8"/><text x="47.1569%" y="335.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.07%)</title><rect x="46.9069%" y="309" width="0.0743%" height="15" fill="rgb(212,6,19)" fg:x="5050" fg:w="8"/><text x="47.1569%" y="319.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (5 samples, 0.05%)</title><rect x="46.9905%" y="357" width="0.0464%" height="15" fill="rgb(218,1,36)" fg:x="5059" fg:w="5"/><text x="47.2405%" y="367.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (5 samples, 0.05%)</title><rect x="46.9905%" y="341" width="0.0464%" height="15" fill="rgb(246,84,54)" fg:x="5059" fg:w="5"/><text x="47.2405%" y="351.50"></text></g><g><title>neopoligengine`flate2::zio::read (4 samples, 0.04%)</title><rect x="46.9998%" y="325" width="0.0372%" height="15" fill="rgb(242,110,6)" fg:x="5060" fg:w="4"/><text x="47.2498%" y="335.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.0184%" y="309" width="0.0186%" height="15" fill="rgb(214,47,5)" fg:x="5062" fg:w="2"/><text x="47.2684%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="47.0370%" y="341" width="0.0186%" height="15" fill="rgb(218,159,25)" fg:x="5064" fg:w="2"/><text x="47.2870%" y="351.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_bool (3 samples, 0.03%)</title><rect x="47.1206%" y="309" width="0.0279%" height="15" fill="rgb(215,211,28)" fg:x="5073" fg:w="3"/><text x="47.3706%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.1299%" y="293" width="0.0186%" height="15" fill="rgb(238,59,32)" fg:x="5074" fg:w="2"/><text x="47.3799%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.1299%" y="277" width="0.0186%" height="15" fill="rgb(226,82,3)" fg:x="5074" fg:w="2"/><text x="47.3799%" y="287.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.1299%" y="261" width="0.0186%" height="15" fill="rgb(240,164,32)" fg:x="5074" fg:w="2"/><text x="47.3799%" y="271.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.1949%" y="229" width="0.0186%" height="15" fill="rgb(232,46,7)" fg:x="5081" fg:w="2"/><text x="47.4449%" y="239.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.1949%" y="213" width="0.0186%" height="15" fill="rgb(229,129,53)" fg:x="5081" fg:w="2"/><text x="47.4449%" y="223.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.1949%" y="197" width="0.0186%" height="15" fill="rgb(234,188,29)" fg:x="5081" fg:w="2"/><text x="47.4449%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="47.1949%" y="181" width="0.0186%" height="15" fill="rgb(246,141,4)" fg:x="5081" fg:w="2"/><text x="47.4449%" y="191.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="47.2320%" y="181" width="0.0186%" height="15" fill="rgb(229,23,39)" fg:x="5085" fg:w="2"/><text x="47.4820%" y="191.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (8 samples, 0.07%)</title><rect x="47.1856%" y="245" width="0.0743%" height="15" fill="rgb(206,12,3)" fg:x="5080" fg:w="8"/><text x="47.4356%" y="255.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (5 samples, 0.05%)</title><rect x="47.2134%" y="229" width="0.0464%" height="15" fill="rgb(252,226,20)" fg:x="5083" fg:w="5"/><text x="47.4634%" y="239.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (4 samples, 0.04%)</title><rect x="47.2227%" y="213" width="0.0372%" height="15" fill="rgb(216,123,35)" fg:x="5084" fg:w="4"/><text x="47.4727%" y="223.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="47.2227%" y="197" width="0.0372%" height="15" fill="rgb(212,68,40)" fg:x="5084" fg:w="4"/><text x="47.4727%" y="207.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.09%)</title><rect x="47.1763%" y="261" width="0.0929%" height="15" fill="rgb(254,125,32)" fg:x="5079" fg:w="10"/><text x="47.4263%" y="271.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (13 samples, 0.12%)</title><rect x="47.1577%" y="293" width="0.1208%" height="15" fill="rgb(253,97,22)" fg:x="5077" fg:w="13"/><text x="47.4077%" y="303.50"></text></g><g><title>neopoligengine`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.11%)</title><rect x="47.1670%" y="277" width="0.1115%" height="15" fill="rgb(241,101,14)" fg:x="5078" fg:w="12"/><text x="47.4170%" y="287.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (17 samples, 0.16%)</title><rect x="47.1484%" y="309" width="0.1579%" height="15" fill="rgb(238,103,29)" fg:x="5076" fg:w="17"/><text x="47.3984%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.2878%" y="293" width="0.0186%" height="15" fill="rgb(233,195,47)" fg:x="5091" fg:w="2"/><text x="47.5378%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.2878%" y="277" width="0.0186%" height="15" fill="rgb(246,218,30)" fg:x="5091" fg:w="2"/><text x="47.5378%" y="287.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.2878%" y="261" width="0.0186%" height="15" fill="rgb(219,145,47)" fg:x="5091" fg:w="2"/><text x="47.5378%" y="271.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="47.3156%" y="293" width="0.0372%" height="15" fill="rgb(243,12,26)" fg:x="5094" fg:w="4"/><text x="47.5656%" y="303.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="47.3156%" y="277" width="0.0372%" height="15" fill="rgb(214,87,16)" fg:x="5094" fg:w="4"/><text x="47.5656%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.04%)</title><rect x="47.3156%" y="261" width="0.0372%" height="15" fill="rgb(208,99,42)" fg:x="5094" fg:w="4"/><text x="47.5656%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.03%)</title><rect x="47.3249%" y="245" width="0.0279%" height="15" fill="rgb(253,99,2)" fg:x="5095" fg:w="3"/><text x="47.5749%" y="255.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::decompress (6 samples, 0.06%)</title><rect x="47.3899%" y="213" width="0.0557%" height="15" fill="rgb(220,168,23)" fg:x="5102" fg:w="6"/><text x="47.6399%" y="223.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::transfer (3 samples, 0.03%)</title><rect x="47.4178%" y="197" width="0.0279%" height="15" fill="rgb(242,38,24)" fg:x="5105" fg:w="3"/><text x="47.6678%" y="207.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (16 samples, 0.15%)</title><rect x="47.3063%" y="309" width="0.1486%" height="15" fill="rgb(225,182,9)" fg:x="5093" fg:w="16"/><text x="47.5563%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (9 samples, 0.08%)</title><rect x="47.3714%" y="293" width="0.0836%" height="15" fill="rgb(243,178,37)" fg:x="5100" fg:w="9"/><text x="47.6214%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (8 samples, 0.07%)</title><rect x="47.3806%" y="277" width="0.0743%" height="15" fill="rgb(232,139,19)" fg:x="5101" fg:w="8"/><text x="47.6306%" y="287.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (8 samples, 0.07%)</title><rect x="47.3806%" y="261" width="0.0743%" height="15" fill="rgb(225,201,24)" fg:x="5101" fg:w="8"/><text x="47.6306%" y="271.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (8 samples, 0.07%)</title><rect x="47.3806%" y="245" width="0.0743%" height="15" fill="rgb(221,47,46)" fg:x="5101" fg:w="8"/><text x="47.6306%" y="255.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate_loop (8 samples, 0.07%)</title><rect x="47.3806%" y="229" width="0.0743%" height="15" fill="rgb(249,23,13)" fg:x="5101" fg:w="8"/><text x="47.6306%" y="239.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (3 samples, 0.03%)</title><rect x="47.5014%" y="277" width="0.0279%" height="15" fill="rgb(219,9,5)" fg:x="5114" fg:w="3"/><text x="47.7514%" y="287.50"></text></g><g><title>neopoligengine`flate2::zio::read (3 samples, 0.03%)</title><rect x="47.5014%" y="261" width="0.0279%" height="15" fill="rgb(254,171,16)" fg:x="5114" fg:w="3"/><text x="47.7514%" y="271.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.5107%" y="245" width="0.0186%" height="15" fill="rgb(230,171,20)" fg:x="5115" fg:w="2"/><text x="47.7607%" y="255.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (2 samples, 0.02%)</title><rect x="47.5107%" y="229" width="0.0186%" height="15" fill="rgb(210,71,41)" fg:x="5115" fg:w="2"/><text x="47.7607%" y="239.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="47.5571%" y="229" width="0.0372%" height="15" fill="rgb(206,173,20)" fg:x="5120" fg:w="4"/><text x="47.8071%" y="239.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="47.5943%" y="229" width="0.0186%" height="15" fill="rgb(233,88,34)" fg:x="5124" fg:w="2"/><text x="47.8443%" y="239.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="47.5943%" y="213" width="0.0186%" height="15" fill="rgb(223,209,46)" fg:x="5124" fg:w="2"/><text x="47.8443%" y="223.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.07%)</title><rect x="47.5571%" y="245" width="0.0743%" height="15" fill="rgb(250,43,18)" fg:x="5120" fg:w="8"/><text x="47.8071%" y="255.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="47.6129%" y="229" width="0.0186%" height="15" fill="rgb(208,13,10)" fg:x="5126" fg:w="2"/><text x="47.8629%" y="239.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (19 samples, 0.18%)</title><rect x="47.4642%" y="293" width="0.1765%" height="15" fill="rgb(212,200,36)" fg:x="5110" fg:w="19"/><text x="47.7142%" y="303.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (12 samples, 0.11%)</title><rect x="47.5293%" y="277" width="0.1115%" height="15" fill="rgb(225,90,30)" fg:x="5117" fg:w="12"/><text x="47.7793%" y="287.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (11 samples, 0.10%)</title><rect x="47.5385%" y="261" width="0.1022%" height="15" fill="rgb(236,182,39)" fg:x="5118" fg:w="11"/><text x="47.7885%" y="271.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.6407%" y="293" width="0.0186%" height="15" fill="rgb(212,144,35)" fg:x="5129" fg:w="2"/><text x="47.8907%" y="303.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (24 samples, 0.22%)</title><rect x="47.4550%" y="309" width="0.2229%" height="15" fill="rgb(228,63,44)" fg:x="5109" fg:w="24"/><text x="47.7050%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.6593%" y="293" width="0.0186%" height="15" fill="rgb(228,109,6)" fg:x="5131" fg:w="2"/><text x="47.9093%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.6593%" y="277" width="0.0186%" height="15" fill="rgb(238,117,24)" fg:x="5131" fg:w="2"/><text x="47.9093%" y="287.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.6593%" y="261" width="0.0186%" height="15" fill="rgb(242,26,26)" fg:x="5131" fg:w="2"/><text x="47.9093%" y="271.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::ContextReference&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (2 samples, 0.02%)</title><rect x="47.7057%" y="261" width="0.0186%" height="15" fill="rgb(221,92,48)" fg:x="5136" fg:w="2"/><text x="47.9557%" y="271.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.7057%" y="245" width="0.0186%" height="15" fill="rgb(209,209,32)" fg:x="5136" fg:w="2"/><text x="47.9557%" y="255.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.7057%" y="229" width="0.0186%" height="15" fill="rgb(221,70,22)" fg:x="5136" fg:w="2"/><text x="47.9557%" y="239.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.04%)</title><rect x="47.6965%" y="277" width="0.0372%" height="15" fill="rgb(248,145,5)" fg:x="5135" fg:w="4"/><text x="47.9465%" y="287.50"></text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (6 samples, 0.06%)</title><rect x="47.6872%" y="309" width="0.0557%" height="15" fill="rgb(226,116,26)" fg:x="5134" fg:w="6"/><text x="47.9372%" y="319.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::MatchOperation&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (6 samples, 0.06%)</title><rect x="47.6872%" y="293" width="0.0557%" height="15" fill="rgb(244,5,17)" fg:x="5134" fg:w="6"/><text x="47.9372%" y="303.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (76 samples, 0.71%)</title><rect x="47.0834%" y="325" width="0.7059%" height="15" fill="rgb(252,159,33)" fg:x="5069" fg:w="76"/><text x="47.3334%" y="335.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (5 samples, 0.05%)</title><rect x="47.7429%" y="309" width="0.0464%" height="15" fill="rgb(206,71,0)" fg:x="5140" fg:w="5"/><text x="47.9929%" y="319.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.7708%" y="293" width="0.0186%" height="15" fill="rgb(233,118,54)" fg:x="5143" fg:w="2"/><text x="48.0208%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.7708%" y="277" width="0.0186%" height="15" fill="rgb(234,83,48)" fg:x="5143" fg:w="2"/><text x="48.0208%" y="287.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::ContextReference&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (4 samples, 0.04%)</title><rect x="47.7893%" y="325" width="0.0372%" height="15" fill="rgb(228,3,54)" fg:x="5145" fg:w="4"/><text x="48.0393%" y="335.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (4 samples, 0.04%)</title><rect x="47.7893%" y="309" width="0.0372%" height="15" fill="rgb(226,155,13)" fg:x="5145" fg:w="4"/><text x="48.0393%" y="319.50"></text></g><g><title>neopoligengine`flate2::zio::read (4 samples, 0.04%)</title><rect x="47.7893%" y="293" width="0.0372%" height="15" fill="rgb(241,28,37)" fg:x="5145" fg:w="4"/><text x="48.0393%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="47.8079%" y="277" width="0.0186%" height="15" fill="rgb(233,93,10)" fg:x="5147" fg:w="2"/><text x="48.0579%" y="287.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (2 samples, 0.02%)</title><rect x="47.8079%" y="261" width="0.0186%" height="15" fill="rgb(225,113,19)" fg:x="5147" fg:w="2"/><text x="48.0579%" y="271.50"></text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (93 samples, 0.86%)</title><rect x="46.9812%" y="373" width="0.8638%" height="15" fill="rgb(241,2,18)" fg:x="5058" fg:w="93"/><text x="47.2312%" y="383.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (87 samples, 0.81%)</title><rect x="47.0370%" y="357" width="0.8081%" height="15" fill="rgb(228,207,21)" fg:x="5064" fg:w="87"/><text x="47.2870%" y="367.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::Pattern&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (85 samples, 0.79%)</title><rect x="47.0555%" y="341" width="0.7895%" height="15" fill="rgb(213,211,35)" fg:x="5066" fg:w="85"/><text x="47.3055%" y="351.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="47.8265%" y="325" width="0.0186%" height="15" fill="rgb(209,83,10)" fg:x="5149" fg:w="2"/><text x="48.0765%" y="335.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="47.8265%" y="309" width="0.0186%" height="15" fill="rgb(209,164,1)" fg:x="5149" fg:w="2"/><text x="48.0765%" y="319.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (111 samples, 1.03%)</title><rect x="46.8233%" y="389" width="1.0310%" height="15" fill="rgb(213,184,43)" fg:x="5041" fg:w="111"/><text x="47.0733%" y="399.50"></text></g><g><title>neopoligengine`syntect::html::ClassedHTMLGenerator::new_with_class_style (173 samples, 1.61%)</title><rect x="46.2567%" y="517" width="1.6069%" height="15" fill="rgb(231,61,34)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="527.50"></text></g><g><title>neopoligengine`syntect::parsing::parser::ParseState::new (173 samples, 1.61%)</title><rect x="46.2567%" y="501" width="1.6069%" height="15" fill="rgb(235,75,3)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="511.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize (173 samples, 1.61%)</title><rect x="46.2567%" y="485" width="1.6069%" height="15" fill="rgb(220,106,47)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="495.50"></text></g><g><title>neopoligengine`once_cell::imp::initialize_or_wait (173 samples, 1.61%)</title><rect x="46.2567%" y="469" width="1.6069%" height="15" fill="rgb(210,196,33)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="479.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (173 samples, 1.61%)</title><rect x="46.2567%" y="453" width="1.6069%" height="15" fill="rgb(229,154,42)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="463.50"></text></g><g><title>neopoligengine`syntect::dumps::deserialize_from_reader_impl (173 samples, 1.61%)</title><rect x="46.2567%" y="437" width="1.6069%" height="15" fill="rgb(228,114,26)" fg:x="4980" fg:w="173"/><text x="46.5067%" y="447.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (156 samples, 1.45%)</title><rect x="46.4146%" y="421" width="1.4490%" height="15" fill="rgb(208,144,1)" fg:x="4997" fg:w="156"/><text x="46.6646%" y="431.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (112 samples, 1.04%)</title><rect x="46.8233%" y="405" width="1.0403%" height="15" fill="rgb(239,112,37)" fg:x="5041" fg:w="112"/><text x="47.0733%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="47.8729%" y="501" width="0.0186%" height="15" fill="rgb(210,96,50)" fg:x="5154" fg:w="2"/><text x="48.1229%" y="511.50"></text></g><g><title>neopoligengine`syntect::html::line_tokens_to_classed_spans (5 samples, 0.05%)</title><rect x="47.9287%" y="501" width="0.0464%" height="15" fill="rgb(222,178,2)" fg:x="5160" fg:w="5"/><text x="48.1787%" y="511.50"></text></g><g><title>neopoligengine`syntect::html::line_tokens_to_classed_spans::_{{closure}} (3 samples, 0.03%)</title><rect x="47.9472%" y="485" width="0.0279%" height="15" fill="rgb(226,74,18)" fg:x="5162" fg:w="3"/><text x="48.1972%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="48.1980%" y="485" width="0.0186%" height="15" fill="rgb(225,67,54)" fg:x="5189" fg:w="2"/><text x="48.4480%" y="495.50"></text></g><g><title>neopoligengine`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="48.2259%" y="485" width="0.0372%" height="15" fill="rgb(251,92,32)" fg:x="5192" fg:w="4"/><text x="48.4759%" y="495.50"></text></g><g><title>neopoligengine`&lt;onig::match_param::MatchParam as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="48.2631%" y="485" width="0.0186%" height="15" fill="rgb(228,149,22)" fg:x="5196" fg:w="2"/><text x="48.5131%" y="495.50"></text></g><g><title>neopoligengine`&lt;onig::region::Region as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="48.2816%" y="485" width="0.0186%" height="15" fill="rgb(243,54,13)" fg:x="5198" fg:w="2"/><text x="48.5316%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="48.2816%" y="469" width="0.0186%" height="15" fill="rgb(243,180,28)" fg:x="5198" fg:w="2"/><text x="48.5316%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.02%)</title><rect x="48.3931%" y="405" width="0.0186%" height="15" fill="rgb(208,167,24)" fg:x="5210" fg:w="2"/><text x="48.6431%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.06%)</title><rect x="48.3931%" y="437" width="0.0557%" height="15" fill="rgb(245,73,45)" fg:x="5210" fg:w="6"/><text x="48.6431%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.06%)</title><rect x="48.3931%" y="421" width="0.0557%" height="15" fill="rgb(237,203,48)" fg:x="5210" fg:w="6"/><text x="48.6431%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.04%)</title><rect x="48.4117%" y="405" width="0.0372%" height="15" fill="rgb(211,197,16)" fg:x="5212" fg:w="4"/><text x="48.6617%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="48.4210%" y="389" width="0.0279%" height="15" fill="rgb(243,99,51)" fg:x="5213" fg:w="3"/><text x="48.6710%" y="399.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.07%)</title><rect x="48.3838%" y="469" width="0.0743%" height="15" fill="rgb(215,123,29)" fg:x="5209" fg:w="8"/><text x="48.6338%" y="479.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="48.3931%" y="453" width="0.0650%" height="15" fill="rgb(239,186,37)" fg:x="5210" fg:w="7"/><text x="48.6431%" y="463.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::MatchIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.18%)</title><rect x="48.3002%" y="485" width="0.1765%" height="15" fill="rgb(252,136,39)" fg:x="5200" fg:w="19"/><text x="48.5502%" y="495.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.02%)</title><rect x="48.4581%" y="469" width="0.0186%" height="15" fill="rgb(223,213,32)" fg:x="5217" fg:w="2"/><text x="48.7081%" y="479.50"></text></g><g><title>neopoligengine`once_cell::imp::initialize_or_wait (2 samples, 0.02%)</title><rect x="48.4581%" y="453" width="0.0186%" height="15" fill="rgb(233,115,5)" fg:x="5217" fg:w="2"/><text x="48.7081%" y="463.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.02%)</title><rect x="48.4581%" y="437" width="0.0186%" height="15" fill="rgb(207,226,44)" fg:x="5217" fg:w="2"/><text x="48.7081%" y="447.50"></text></g><g><title>neopoligengine`syntect::dumps::deserialize_from_reader_impl (2 samples, 0.02%)</title><rect x="48.4581%" y="421" width="0.0186%" height="15" fill="rgb(208,126,0)" fg:x="5217" fg:w="2"/><text x="48.7081%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="48.4767%" y="453" width="0.0186%" height="15" fill="rgb(244,66,21)" fg:x="5219" fg:w="2"/><text x="48.7267%" y="463.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="48.4767%" y="485" width="0.0279%" height="15" fill="rgb(222,97,12)" fg:x="5219" fg:w="3"/><text x="48.7267%" y="495.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="48.4767%" y="469" width="0.0279%" height="15" fill="rgb(219,213,19)" fg:x="5219" fg:w="3"/><text x="48.7267%" y="479.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.05%)</title><rect x="48.5046%" y="485" width="0.0464%" height="15" fill="rgb(252,169,30)" fg:x="5222" fg:w="5"/><text x="48.7546%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="48.5696%" y="421" width="0.0186%" height="15" fill="rgb(206,32,51)" fg:x="5229" fg:w="2"/><text x="48.8196%" y="431.50"></text></g><g><title>neopoligengine`add_compile_string (2 samples, 0.02%)</title><rect x="48.7089%" y="341" width="0.0186%" height="15" fill="rgb(250,172,42)" fg:x="5244" fg:w="2"/><text x="48.9589%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="48.7739%" y="325" width="0.0279%" height="15" fill="rgb(209,34,43)" fg:x="5251" fg:w="3"/><text x="49.0239%" y="335.50"></text></g><g><title>neopoligengine`add_op (3 samples, 0.03%)</title><rect x="48.8018%" y="325" width="0.0279%" height="15" fill="rgb(223,11,35)" fg:x="5254" fg:w="3"/><text x="49.0518%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.03%)</title><rect x="48.8018%" y="309" width="0.0279%" height="15" fill="rgb(251,219,26)" fg:x="5254" fg:w="3"/><text x="49.0518%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.03%)</title><rect x="48.8018%" y="293" width="0.0279%" height="15" fill="rgb(231,119,3)" fg:x="5254" fg:w="3"/><text x="49.0518%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="48.8018%" y="277" width="0.0279%" height="15" fill="rgb(216,97,11)" fg:x="5254" fg:w="3"/><text x="49.0518%" y="287.50"></text></g><g><title>neopoligengine`compile_length_tree (3 samples, 0.03%)</title><rect x="48.8296%" y="325" width="0.0279%" height="15" fill="rgb(223,59,9)" fg:x="5257" fg:w="3"/><text x="49.0796%" y="335.50"></text></g><g><title>neopoligengine`compile_length_tree (3 samples, 0.03%)</title><rect x="48.8296%" y="309" width="0.0279%" height="15" fill="rgb(233,93,31)" fg:x="5257" fg:w="3"/><text x="49.0796%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="48.8668%" y="309" width="0.0279%" height="15" fill="rgb(239,81,33)" fg:x="5261" fg:w="3"/><text x="49.1168%" y="319.50"></text></g><g><title>neopoligengine`compile_tree (35 samples, 0.33%)</title><rect x="48.6346%" y="389" width="0.3251%" height="15" fill="rgb(213,120,34)" fg:x="5236" fg:w="35"/><text x="48.8846%" y="399.50"></text></g><g><title>neopoligengine`compile_tree (33 samples, 0.31%)</title><rect x="48.6532%" y="373" width="0.3065%" height="15" fill="rgb(243,49,53)" fg:x="5238" fg:w="33"/><text x="48.9032%" y="383.50"></text></g><g><title>neopoligengine`compile_tree (27 samples, 0.25%)</title><rect x="48.7089%" y="357" width="0.2508%" height="15" fill="rgb(247,216,33)" fg:x="5244" fg:w="27"/><text x="48.9589%" y="367.50"></text></g><g><title>neopoligengine`compile_tree (23 samples, 0.21%)</title><rect x="48.7461%" y="341" width="0.2136%" height="15" fill="rgb(226,26,14)" fg:x="5248" fg:w="23"/><text x="48.9961%" y="351.50"></text></g><g><title>neopoligengine`compile_tree (11 samples, 0.10%)</title><rect x="48.8575%" y="325" width="0.1022%" height="15" fill="rgb(215,49,53)" fg:x="5260" fg:w="11"/><text x="49.1075%" y="335.50"></text></g><g><title>neopoligengine`compile_tree (7 samples, 0.07%)</title><rect x="48.8947%" y="309" width="0.0650%" height="15" fill="rgb(245,162,40)" fg:x="5264" fg:w="7"/><text x="49.1447%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.05%)</title><rect x="48.9132%" y="293" width="0.0464%" height="15" fill="rgb(229,68,17)" fg:x="5266" fg:w="5"/><text x="49.1632%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="48.9876%" y="357" width="0.0372%" height="15" fill="rgb(213,182,10)" fg:x="5274" fg:w="4"/><text x="49.2376%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="49.0433%" y="341" width="0.0186%" height="15" fill="rgb(245,125,30)" fg:x="5280" fg:w="2"/><text x="49.2933%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="49.0711%" y="325" width="0.0186%" height="15" fill="rgb(232,202,2)" fg:x="5283" fg:w="2"/><text x="49.3211%" y="335.50"></text></g><g><title>neopoligengine`onig_node_free (18 samples, 0.17%)</title><rect x="48.9597%" y="389" width="0.1672%" height="15" fill="rgb(237,140,51)" fg:x="5271" fg:w="18"/><text x="49.2097%" y="399.50"></text></g><g><title>neopoligengine`node_free_body (17 samples, 0.16%)</title><rect x="48.9690%" y="373" width="0.1579%" height="15" fill="rgb(236,157,25)" fg:x="5272" fg:w="17"/><text x="49.2190%" y="383.50"></text></g><g><title>neopoligengine`node_free_body (10 samples, 0.09%)</title><rect x="49.0340%" y="357" width="0.0929%" height="15" fill="rgb(219,209,0)" fg:x="5279" fg:w="10"/><text x="49.2840%" y="367.50"></text></g><g><title>neopoligengine`node_free_body (6 samples, 0.06%)</title><rect x="49.0711%" y="341" width="0.0557%" height="15" fill="rgb(240,116,54)" fg:x="5283" fg:w="6"/><text x="49.3211%" y="351.50"></text></g><g><title>neopoligengine`node_free_body (3 samples, 0.03%)</title><rect x="49.0990%" y="325" width="0.0279%" height="15" fill="rgb(216,10,36)" fg:x="5286" fg:w="3"/><text x="49.3490%" y="335.50"></text></g><g><title>neopoligengine`node_free_body (2 samples, 0.02%)</title><rect x="49.1083%" y="309" width="0.0186%" height="15" fill="rgb(222,72,44)" fg:x="5287" fg:w="2"/><text x="49.3583%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="49.1083%" y="293" width="0.0186%" height="15" fill="rgb(232,159,9)" fg:x="5287" fg:w="2"/><text x="49.3583%" y="303.50"></text></g><g><title>neopoligengine`ops_make_string_pool (2 samples, 0.02%)</title><rect x="49.1362%" y="389" width="0.0186%" height="15" fill="rgb(210,39,32)" fg:x="5290" fg:w="2"/><text x="49.3862%" y="399.50"></text></g><g><title>neopoligengine`ops_resize (2 samples, 0.02%)</title><rect x="49.1547%" y="389" width="0.0186%" height="15" fill="rgb(216,194,45)" fg:x="5292" fg:w="2"/><text x="49.4047%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="49.1547%" y="373" width="0.0186%" height="15" fill="rgb(218,18,35)" fg:x="5292" fg:w="2"/><text x="49.4047%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="49.1547%" y="357" width="0.0186%" height="15" fill="rgb(207,83,51)" fg:x="5292" fg:w="2"/><text x="49.4047%" y="367.50"></text></g><g><title>neopoligengine`concat_left_node_opt_info (2 samples, 0.02%)</title><rect x="49.1919%" y="373" width="0.0186%" height="15" fill="rgb(225,63,43)" fg:x="5296" fg:w="2"/><text x="49.4419%" y="383.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (14 samples, 0.13%)</title><rect x="49.2662%" y="341" width="0.1300%" height="15" fill="rgb(207,57,36)" fg:x="5304" fg:w="14"/><text x="49.5162%" y="351.50"></text></g><g><title>neopoligengine`concat_left_node_opt_info (2 samples, 0.02%)</title><rect x="49.3962%" y="341" width="0.0186%" height="15" fill="rgb(216,99,33)" fg:x="5318" fg:w="2"/><text x="49.6462%" y="351.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (4 samples, 0.04%)</title><rect x="49.4334%" y="325" width="0.0372%" height="15" fill="rgb(225,42,16)" fg:x="5322" fg:w="4"/><text x="49.6834%" y="335.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (3 samples, 0.03%)</title><rect x="49.5263%" y="261" width="0.0279%" height="15" fill="rgb(220,201,45)" fg:x="5332" fg:w="3"/><text x="49.7763%" y="271.50"></text></g><g><title>neopoligengine`optimize_nodes (45 samples, 0.42%)</title><rect x="49.1733%" y="389" width="0.4180%" height="15" fill="rgb(225,33,4)" fg:x="5294" fg:w="45"/><text x="49.4233%" y="399.50"></text></g><g><title>neopoligengine`optimize_nodes (41 samples, 0.38%)</title><rect x="49.2105%" y="373" width="0.3808%" height="15" fill="rgb(224,33,50)" fg:x="5298" fg:w="41"/><text x="49.4605%" y="383.50"></text></g><g><title>neopoligengine`optimize_nodes (36 samples, 0.33%)</title><rect x="49.2569%" y="357" width="0.3344%" height="15" fill="rgb(246,198,51)" fg:x="5303" fg:w="36"/><text x="49.5069%" y="367.50"></text></g><g><title>neopoligengine`optimize_nodes (19 samples, 0.18%)</title><rect x="49.4148%" y="341" width="0.1765%" height="15" fill="rgb(205,22,4)" fg:x="5320" fg:w="19"/><text x="49.6648%" y="351.50"></text></g><g><title>neopoligengine`optimize_nodes (13 samples, 0.12%)</title><rect x="49.4706%" y="325" width="0.1208%" height="15" fill="rgb(206,3,8)" fg:x="5326" fg:w="13"/><text x="49.7206%" y="335.50"></text></g><g><title>neopoligengine`optimize_nodes (9 samples, 0.08%)</title><rect x="49.5077%" y="309" width="0.0836%" height="15" fill="rgb(251,23,15)" fg:x="5330" fg:w="9"/><text x="49.7577%" y="319.50"></text></g><g><title>neopoligengine`optimize_nodes (7 samples, 0.07%)</title><rect x="49.5263%" y="293" width="0.0650%" height="15" fill="rgb(252,88,28)" fg:x="5332" fg:w="7"/><text x="49.7763%" y="303.50"></text></g><g><title>neopoligengine`optimize_nodes (7 samples, 0.07%)</title><rect x="49.5263%" y="277" width="0.0650%" height="15" fill="rgb(212,127,14)" fg:x="5332" fg:w="7"/><text x="49.7763%" y="287.50"></text></g><g><title>neopoligengine`optimize_nodes (4 samples, 0.04%)</title><rect x="49.5542%" y="261" width="0.0372%" height="15" fill="rgb(247,145,37)" fg:x="5335" fg:w="4"/><text x="49.8042%" y="271.50"></text></g><g><title>neopoligengine`optimize_nodes (4 samples, 0.04%)</title><rect x="49.5542%" y="245" width="0.0372%" height="15" fill="rgb(209,117,53)" fg:x="5335" fg:w="4"/><text x="49.8042%" y="255.50"></text></g><g><title>neopoligengine`optimize_nodes (2 samples, 0.02%)</title><rect x="49.5727%" y="229" width="0.0186%" height="15" fill="rgb(212,90,42)" fg:x="5337" fg:w="2"/><text x="49.8227%" y="239.50"></text></g><g><title>neopoligengine`check_backrefs (2 samples, 0.02%)</title><rect x="49.6006%" y="373" width="0.0186%" height="15" fill="rgb(218,164,37)" fg:x="5340" fg:w="2"/><text x="49.8506%" y="383.50"></text></g><g><title>neopoligengine`check_backrefs (2 samples, 0.02%)</title><rect x="49.6006%" y="357" width="0.0186%" height="15" fill="rgb(246,65,34)" fg:x="5340" fg:w="2"/><text x="49.8506%" y="367.50"></text></g><g><title>neopoligengine`is_valid_mbc_string (2 samples, 0.02%)</title><rect x="49.6192%" y="373" width="0.0186%" height="15" fill="rgb(231,100,33)" fg:x="5342" fg:w="2"/><text x="49.8692%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.02%)</title><rect x="49.6656%" y="325" width="0.0186%" height="15" fill="rgb(228,126,14)" fg:x="5347" fg:w="2"/><text x="49.9156%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="49.7121%" y="229" width="0.0186%" height="15" fill="rgb(215,173,21)" fg:x="5352" fg:w="2"/><text x="49.9621%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="49.7121%" y="213" width="0.0186%" height="15" fill="rgb(210,6,40)" fg:x="5352" fg:w="2"/><text x="49.9621%" y="223.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (3 samples, 0.03%)</title><rect x="49.7121%" y="261" width="0.0279%" height="15" fill="rgb(212,48,18)" fg:x="5352" fg:w="3"/><text x="49.9621%" y="271.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (3 samples, 0.03%)</title><rect x="49.7121%" y="245" width="0.0279%" height="15" fill="rgb(230,214,11)" fg:x="5352" fg:w="3"/><text x="49.9621%" y="255.50"></text></g><g><title>neopoligengine`fetch_token (4 samples, 0.04%)</title><rect x="49.7399%" y="261" width="0.0372%" height="15" fill="rgb(254,105,39)" fg:x="5355" fg:w="4"/><text x="49.9899%" y="271.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (3 samples, 0.03%)</title><rect x="49.8049%" y="213" width="0.0279%" height="15" fill="rgb(245,158,5)" fg:x="5362" fg:w="3"/><text x="50.0549%" y="223.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (3 samples, 0.03%)</title><rect x="49.8049%" y="197" width="0.0279%" height="15" fill="rgb(249,208,11)" fg:x="5362" fg:w="3"/><text x="50.0549%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="49.8142%" y="181" width="0.0186%" height="15" fill="rgb(210,39,28)" fg:x="5363" fg:w="2"/><text x="50.0642%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="49.8142%" y="165" width="0.0186%" height="15" fill="rgb(211,56,53)" fg:x="5363" fg:w="2"/><text x="50.0642%" y="175.50"></text></g><g><title>neopoligengine`onigenc_unicode_apply_all_case_fold (4 samples, 0.04%)</title><rect x="49.8328%" y="213" width="0.0372%" height="15" fill="rgb(226,201,30)" fg:x="5365" fg:w="4"/><text x="50.0828%" y="223.50"></text></g><g><title>neopoligengine`apply_case_fold1 (4 samples, 0.04%)</title><rect x="49.8328%" y="197" width="0.0372%" height="15" fill="rgb(239,101,34)" fg:x="5365" fg:w="4"/><text x="50.0828%" y="207.50"></text></g><g><title>neopoligengine`i_apply_case_fold (2 samples, 0.02%)</title><rect x="49.8514%" y="181" width="0.0186%" height="15" fill="rgb(226,209,5)" fg:x="5367" fg:w="2"/><text x="50.1014%" y="191.50"></text></g><g><title>neopoligengine`onig_is_code_in_cc (2 samples, 0.02%)</title><rect x="49.8514%" y="165" width="0.0186%" height="15" fill="rgb(250,105,47)" fg:x="5367" fg:w="2"/><text x="50.1014%" y="175.50"></text></g><g><title>neopoligengine`onigenc_unicode_apply_all_case_fold (2 samples, 0.02%)</title><rect x="49.8792%" y="165" width="0.0186%" height="15" fill="rgb(230,72,3)" fg:x="5370" fg:w="2"/><text x="50.1292%" y="175.50"></text></g><g><title>neopoligengine`apply_case_fold1 (2 samples, 0.02%)</title><rect x="49.8792%" y="149" width="0.0186%" height="15" fill="rgb(232,218,39)" fg:x="5370" fg:w="2"/><text x="50.1292%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="49.9071%" y="37" width="0.0372%" height="15" fill="rgb(248,166,6)" fg:x="5373" fg:w="4"/><text x="50.1571%" y="47.50"></text></g><g><title>neopoligengine`prs_alts (8 samples, 0.07%)</title><rect x="49.9071%" y="117" width="0.0743%" height="15" fill="rgb(247,89,20)" fg:x="5373" fg:w="8"/><text x="50.1571%" y="127.50"></text></g><g><title>neopoligengine`prs_branch (8 samples, 0.07%)</title><rect x="49.9071%" y="101" width="0.0743%" height="15" fill="rgb(248,130,54)" fg:x="5373" fg:w="8"/><text x="50.1571%" y="111.50"></text></g><g><title>neopoligengine`prs_exp (8 samples, 0.07%)</title><rect x="49.9071%" y="85" width="0.0743%" height="15" fill="rgb(234,196,4)" fg:x="5373" fg:w="8"/><text x="50.1571%" y="95.50"></text></g><g><title>neopoligengine`prs_cc (8 samples, 0.07%)</title><rect x="49.9071%" y="69" width="0.0743%" height="15" fill="rgb(250,143,31)" fg:x="5373" fg:w="8"/><text x="50.1571%" y="79.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (8 samples, 0.07%)</title><rect x="49.9071%" y="53" width="0.0743%" height="15" fill="rgb(211,110,34)" fg:x="5373" fg:w="8"/><text x="50.1571%" y="63.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (4 samples, 0.04%)</title><rect x="49.9443%" y="37" width="0.0372%" height="15" fill="rgb(215,124,48)" fg:x="5377" fg:w="4"/><text x="50.1943%" y="47.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="49.9907%" y="85" width="0.0186%" height="15" fill="rgb(216,46,13)" fg:x="5382" fg:w="2"/><text x="50.2407%" y="95.50"></text></g><g><title>neopoligengine`prs_alts (21 samples, 0.20%)</title><rect x="49.8978%" y="165" width="0.1951%" height="15" fill="rgb(205,184,25)" fg:x="5372" fg:w="21"/><text x="50.1478%" y="175.50"></text></g><g><title>neopoligengine`prs_branch (21 samples, 0.20%)</title><rect x="49.8978%" y="149" width="0.1951%" height="15" fill="rgb(228,1,10)" fg:x="5372" fg:w="21"/><text x="50.1478%" y="159.50"></text></g><g><title>neopoligengine`prs_exp (21 samples, 0.20%)</title><rect x="49.8978%" y="133" width="0.1951%" height="15" fill="rgb(213,116,27)" fg:x="5372" fg:w="21"/><text x="50.1478%" y="143.50"></text></g><g><title>neopoligengine`prs_cc (12 samples, 0.11%)</title><rect x="49.9814%" y="117" width="0.1115%" height="15" fill="rgb(241,95,50)" fg:x="5381" fg:w="12"/><text x="50.2314%" y="127.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (11 samples, 0.10%)</title><rect x="49.9907%" y="101" width="0.1022%" height="15" fill="rgb(238,48,32)" fg:x="5382" fg:w="11"/><text x="50.2407%" y="111.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (9 samples, 0.08%)</title><rect x="50.0093%" y="85" width="0.0836%" height="15" fill="rgb(235,113,49)" fg:x="5384" fg:w="9"/><text x="50.2593%" y="95.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (10 samples, 0.09%)</title><rect x="50.1022%" y="149" width="0.0929%" height="15" fill="rgb(205,127,43)" fg:x="5394" fg:w="10"/><text x="50.3522%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (76 samples, 0.71%)</title><rect x="50.2879%" y="133" width="0.7059%" height="15" fill="rgb(250,162,2)" fg:x="5414" fg:w="76"/><text x="50.5379%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="53.8919%" y="69" width="0.0186%" height="15" fill="rgb(220,13,41)" fg:x="5802" fg:w="2"/><text x="54.1419%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.02%)</title><rect x="53.9197%" y="69" width="0.0186%" height="15" fill="rgb(249,221,25)" fg:x="5805" fg:w="2"/><text x="54.1697%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="53.9383%" y="69" width="0.0186%" height="15" fill="rgb(215,208,19)" fg:x="5807" fg:w="2"/><text x="54.1883%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.09%)</title><rect x="53.8826%" y="85" width="0.0929%" height="15" fill="rgb(236,175,2)" fg:x="5801" fg:w="10"/><text x="54.1326%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="53.9569%" y="69" width="0.0186%" height="15" fill="rgb(241,52,2)" fg:x="5809" fg:w="2"/><text x="54.2069%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="53.9569%" y="53" width="0.0186%" height="15" fill="rgb(248,140,14)" fg:x="5809" fg:w="2"/><text x="54.2069%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (12 samples, 0.11%)</title><rect x="53.8733%" y="101" width="0.1115%" height="15" fill="rgb(253,22,42)" fg:x="5800" fg:w="12"/><text x="54.1233%" y="111.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (409 samples, 3.80%)</title><rect x="50.1951%" y="149" width="3.7990%" height="15" fill="rgb(234,61,47)" fg:x="5404" fg:w="409"/><text x="50.4451%" y="159.50">neop..</text></g><g><title>neopoligengine`add_code_range_to_buf (323 samples, 3.00%)</title><rect x="50.9939%" y="133" width="3.0002%" height="15" fill="rgb(208,226,15)" fg:x="5490" fg:w="323"/><text x="51.2439%" y="143.50">neo..</text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.13%)</title><rect x="53.8640%" y="117" width="0.1300%" height="15" fill="rgb(217,221,4)" fg:x="5799" fg:w="14"/><text x="54.1140%" y="127.50"></text></g><g><title>neopoligengine`prs_alts (447 samples, 4.15%)</title><rect x="49.8700%" y="213" width="4.1520%" height="15" fill="rgb(212,174,34)" fg:x="5369" fg:w="447"/><text x="50.1200%" y="223.50">neopo..</text></g><g><title>neopoligengine`prs_branch (447 samples, 4.15%)</title><rect x="49.8700%" y="197" width="4.1520%" height="15" fill="rgb(253,83,4)" fg:x="5369" fg:w="447"/><text x="50.1200%" y="207.50">neopo..</text></g><g><title>neopoligengine`prs_exp (447 samples, 4.15%)</title><rect x="49.8700%" y="181" width="4.1520%" height="15" fill="rgb(250,195,49)" fg:x="5369" fg:w="447"/><text x="50.1200%" y="191.50">neopo..</text></g><g><title>neopoligengine`prs_cc (423 samples, 3.93%)</title><rect x="50.0929%" y="165" width="3.9290%" height="15" fill="rgb(241,192,25)" fg:x="5393" fg:w="423"/><text x="50.3429%" y="175.50">neop..</text></g><g><title>neopoligengine`add_code_range_to_buf (4 samples, 0.04%)</title><rect x="54.0219%" y="197" width="0.0372%" height="15" fill="rgb(208,124,10)" fg:x="5816" fg:w="4"/><text x="54.2719%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (41 samples, 0.38%)</title><rect x="54.1612%" y="181" width="0.3808%" height="15" fill="rgb(222,33,0)" fg:x="5831" fg:w="41"/><text x="54.4112%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="56.1397%" y="133" width="0.0186%" height="15" fill="rgb(234,209,28)" fg:x="6044" fg:w="2"/><text x="56.3897%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.05%)</title><rect x="56.1211%" y="165" width="0.0464%" height="15" fill="rgb(224,11,23)" fg:x="6042" fg:w="5"/><text x="56.3711%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.05%)</title><rect x="56.1211%" y="149" width="0.0464%" height="15" fill="rgb(232,99,1)" fg:x="6042" fg:w="5"/><text x="56.3711%" y="159.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (228 samples, 2.12%)</title><rect x="54.0591%" y="197" width="2.1178%" height="15" fill="rgb(237,95,45)" fg:x="5820" fg:w="228"/><text x="54.3091%" y="207.50">n..</text></g><g><title>neopoligengine`add_code_range_to_buf (176 samples, 1.63%)</title><rect x="54.5421%" y="181" width="1.6348%" height="15" fill="rgb(208,109,11)" fg:x="5872" fg:w="176"/><text x="54.7921%" y="191.50"></text></g><g><title>neopoligengine`prs_branch (687 samples, 6.38%)</title><rect x="49.8049%" y="245" width="6.3812%" height="15" fill="rgb(216,190,48)" fg:x="5362" fg:w="687"/><text x="50.0549%" y="255.50">neopolig..</text></g><g><title>neopoligengine`prs_exp (687 samples, 6.38%)</title><rect x="49.8049%" y="229" width="6.3812%" height="15" fill="rgb(251,171,36)" fg:x="5362" fg:w="687"/><text x="50.0549%" y="239.50">neopolig..</text></g><g><title>neopoligengine`prs_cc (233 samples, 2.16%)</title><rect x="54.0219%" y="213" width="2.1642%" height="15" fill="rgb(230,62,22)" fg:x="5816" fg:w="233"/><text x="54.2719%" y="223.50">n..</text></g><g><title>neopoligengine`prs_alts (690 samples, 6.41%)</title><rect x="49.7864%" y="261" width="6.4091%" height="15" fill="rgb(225,114,35)" fg:x="5360" fg:w="690"/><text x="50.0364%" y="271.50">neopolig..</text></g><g><title>neopoligengine`add_code_range_to_buf (4 samples, 0.04%)</title><rect x="56.1954%" y="245" width="0.0372%" height="15" fill="rgb(215,118,42)" fg:x="6050" fg:w="4"/><text x="56.4454%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.18%)</title><rect x="56.2604%" y="229" width="0.1765%" height="15" fill="rgb(243,119,21)" fg:x="6057" fg:w="19"/><text x="56.5104%" y="239.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (109 samples, 1.01%)</title><rect x="56.2326%" y="245" width="1.0124%" height="15" fill="rgb(252,177,53)" fg:x="6054" fg:w="109"/><text x="56.4826%" y="255.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (86 samples, 0.80%)</title><rect x="56.4462%" y="229" width="0.7988%" height="15" fill="rgb(237,209,29)" fg:x="6077" fg:w="86"/><text x="56.6962%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="57.2265%" y="213" width="0.0186%" height="15" fill="rgb(212,65,23)" fg:x="6161" fg:w="2"/><text x="57.4765%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="57.2265%" y="197" width="0.0186%" height="15" fill="rgb(230,222,46)" fg:x="6161" fg:w="2"/><text x="57.4765%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="57.2265%" y="181" width="0.0186%" height="15" fill="rgb(215,135,32)" fg:x="6161" fg:w="2"/><text x="57.4765%" y="191.50"></text></g><g><title>neopoligengine`prs_alts (814 samples, 7.56%)</title><rect x="49.7028%" y="309" width="7.5608%" height="15" fill="rgb(246,101,22)" fg:x="5351" fg:w="814"/><text x="49.9528%" y="319.50">neopoligen..</text></g><g><title>neopoligengine`prs_branch (814 samples, 7.56%)</title><rect x="49.7028%" y="293" width="7.5608%" height="15" fill="rgb(206,107,13)" fg:x="5351" fg:w="814"/><text x="49.9528%" y="303.50">neopoligen..</text></g><g><title>neopoligengine`prs_exp (814 samples, 7.56%)</title><rect x="49.7028%" y="277" width="7.5608%" height="15" fill="rgb(250,100,44)" fg:x="5351" fg:w="814"/><text x="49.9528%" y="287.50">neopoligen..</text></g><g><title>neopoligengine`prs_cc (115 samples, 1.07%)</title><rect x="56.1954%" y="261" width="1.0682%" height="15" fill="rgb(231,147,38)" fg:x="6050" fg:w="115"/><text x="56.4454%" y="271.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (2 samples, 0.02%)</title><rect x="57.2636%" y="293" width="0.0186%" height="15" fill="rgb(229,8,40)" fg:x="6165" fg:w="2"/><text x="57.5136%" y="303.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (49 samples, 0.46%)</title><rect x="57.2822%" y="293" width="0.4551%" height="15" fill="rgb(221,135,30)" fg:x="6167" fg:w="49"/><text x="57.5322%" y="303.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (46 samples, 0.43%)</title><rect x="57.3101%" y="277" width="0.4273%" height="15" fill="rgb(249,193,18)" fg:x="6170" fg:w="46"/><text x="57.5601%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="57.7187%" y="261" width="0.0186%" height="15" fill="rgb(209,133,39)" fg:x="6214" fg:w="2"/><text x="57.9687%" y="271.50"></text></g><g><title>neopoligengine`onig_parse_tree (873 samples, 8.11%)</title><rect x="49.6377%" y="373" width="8.1089%" height="15" fill="rgb(232,100,14)" fg:x="5344" fg:w="873"/><text x="49.8877%" y="383.50">neopoligeng..</text></g><g><title>neopoligengine`prs_alts (873 samples, 8.11%)</title><rect x="49.6377%" y="357" width="8.1089%" height="15" fill="rgb(224,185,1)" fg:x="5344" fg:w="873"/><text x="49.8877%" y="367.50">neopoligeng..</text></g><g><title>neopoligengine`prs_branch (870 samples, 8.08%)</title><rect x="49.6656%" y="341" width="8.0810%" height="15" fill="rgb(223,139,8)" fg:x="5347" fg:w="870"/><text x="49.9156%" y="351.50">neopoligeng..</text></g><g><title>neopoligengine`prs_exp (868 samples, 8.06%)</title><rect x="49.6842%" y="325" width="8.0624%" height="15" fill="rgb(232,213,38)" fg:x="5349" fg:w="868"/><text x="49.9342%" y="335.50">neopoligeng..</text></g><g><title>neopoligengine`prs_cc (52 samples, 0.48%)</title><rect x="57.2636%" y="309" width="0.4830%" height="15" fill="rgb(207,94,22)" fg:x="6165" fg:w="52"/><text x="57.5136%" y="319.50"></text></g><g><title>neopoligengine`reduce_string_list (3 samples, 0.03%)</title><rect x="57.7466%" y="373" width="0.0279%" height="15" fill="rgb(219,183,54)" fg:x="6217" fg:w="3"/><text x="57.9966%" y="383.50"></text></g><g><title>neopoligengine`reduce_string_list (2 samples, 0.02%)</title><rect x="57.7559%" y="357" width="0.0186%" height="15" fill="rgb(216,185,54)" fg:x="6218" fg:w="2"/><text x="58.0059%" y="367.50"></text></g><g><title>neopoligengine`reduce_string_list (2 samples, 0.02%)</title><rect x="57.7559%" y="341" width="0.0186%" height="15" fill="rgb(254,217,39)" fg:x="6218" fg:w="2"/><text x="58.0059%" y="351.50"></text></g><g><title>neopoligengine`onig_compile (992 samples, 9.21%)</title><rect x="48.5974%" y="405" width="9.2142%" height="15" fill="rgb(240,178,23)" fg:x="5232" fg:w="992"/><text x="48.8474%" y="415.50">neopoligengin..</text></g><g><title>neopoligengine`parse_and_tune (885 samples, 8.22%)</title><rect x="49.5913%" y="389" width="8.2203%" height="15" fill="rgb(218,11,47)" fg:x="5339" fg:w="885"/><text x="49.8413%" y="399.50">neopoligeng..</text></g><g><title>neopoligengine`tune_tree (4 samples, 0.04%)</title><rect x="57.7745%" y="373" width="0.0372%" height="15" fill="rgb(218,51,51)" fg:x="6220" fg:w="4"/><text x="58.0245%" y="383.50"></text></g><g><title>neopoligengine`tune_tree (3 samples, 0.03%)</title><rect x="57.7838%" y="357" width="0.0279%" height="15" fill="rgb(238,126,27)" fg:x="6221" fg:w="3"/><text x="58.0338%" y="367.50"></text></g><g><title>neopoligengine`tune_tree (2 samples, 0.02%)</title><rect x="57.7931%" y="341" width="0.0186%" height="15" fill="rgb(249,202,22)" fg:x="6222" fg:w="2"/><text x="58.0431%" y="351.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize (999 samples, 9.28%)</title><rect x="48.5510%" y="485" width="9.2792%" height="15" fill="rgb(254,195,49)" fg:x="5227" fg:w="999"/><text x="48.8010%" y="495.50">neopoligengin..</text></g><g><title>neopoligengine`once_cell::imp::initialize_or_wait (999 samples, 9.28%)</title><rect x="48.5510%" y="469" width="9.2792%" height="15" fill="rgb(208,123,14)" fg:x="5227" fg:w="999"/><text x="48.8010%" y="479.50">neopoligengin..</text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (998 samples, 9.27%)</title><rect x="48.5603%" y="453" width="9.2699%" height="15" fill="rgb(224,200,8)" fg:x="5228" fg:w="998"/><text x="48.8103%" y="463.50">neopoligengin..</text></g><g><title>neopoligengine`onig::Regex::with_options_and_encoding (997 samples, 9.26%)</title><rect x="48.5696%" y="437" width="9.2606%" height="15" fill="rgb(217,61,36)" fg:x="5229" fg:w="997"/><text x="48.8196%" y="447.50">neopoligengin..</text></g><g><title>neopoligengine`onig_new (995 samples, 9.24%)</title><rect x="48.5881%" y="421" width="9.2421%" height="15" fill="rgb(206,35,45)" fg:x="5231" fg:w="995"/><text x="48.8381%" y="431.50">neopoligengin..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="57.8395%" y="469" width="0.0372%" height="15" fill="rgb(217,65,33)" fg:x="6227" fg:w="4"/><text x="58.0895%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="57.8859%" y="453" width="0.0186%" height="15" fill="rgb(222,158,48)" fg:x="6232" fg:w="2"/><text x="58.1359%" y="463.50"></text></g><g><title>neopoligengine`forward_search (2 samples, 0.02%)</title><rect x="57.9138%" y="453" width="0.0186%" height="15" fill="rgb(254,2,54)" fg:x="6235" fg:w="2"/><text x="58.1638%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="58.0810%" y="437" width="0.0186%" height="15" fill="rgb(250,143,38)" fg:x="6253" fg:w="2"/><text x="58.3310%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.17%)</title><rect x="58.0996%" y="437" width="0.1672%" height="15" fill="rgb(248,25,0)" fg:x="6255" fg:w="18"/><text x="58.3496%" y="447.50"></text></g><g><title>neopoligengine`forward_search (30 samples, 0.28%)</title><rect x="58.2761%" y="437" width="0.2787%" height="15" fill="rgb(206,152,27)" fg:x="6274" fg:w="30"/><text x="58.5261%" y="447.50"></text></g><g><title>neopoligengine`match_at (34 samples, 0.32%)</title><rect x="58.5547%" y="437" width="0.3158%" height="15" fill="rgb(240,77,30)" fg:x="6304" fg:w="34"/><text x="58.8047%" y="447.50"></text></g><g><title>neopoligengine`mbc_enc_len (3 samples, 0.03%)</title><rect x="58.8705%" y="437" width="0.0279%" height="15" fill="rgb(231,5,3)" fg:x="6338" fg:w="3"/><text x="59.1205%" y="447.50"></text></g><g><title>neopoligengine`mbc_to_code (3 samples, 0.03%)</title><rect x="58.8984%" y="437" width="0.0279%" height="15" fill="rgb(207,226,32)" fg:x="6341" fg:w="3"/><text x="59.1484%" y="447.50"></text></g><g><title>neopoligengine`onig_region_resize_clear (4 samples, 0.04%)</title><rect x="58.9262%" y="437" width="0.0372%" height="15" fill="rgb(222,207,47)" fg:x="6344" fg:w="4"/><text x="59.1762%" y="447.50"></text></g><g><title>neopoligengine`onig::Regex::search_with_param (125 samples, 1.16%)</title><rect x="57.8302%" y="485" width="1.1611%" height="15" fill="rgb(229,115,45)" fg:x="6226" fg:w="125"/><text x="58.0802%" y="495.50"></text></g><g><title>neopoligengine`onig_search_with_param (120 samples, 1.11%)</title><rect x="57.8766%" y="469" width="1.1146%" height="15" fill="rgb(224,191,6)" fg:x="6231" fg:w="120"/><text x="58.1266%" y="479.50"></text></g><g><title>neopoligengine`search_in_range (112 samples, 1.04%)</title><rect x="57.9510%" y="453" width="1.0403%" height="15" fill="rgb(230,227,24)" fg:x="6239" fg:w="112"/><text x="58.2010%" y="463.50"></text></g><g><title>neopoligengine`onigenc_unicode_is_code_ctype (2 samples, 0.02%)</title><rect x="58.9727%" y="437" width="0.0186%" height="15" fill="rgb(228,80,19)" fg:x="6349" fg:w="2"/><text x="59.2227%" y="447.50"></text></g><g><title>neopoligengine`syntect::parsing::parser::ParseState::parse_line (1,190 samples, 11.05%)</title><rect x="47.9751%" y="501" width="11.0533%" height="15" fill="rgb(247,229,0)" fg:x="5165" fg:w="1190"/><text x="48.2251%" y="511.50">neopoligengine`s..</text></g><g><title>neopoligengine`syntect::html::ClassedHTMLGenerator::parse_html_for_line_which_includes_newline (1,203 samples, 11.17%)</title><rect x="47.8636%" y="517" width="11.1741%" height="15" fill="rgb(237,194,15)" fg:x="5153" fg:w="1203"/><text x="48.1136%" y="527.50">neopoligengine`s..</text></g><g><title>neopoligengine`neopoligengine::site::Site::highlight_code (1,899 samples, 17.64%)</title><rect x="41.4081%" y="533" width="17.6389%" height="15" fill="rgb(219,203,20)" fg:x="4458" fg:w="1899"/><text x="41.6581%" y="543.50">neopoligengine`neopoligengi..</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (3,680 samples, 34.18%)</title><rect x="24.9118%" y="565" width="34.1817%" height="15" fill="rgb(234,128,8)" fg:x="2682" fg:w="3680"/><text x="25.1618%" y="575.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (1,907 samples, 17.71%)</title><rect x="41.3803%" y="549" width="17.7132%" height="15" fill="rgb(248,202,8)" fg:x="4455" fg:w="1907"/><text x="41.6303%" y="559.50">neopoligengine`neopoligengin..</text></g><g><title>neopoligengine`syntect::parsing::syntax_set::SyntaxSet::find_syntax_by_token (5 samples, 0.05%)</title><rect x="59.0470%" y="533" width="0.0464%" height="15" fill="rgb(206,104,37)" fg:x="6357" fg:w="5"/><text x="59.2970%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="59.1399%" y="533" width="0.0186%" height="15" fill="rgb(223,8,27)" fg:x="6367" fg:w="2"/><text x="59.3899%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="59.1399%" y="517" width="0.0186%" height="15" fill="rgb(216,217,28)" fg:x="6367" fg:w="2"/><text x="59.3899%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="59.1678%" y="533" width="0.0186%" height="15" fill="rgb(249,199,1)" fg:x="6370" fg:w="2"/><text x="59.4178%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="59.1678%" y="517" width="0.0186%" height="15" fill="rgb(240,85,17)" fg:x="6370" fg:w="2"/><text x="59.4178%" y="527.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="59.1956%" y="485" width="0.0464%" height="15" fill="rgb(206,108,45)" fg:x="6373" fg:w="5"/><text x="59.4456%" y="495.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.05%)</title><rect x="59.1956%" y="469" width="0.0464%" height="15" fill="rgb(245,210,41)" fg:x="6373" fg:w="5"/><text x="59.4456%" y="479.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="59.1956%" y="453" width="0.0464%" height="15" fill="rgb(206,13,37)" fg:x="6373" fg:w="5"/><text x="59.4456%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.05%)</title><rect x="59.1956%" y="437" width="0.0464%" height="15" fill="rgb(250,61,18)" fg:x="6373" fg:w="5"/><text x="59.4456%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.05%)</title><rect x="59.1956%" y="421" width="0.0464%" height="15" fill="rgb(235,172,48)" fg:x="6373" fg:w="5"/><text x="59.4456%" y="431.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="59.1956%" y="533" width="0.0557%" height="15" fill="rgb(249,201,17)" fg:x="6373" fg:w="6"/><text x="59.4456%" y="543.50"></text></g><g><title>neopoligengine`alloc::fmt::format::format_inner (6 samples, 0.06%)</title><rect x="59.1956%" y="517" width="0.0557%" height="15" fill="rgb(219,208,6)" fg:x="6373" fg:w="6"/><text x="59.4456%" y="527.50"></text></g><g><title>neopoligengine`core::fmt::write (6 samples, 0.06%)</title><rect x="59.1956%" y="501" width="0.0557%" height="15" fill="rgb(248,31,23)" fg:x="6373" fg:w="6"/><text x="59.4456%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="59.3164%" y="501" width="0.0279%" height="15" fill="rgb(245,15,42)" fg:x="6386" fg:w="3"/><text x="59.5664%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.02%)</title><rect x="59.3721%" y="485" width="0.0186%" height="15" fill="rgb(222,217,39)" fg:x="6392" fg:w="2"/><text x="59.6221%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.05%)</title><rect x="59.3907%" y="485" width="0.0464%" height="15" fill="rgb(210,219,27)" fg:x="6394" fg:w="5"/><text x="59.6407%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="59.4371%" y="485" width="0.0186%" height="15" fill="rgb(252,166,36)" fg:x="6399" fg:w="2"/><text x="59.6871%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="59.4557%" y="485" width="0.0186%" height="15" fill="rgb(245,132,34)" fg:x="6401" fg:w="2"/><text x="59.7057%" y="495.50"></text></g><g><title>neopoligengine`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.13%)</title><rect x="59.3628%" y="501" width="0.1300%" height="15" fill="rgb(236,54,3)" fg:x="6391" fg:w="14"/><text x="59.6128%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="59.4743%" y="485" width="0.0186%" height="15" fill="rgb(241,173,43)" fg:x="6403" fg:w="2"/><text x="59.7243%" y="495.50"></text></g><g><title>neopoligengine`DYLD-STUB$$free (2 samples, 0.02%)</title><rect x="59.4928%" y="501" width="0.0186%" height="15" fill="rgb(215,190,9)" fg:x="6405" fg:w="2"/><text x="59.7428%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="59.5114%" y="485" width="0.0186%" height="15" fill="rgb(242,101,16)" fg:x="6407" fg:w="2"/><text x="59.7614%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="59.5486%" y="485" width="0.0279%" height="15" fill="rgb(223,190,21)" fg:x="6411" fg:w="3"/><text x="59.7986%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="59.5579%" y="469" width="0.0186%" height="15" fill="rgb(215,228,25)" fg:x="6412" fg:w="2"/><text x="59.8079%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="59.5579%" y="453" width="0.0186%" height="15" fill="rgb(225,36,22)" fg:x="6412" fg:w="2"/><text x="59.8079%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.04%)</title><rect x="59.5764%" y="485" width="0.0372%" height="15" fill="rgb(251,106,46)" fg:x="6414" fg:w="4"/><text x="59.8264%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="59.6693%" y="453" width="0.0372%" height="15" fill="rgb(208,90,1)" fg:x="6424" fg:w="4"/><text x="59.9193%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="59.7158%" y="453" width="0.0186%" height="15" fill="rgb(243,10,4)" fg:x="6429" fg:w="2"/><text x="59.9658%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.02%)</title><rect x="59.7994%" y="421" width="0.0186%" height="15" fill="rgb(212,137,27)" fg:x="6438" fg:w="2"/><text x="60.0494%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="59.8179%" y="389" width="0.0279%" height="15" fill="rgb(231,220,49)" fg:x="6440" fg:w="3"/><text x="60.0679%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.04%)</title><rect x="59.8179%" y="421" width="0.0372%" height="15" fill="rgb(237,96,20)" fg:x="6440" fg:w="4"/><text x="60.0679%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.04%)</title><rect x="59.8179%" y="405" width="0.0372%" height="15" fill="rgb(239,229,30)" fg:x="6440" fg:w="4"/><text x="60.0679%" y="415.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_definition::Context&gt; (26 samples, 0.24%)</title><rect x="59.6229%" y="485" width="0.2415%" height="15" fill="rgb(219,65,33)" fg:x="6419" fg:w="26"/><text x="59.8729%" y="495.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_definition::Pattern&gt; (24 samples, 0.22%)</title><rect x="59.6415%" y="469" width="0.2229%" height="15" fill="rgb(243,134,7)" fg:x="6421" fg:w="24"/><text x="59.8915%" y="479.50"></text></g><g><title>neopoligengine`onig_free (13 samples, 0.12%)</title><rect x="59.7436%" y="453" width="0.1208%" height="15" fill="rgb(216,177,54)" fg:x="6432" fg:w="13"/><text x="59.9936%" y="463.50"></text></g><g><title>neopoligengine`onig_free_body (12 samples, 0.11%)</title><rect x="59.7529%" y="437" width="0.1115%" height="15" fill="rgb(211,160,20)" fg:x="6433" fg:w="12"/><text x="60.0029%" y="447.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;once_cell::sync::OnceCell&lt;syntect::parsing::syntax_set::LazyContexts&gt;&gt; (39 samples, 0.36%)</title><rect x="59.5114%" y="501" width="0.3623%" height="15" fill="rgb(239,85,39)" fg:x="6407" fg:w="39"/><text x="59.7614%" y="511.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_set::SyntaxSet&gt; (66 samples, 0.61%)</title><rect x="59.2699%" y="533" width="0.6130%" height="15" fill="rgb(232,125,22)" fg:x="6381" fg:w="66"/><text x="59.5199%" y="543.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;syntect::parsing::syntax_set::SyntaxReference&gt; (62 samples, 0.58%)</title><rect x="59.3071%" y="517" width="0.5759%" height="15" fill="rgb(244,57,34)" fg:x="6385" fg:w="62"/><text x="59.5571%" y="527.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.03%)</title><rect x="59.9201%" y="485" width="0.0279%" height="15" fill="rgb(214,203,32)" fg:x="6451" fg:w="3"/><text x="60.1701%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="59.9480%" y="469" width="0.0186%" height="15" fill="rgb(207,58,43)" fg:x="6454" fg:w="2"/><text x="60.1980%" y="479.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="59.9666%" y="469" width="0.0186%" height="15" fill="rgb(215,193,15)" fg:x="6456" fg:w="2"/><text x="60.2166%" y="479.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.02%)</title><rect x="59.9666%" y="453" width="0.0186%" height="15" fill="rgb(232,15,44)" fg:x="6456" fg:w="2"/><text x="60.2166%" y="463.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="60.0409%" y="405" width="0.0279%" height="15" fill="rgb(212,3,48)" fg:x="6464" fg:w="3"/><text x="60.2909%" y="415.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (10 samples, 0.09%)</title><rect x="59.9851%" y="469" width="0.0929%" height="15" fill="rgb(218,128,7)" fg:x="6458" fg:w="10"/><text x="60.2351%" y="479.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (9 samples, 0.08%)</title><rect x="59.9944%" y="453" width="0.0836%" height="15" fill="rgb(226,216,39)" fg:x="6459" fg:w="9"/><text x="60.2444%" y="463.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (6 samples, 0.06%)</title><rect x="60.0223%" y="437" width="0.0557%" height="15" fill="rgb(243,47,51)" fg:x="6462" fg:w="6"/><text x="60.2723%" y="447.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="60.0316%" y="421" width="0.0464%" height="15" fill="rgb(241,183,40)" fg:x="6463" fg:w="5"/><text x="60.2816%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="60.0780%" y="453" width="0.0186%" height="15" fill="rgb(231,217,32)" fg:x="6468" fg:w="2"/><text x="60.3280%" y="463.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="60.1059%" y="437" width="0.0186%" height="15" fill="rgb(229,61,38)" fg:x="6471" fg:w="2"/><text x="60.3559%" y="447.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.07%)</title><rect x="60.0780%" y="469" width="0.0650%" height="15" fill="rgb(225,210,5)" fg:x="6468" fg:w="7"/><text x="60.3280%" y="479.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (4 samples, 0.04%)</title><rect x="60.1059%" y="453" width="0.0372%" height="15" fill="rgb(231,79,45)" fg:x="6471" fg:w="4"/><text x="60.3559%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="60.1895%" y="437" width="0.0186%" height="15" fill="rgb(224,100,7)" fg:x="6480" fg:w="2"/><text x="60.4395%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.05%)</title><rect x="60.2081%" y="437" width="0.0464%" height="15" fill="rgb(241,198,18)" fg:x="6482" fg:w="5"/><text x="60.4581%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.04%)</title><rect x="60.2731%" y="405" width="0.0372%" height="15" fill="rgb(252,97,53)" fg:x="6489" fg:w="4"/><text x="60.5231%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.04%)</title><rect x="60.3288%" y="389" width="0.0372%" height="15" fill="rgb(220,88,7)" fg:x="6495" fg:w="4"/><text x="60.5788%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="60.3474%" y="373" width="0.0186%" height="15" fill="rgb(213,176,14)" fg:x="6497" fg:w="2"/><text x="60.5974%" y="383.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.12%)</title><rect x="60.2638%" y="421" width="0.1208%" height="15" fill="rgb(246,73,7)" fg:x="6488" fg:w="13"/><text x="60.5138%" y="431.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (8 samples, 0.07%)</title><rect x="60.3102%" y="405" width="0.0743%" height="15" fill="rgb(245,64,36)" fg:x="6493" fg:w="8"/><text x="60.5602%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="60.3660%" y="389" width="0.0186%" height="15" fill="rgb(245,80,10)" fg:x="6499" fg:w="2"/><text x="60.6160%" y="399.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (23 samples, 0.21%)</title><rect x="60.2545%" y="437" width="0.2136%" height="15" fill="rgb(232,107,50)" fg:x="6487" fg:w="23"/><text x="60.5045%" y="447.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (9 samples, 0.08%)</title><rect x="60.3845%" y="421" width="0.0836%" height="15" fill="rgb(253,3,0)" fg:x="6501" fg:w="9"/><text x="60.6345%" y="431.50"></text></g><g><title>neopoligengine`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="60.4867%" y="421" width="0.0372%" height="15" fill="rgb(212,99,53)" fg:x="6512" fg:w="4"/><text x="60.7367%" y="431.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.05%)</title><rect x="60.4867%" y="437" width="0.0464%" height="15" fill="rgb(249,111,54)" fg:x="6512" fg:w="5"/><text x="60.7367%" y="447.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_map (42 samples, 0.39%)</title><rect x="60.1523%" y="453" width="0.3901%" height="15" fill="rgb(249,55,30)" fg:x="6476" fg:w="42"/><text x="60.4023%" y="463.50"></text></g><g><title>neopoligengine`syntect::dumps::_&lt;impl syntect::parsing::syntax_set::SyntaxSet&gt;::load_defaults_newlines (812 samples, 7.54%)</title><rect x="59.8830%" y="533" width="7.5423%" height="15" fill="rgb(237,47,42)" fg:x="6447" fg:w="812"/><text x="60.1330%" y="543.50">neopoligen..</text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (812 samples, 7.54%)</title><rect x="59.8830%" y="517" width="7.5423%" height="15" fill="rgb(211,20,18)" fg:x="6447" fg:w="812"/><text x="60.1330%" y="527.50">neopoligen..</text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (812 samples, 7.54%)</title><rect x="59.8830%" y="501" width="7.5423%" height="15" fill="rgb(231,203,46)" fg:x="6447" fg:w="812"/><text x="60.1330%" y="511.50">neopoligen..</text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (805 samples, 7.48%)</title><rect x="59.9480%" y="485" width="7.4772%" height="15" fill="rgb(237,142,3)" fg:x="6454" fg:w="805"/><text x="60.1980%" y="495.50">neopoligen..</text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (784 samples, 7.28%)</title><rect x="60.1430%" y="469" width="7.2822%" height="15" fill="rgb(241,107,1)" fg:x="6475" fg:w="784"/><text x="60.3930%" y="479.50">neopoligen..</text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (741 samples, 6.88%)</title><rect x="60.5424%" y="453" width="6.8828%" height="15" fill="rgb(229,83,13)" fg:x="6518" fg:w="741"/><text x="60.7924%" y="463.50">neopolige..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="67.4067%" y="437" width="0.0186%" height="15" fill="rgb(241,91,40)" fg:x="7257" fg:w="2"/><text x="67.6567%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="67.4067%" y="421" width="0.0186%" height="15" fill="rgb(225,3,45)" fg:x="7257" fg:w="2"/><text x="67.6567%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="67.4067%" y="405" width="0.0186%" height="15" fill="rgb(244,223,14)" fg:x="7257" fg:w="2"/><text x="67.6567%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (34 samples, 0.32%)</title><rect x="67.4345%" y="437" width="0.3158%" height="15" fill="rgb(224,124,37)" fg:x="7260" fg:w="34"/><text x="67.6845%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (34 samples, 0.32%)</title><rect x="67.4345%" y="421" width="0.3158%" height="15" fill="rgb(251,171,30)" fg:x="7260" fg:w="34"/><text x="67.6845%" y="431.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="67.7875%" y="389" width="0.0186%" height="15" fill="rgb(236,46,54)" fg:x="7298" fg:w="2"/><text x="68.0375%" y="399.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (6 samples, 0.06%)</title><rect x="67.7689%" y="405" width="0.0557%" height="15" fill="rgb(245,213,5)" fg:x="7296" fg:w="6"/><text x="68.0189%" y="415.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="67.8061%" y="389" width="0.0186%" height="15" fill="rgb(230,144,27)" fg:x="7300" fg:w="2"/><text x="68.0561%" y="399.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="67.8246%" y="405" width="0.0372%" height="15" fill="rgb(220,86,6)" fg:x="7302" fg:w="4"/><text x="68.0746%" y="415.50"></text></g><g><title>neopoligengine`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="67.8339%" y="389" width="0.0279%" height="15" fill="rgb(240,20,13)" fg:x="7303" fg:w="3"/><text x="68.0839%" y="399.50"></text></g><g><title>neopoligengine`adler::Adler32::write_slice (5 samples, 0.05%)</title><rect x="67.8989%" y="325" width="0.0464%" height="15" fill="rgb(217,89,34)" fg:x="7310" fg:w="5"/><text x="68.1489%" y="335.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::init_tree (3 samples, 0.03%)</title><rect x="68.2055%" y="309" width="0.0279%" height="15" fill="rgb(229,13,5)" fg:x="7343" fg:w="3"/><text x="68.4555%" y="319.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_map (73 samples, 0.68%)</title><rect x="67.7503%" y="421" width="0.6781%" height="15" fill="rgb(244,67,35)" fg:x="7294" fg:w="73"/><text x="68.0003%" y="431.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (61 samples, 0.57%)</title><rect x="67.8618%" y="405" width="0.5666%" height="15" fill="rgb(221,40,2)" fg:x="7306" fg:w="61"/><text x="68.1118%" y="415.50"></text></g><g><title>neopoligengine`flate2::zio::read (60 samples, 0.56%)</title><rect x="67.8711%" y="389" width="0.5573%" height="15" fill="rgb(237,157,21)" fg:x="7307" fg:w="60"/><text x="68.1211%" y="399.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (60 samples, 0.56%)</title><rect x="67.8711%" y="373" width="0.5573%" height="15" fill="rgb(222,94,11)" fg:x="7307" fg:w="60"/><text x="68.1211%" y="383.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (58 samples, 0.54%)</title><rect x="67.8897%" y="357" width="0.5387%" height="15" fill="rgb(249,113,6)" fg:x="7309" fg:w="58"/><text x="68.1397%" y="367.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate_loop (57 samples, 0.53%)</title><rect x="67.8989%" y="341" width="0.5294%" height="15" fill="rgb(238,137,36)" fg:x="7310" fg:w="57"/><text x="68.1489%" y="351.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::decompress (52 samples, 0.48%)</title><rect x="67.9454%" y="325" width="0.4830%" height="15" fill="rgb(210,102,26)" fg:x="7315" fg:w="52"/><text x="68.1954%" y="335.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::transfer (21 samples, 0.20%)</title><rect x="68.2333%" y="309" width="0.1951%" height="15" fill="rgb(218,30,30)" fg:x="7346" fg:w="21"/><text x="68.4833%" y="319.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="68.4563%" y="389" width="0.0186%" height="15" fill="rgb(214,67,26)" fg:x="7370" fg:w="2"/><text x="68.7063%" y="399.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="68.5027%" y="357" width="0.0186%" height="15" fill="rgb(251,9,53)" fg:x="7375" fg:w="2"/><text x="68.7527%" y="367.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="68.5213%" y="357" width="0.0186%" height="15" fill="rgb(228,204,25)" fg:x="7377" fg:w="2"/><text x="68.7713%" y="367.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="68.5213%" y="341" width="0.0186%" height="15" fill="rgb(207,153,8)" fg:x="7377" fg:w="2"/><text x="68.7713%" y="351.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (9 samples, 0.08%)</title><rect x="68.4934%" y="373" width="0.0836%" height="15" fill="rgb(242,9,16)" fg:x="7374" fg:w="9"/><text x="68.7434%" y="383.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (4 samples, 0.04%)</title><rect x="68.5398%" y="357" width="0.0372%" height="15" fill="rgb(217,211,10)" fg:x="7379" fg:w="4"/><text x="68.7898%" y="367.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (4 samples, 0.04%)</title><rect x="68.5398%" y="341" width="0.0372%" height="15" fill="rgb(219,228,52)" fg:x="7379" fg:w="4"/><text x="68.7898%" y="351.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (13 samples, 0.12%)</title><rect x="68.4748%" y="389" width="0.1208%" height="15" fill="rgb(231,92,29)" fg:x="7372" fg:w="13"/><text x="68.7248%" y="399.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="68.5770%" y="373" width="0.0186%" height="15" fill="rgb(232,8,23)" fg:x="7383" fg:w="2"/><text x="68.8270%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="68.6420%" y="357" width="0.0186%" height="15" fill="rgb(216,211,34)" fg:x="7390" fg:w="2"/><text x="68.8920%" y="367.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_bool (3 samples, 0.03%)</title><rect x="68.7256%" y="325" width="0.0279%" height="15" fill="rgb(236,151,0)" fg:x="7399" fg:w="3"/><text x="68.9756%" y="335.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (3 samples, 0.03%)</title><rect x="68.7256%" y="309" width="0.0279%" height="15" fill="rgb(209,168,3)" fg:x="7399" fg:w="3"/><text x="68.9756%" y="319.50"></text></g><g><title>neopoligengine`flate2::zio::read (3 samples, 0.03%)</title><rect x="68.7256%" y="293" width="0.0279%" height="15" fill="rgb(208,129,28)" fg:x="7399" fg:w="3"/><text x="68.9756%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (3 samples, 0.03%)</title><rect x="68.7256%" y="277" width="0.0279%" height="15" fill="rgb(229,78,22)" fg:x="7399" fg:w="3"/><text x="68.9756%" y="287.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="68.8185%" y="245" width="0.0372%" height="15" fill="rgb(228,187,13)" fg:x="7409" fg:w="4"/><text x="69.0685%" y="255.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="68.8371%" y="229" width="0.0186%" height="15" fill="rgb(240,119,24)" fg:x="7411" fg:w="2"/><text x="69.0871%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="68.8371%" y="213" width="0.0186%" height="15" fill="rgb(209,194,42)" fg:x="7411" fg:w="2"/><text x="69.0871%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="68.8371%" y="197" width="0.0186%" height="15" fill="rgb(247,200,46)" fg:x="7411" fg:w="2"/><text x="69.0871%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="68.8371%" y="181" width="0.0186%" height="15" fill="rgb(218,76,16)" fg:x="7411" fg:w="2"/><text x="69.0871%" y="191.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (3 samples, 0.03%)</title><rect x="68.8557%" y="245" width="0.0279%" height="15" fill="rgb(225,21,48)" fg:x="7413" fg:w="3"/><text x="69.1057%" y="255.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (3 samples, 0.03%)</title><rect x="68.8835%" y="245" width="0.0279%" height="15" fill="rgb(239,223,50)" fg:x="7416" fg:w="3"/><text x="69.1335%" y="255.50"></text></g><g><title>neopoligengine`flate2::zio::read (3 samples, 0.03%)</title><rect x="68.8835%" y="229" width="0.0279%" height="15" fill="rgb(244,45,21)" fg:x="7416" fg:w="3"/><text x="69.1335%" y="239.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (3 samples, 0.03%)</title><rect x="68.8835%" y="213" width="0.0279%" height="15" fill="rgb(232,33,43)" fg:x="7416" fg:w="3"/><text x="69.1335%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="68.8928%" y="197" width="0.0186%" height="15" fill="rgb(209,8,3)" fg:x="7417" fg:w="2"/><text x="69.1428%" y="207.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="68.9671%" y="197" width="0.0372%" height="15" fill="rgb(214,25,53)" fg:x="7425" fg:w="4"/><text x="69.2171%" y="207.50"></text></g><g><title>neopoligengine`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="69.0321%" y="181" width="0.0186%" height="15" fill="rgb(254,186,54)" fg:x="7432" fg:w="2"/><text x="69.2821%" y="191.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (29 samples, 0.27%)</title><rect x="68.7906%" y="261" width="0.2694%" height="15" fill="rgb(208,174,49)" fg:x="7406" fg:w="29"/><text x="69.0406%" y="271.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (16 samples, 0.15%)</title><rect x="68.9114%" y="245" width="0.1486%" height="15" fill="rgb(233,191,51)" fg:x="7419" fg:w="16"/><text x="69.1614%" y="255.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (16 samples, 0.15%)</title><rect x="68.9114%" y="229" width="0.1486%" height="15" fill="rgb(222,134,10)" fg:x="7419" fg:w="16"/><text x="69.1614%" y="239.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.11%)</title><rect x="68.9485%" y="213" width="0.1115%" height="15" fill="rgb(230,226,20)" fg:x="7423" fg:w="12"/><text x="69.1985%" y="223.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.05%)</title><rect x="69.0136%" y="197" width="0.0464%" height="15" fill="rgb(251,111,25)" fg:x="7430" fg:w="5"/><text x="69.2636%" y="207.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (35 samples, 0.33%)</title><rect x="68.7628%" y="309" width="0.3251%" height="15" fill="rgb(224,40,46)" fg:x="7403" fg:w="35"/><text x="69.0128%" y="319.50"></text></g><g><title>neopoligengine`&lt;&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_tuple::Access&lt;R,O&gt; as serde::de::SeqAccess&gt;::next_element_seed (35 samples, 0.33%)</title><rect x="68.7628%" y="293" width="0.3251%" height="15" fill="rgb(236,108,47)" fg:x="7403" fg:w="35"/><text x="69.0128%" y="303.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (33 samples, 0.31%)</title><rect x="68.7813%" y="277" width="0.3065%" height="15" fill="rgb(234,93,0)" fg:x="7405" fg:w="33"/><text x="69.0313%" y="287.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="69.0693%" y="261" width="0.0186%" height="15" fill="rgb(224,213,32)" fg:x="7436" fg:w="2"/><text x="69.3193%" y="271.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="69.0693%" y="245" width="0.0186%" height="15" fill="rgb(251,11,48)" fg:x="7436" fg:w="2"/><text x="69.3193%" y="255.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="69.0693%" y="229" width="0.0186%" height="15" fill="rgb(236,173,5)" fg:x="7436" fg:w="2"/><text x="69.3193%" y="239.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (40 samples, 0.37%)</title><rect x="68.7535%" y="325" width="0.3715%" height="15" fill="rgb(230,95,12)" fg:x="7402" fg:w="40"/><text x="69.0035%" y="335.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (4 samples, 0.04%)</title><rect x="69.0879%" y="309" width="0.0372%" height="15" fill="rgb(232,209,1)" fg:x="7438" fg:w="4"/><text x="69.3379%" y="319.50"></text></g><g><title>neopoligengine`flate2::zio::read (3 samples, 0.03%)</title><rect x="69.0972%" y="293" width="0.0279%" height="15" fill="rgb(232,6,1)" fg:x="7439" fg:w="3"/><text x="69.3472%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (3 samples, 0.03%)</title><rect x="69.0972%" y="277" width="0.0279%" height="15" fill="rgb(210,224,50)" fg:x="7439" fg:w="3"/><text x="69.3472%" y="287.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (3 samples, 0.03%)</title><rect x="69.0972%" y="261" width="0.0279%" height="15" fill="rgb(228,127,35)" fg:x="7439" fg:w="3"/><text x="69.3472%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="69.1622%" y="261" width="0.0186%" height="15" fill="rgb(245,102,45)" fg:x="7446" fg:w="2"/><text x="69.4122%" y="271.50"></text></g><g><title>neopoligengine`adler::Adler32::write_slice (2 samples, 0.02%)</title><rect x="69.2179%" y="229" width="0.0186%" height="15" fill="rgb(214,1,49)" fg:x="7452" fg:w="2"/><text x="69.4679%" y="239.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::decompress (11 samples, 0.10%)</title><rect x="69.2365%" y="229" width="0.1022%" height="15" fill="rgb(226,163,40)" fg:x="7454" fg:w="11"/><text x="69.4865%" y="239.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::core::transfer (6 samples, 0.06%)</title><rect x="69.2829%" y="213" width="0.0557%" height="15" fill="rgb(239,212,28)" fg:x="7459" fg:w="6"/><text x="69.5329%" y="223.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_string (24 samples, 0.22%)</title><rect x="69.1250%" y="325" width="0.2229%" height="15" fill="rgb(220,20,13)" fg:x="7442" fg:w="24"/><text x="69.3750%" y="335.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (22 samples, 0.20%)</title><rect x="69.1436%" y="309" width="0.2043%" height="15" fill="rgb(210,164,35)" fg:x="7444" fg:w="22"/><text x="69.3936%" y="319.50"></text></g><g><title>neopoligengine`flate2::zio::read (22 samples, 0.20%)</title><rect x="69.1436%" y="293" width="0.2043%" height="15" fill="rgb(248,109,41)" fg:x="7444" fg:w="22"/><text x="69.3936%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (21 samples, 0.20%)</title><rect x="69.1529%" y="277" width="0.1951%" height="15" fill="rgb(238,23,50)" fg:x="7445" fg:w="21"/><text x="69.4029%" y="287.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (18 samples, 0.17%)</title><rect x="69.1808%" y="261" width="0.1672%" height="15" fill="rgb(211,48,49)" fg:x="7448" fg:w="18"/><text x="69.4308%" y="271.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate_loop (14 samples, 0.13%)</title><rect x="69.2179%" y="245" width="0.1300%" height="15" fill="rgb(223,36,21)" fg:x="7452" fg:w="14"/><text x="69.4679%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="69.3944%" y="277" width="0.0186%" height="15" fill="rgb(207,123,46)" fg:x="7471" fg:w="2"/><text x="69.6444%" y="287.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.08%)</title><rect x="69.3851%" y="293" width="0.0836%" height="15" fill="rgb(240,218,32)" fg:x="7470" fg:w="9"/><text x="69.6351%" y="303.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="69.4130%" y="277" width="0.0557%" height="15" fill="rgb(252,5,43)" fg:x="7473" fg:w="6"/><text x="69.6630%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="69.4501%" y="261" width="0.0186%" height="15" fill="rgb(252,84,19)" fg:x="7477" fg:w="2"/><text x="69.7001%" y="271.50"></text></g><g><title>neopoligengine`core::str::converts::from_utf8 (5 samples, 0.05%)</title><rect x="69.4780%" y="293" width="0.0464%" height="15" fill="rgb(243,152,39)" fg:x="7480" fg:w="5"/><text x="69.7280%" y="303.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="69.5244%" y="261" width="0.0186%" height="15" fill="rgb(234,160,15)" fg:x="7485" fg:w="2"/><text x="69.7744%" y="271.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (4 samples, 0.04%)</title><rect x="69.5244%" y="293" width="0.0372%" height="15" fill="rgb(237,34,20)" fg:x="7485" fg:w="4"/><text x="69.7744%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (4 samples, 0.04%)</title><rect x="69.5244%" y="277" width="0.0372%" height="15" fill="rgb(229,97,13)" fg:x="7485" fg:w="4"/><text x="69.7744%" y="287.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (2 samples, 0.02%)</title><rect x="69.5430%" y="261" width="0.0186%" height="15" fill="rgb(234,71,50)" fg:x="7487" fg:w="2"/><text x="69.7930%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.05%)</title><rect x="69.5894%" y="245" width="0.0464%" height="15" fill="rgb(253,155,4)" fg:x="7492" fg:w="5"/><text x="69.8394%" y="255.50"></text></g><g><title>neopoligengine`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="69.6359%" y="245" width="0.0186%" height="15" fill="rgb(222,185,37)" fg:x="7497" fg:w="2"/><text x="69.8859%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="69.6638%" y="213" width="0.0186%" height="15" fill="rgb(251,177,13)" fg:x="7500" fg:w="2"/><text x="69.9138%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="69.6638%" y="197" width="0.0186%" height="15" fill="rgb(250,179,40)" fg:x="7500" fg:w="2"/><text x="69.9138%" y="207.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="69.6638%" y="245" width="0.0372%" height="15" fill="rgb(242,44,2)" fg:x="7500" fg:w="4"/><text x="69.9138%" y="255.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="69.6638%" y="229" width="0.0372%" height="15" fill="rgb(216,177,13)" fg:x="7500" fg:w="4"/><text x="69.9138%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.02%)</title><rect x="69.6823%" y="213" width="0.0186%" height="15" fill="rgb(216,106,43)" fg:x="7502" fg:w="2"/><text x="69.9323%" y="223.50"></text></g><g><title>neopoligengine`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.07%)</title><rect x="69.7195%" y="229" width="0.0743%" height="15" fill="rgb(216,183,2)" fg:x="7506" fg:w="8"/><text x="69.9695%" y="239.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.26%)</title><rect x="69.5894%" y="261" width="0.2601%" height="15" fill="rgb(249,75,3)" fg:x="7492" fg:w="28"/><text x="69.8394%" y="271.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.15%)</title><rect x="69.7009%" y="245" width="0.1486%" height="15" fill="rgb(219,67,39)" fg:x="7504" fg:w="16"/><text x="69.9509%" y="255.50"></text></g><g><title>neopoligengine`core::hash::BuildHasher::hash_one (6 samples, 0.06%)</title><rect x="69.7938%" y="229" width="0.0557%" height="15" fill="rgb(253,228,2)" fg:x="7514" fg:w="6"/><text x="70.0438%" y="239.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (56 samples, 0.52%)</title><rect x="69.3479%" y="325" width="0.5202%" height="15" fill="rgb(235,138,27)" fg:x="7466" fg:w="56"/><text x="69.5979%" y="335.50"></text></g><g><title>neopoligengine`&lt;bincode::de::read::IoReader&lt;R&gt; as bincode::de::read::BincodeRead&gt;::forward_read_str (53 samples, 0.49%)</title><rect x="69.3758%" y="309" width="0.4923%" height="15" fill="rgb(236,97,51)" fg:x="7469" fg:w="53"/><text x="69.6258%" y="319.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::Scope::new (33 samples, 0.31%)</title><rect x="69.5616%" y="293" width="0.3065%" height="15" fill="rgb(240,80,30)" fg:x="7489" fg:w="33"/><text x="69.8116%" y="303.50"></text></g><g><title>neopoligengine`syntect::parsing::scope::ScopeRepository::build (33 samples, 0.31%)</title><rect x="69.5616%" y="277" width="0.3065%" height="15" fill="rgb(230,178,19)" fg:x="7489" fg:w="33"/><text x="69.8116%" y="287.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_option (2 samples, 0.02%)</title><rect x="69.8681%" y="309" width="0.0186%" height="15" fill="rgb(210,190,27)" fg:x="7522" fg:w="2"/><text x="70.1181%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="69.8681%" y="293" width="0.0186%" height="15" fill="rgb(222,107,31)" fg:x="7522" fg:w="2"/><text x="70.1181%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="69.8681%" y="277" width="0.0186%" height="15" fill="rgb(216,127,34)" fg:x="7522" fg:w="2"/><text x="70.1181%" y="287.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.07%)</title><rect x="69.9053%" y="293" width="0.0650%" height="15" fill="rgb(234,116,52)" fg:x="7526" fg:w="7"/><text x="70.1553%" y="303.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::ContextReference&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (7 samples, 0.07%)</title><rect x="69.9053%" y="277" width="0.0650%" height="15" fill="rgb(222,124,15)" fg:x="7526" fg:w="7"/><text x="70.1553%" y="287.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (6 samples, 0.06%)</title><rect x="69.9145%" y="261" width="0.0557%" height="15" fill="rgb(231,179,28)" fg:x="7527" fg:w="6"/><text x="70.1645%" y="271.50"></text></g><g><title>neopoligengine`flate2::zio::read (6 samples, 0.06%)</title><rect x="69.9145%" y="245" width="0.0557%" height="15" fill="rgb(226,93,45)" fg:x="7527" fg:w="6"/><text x="70.1645%" y="255.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (5 samples, 0.05%)</title><rect x="69.9238%" y="229" width="0.0464%" height="15" fill="rgb(215,8,51)" fg:x="7528" fg:w="5"/><text x="70.1738%" y="239.50"></text></g><g><title>neopoligengine`miniz_oxide::inflate::stream::inflate (5 samples, 0.05%)</title><rect x="69.9238%" y="213" width="0.0464%" height="15" fill="rgb(223,106,5)" fg:x="7528" fg:w="5"/><text x="70.1738%" y="223.50"></text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (14 samples, 0.13%)</title><rect x="69.8681%" y="325" width="0.1300%" height="15" fill="rgb(250,191,5)" fg:x="7522" fg:w="14"/><text x="70.1181%" y="335.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::MatchOperation&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (12 samples, 0.11%)</title><rect x="69.8867%" y="309" width="0.1115%" height="15" fill="rgb(242,132,44)" fg:x="7524" fg:w="12"/><text x="70.1367%" y="319.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (3 samples, 0.03%)</title><rect x="69.9703%" y="293" width="0.0279%" height="15" fill="rgb(251,152,29)" fg:x="7533" fg:w="3"/><text x="70.2203%" y="303.50"></text></g><g><title>neopoligengine`flate2::zio::read (3 samples, 0.03%)</title><rect x="69.9703%" y="277" width="0.0279%" height="15" fill="rgb(218,179,5)" fg:x="7533" fg:w="3"/><text x="70.2203%" y="287.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="69.9796%" y="261" width="0.0186%" height="15" fill="rgb(227,67,19)" fg:x="7534" fg:w="2"/><text x="70.2296%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="69.9796%" y="245" width="0.0186%" height="15" fill="rgb(233,119,31)" fg:x="7534" fg:w="2"/><text x="70.2296%" y="255.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (143 samples, 1.33%)</title><rect x="68.6885%" y="341" width="1.3283%" height="15" fill="rgb(241,120,22)" fg:x="7395" fg:w="143"/><text x="68.9385%" y="351.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="69.9981%" y="325" width="0.0186%" height="15" fill="rgb(224,102,30)" fg:x="7536" fg:w="2"/><text x="70.2481%" y="335.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="69.9981%" y="309" width="0.0186%" height="15" fill="rgb(210,164,37)" fg:x="7536" fg:w="2"/><text x="70.2481%" y="319.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::ContextReference&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (6 samples, 0.06%)</title><rect x="70.0167%" y="341" width="0.0557%" height="15" fill="rgb(226,191,16)" fg:x="7538" fg:w="6"/><text x="70.2667%" y="351.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (5 samples, 0.05%)</title><rect x="70.0260%" y="325" width="0.0464%" height="15" fill="rgb(214,40,45)" fg:x="7539" fg:w="5"/><text x="70.2760%" y="335.50"></text></g><g><title>neopoligengine`flate2::zio::read (4 samples, 0.04%)</title><rect x="70.0353%" y="309" width="0.0372%" height="15" fill="rgb(244,29,26)" fg:x="7540" fg:w="4"/><text x="70.2853%" y="319.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="70.0539%" y="293" width="0.0186%" height="15" fill="rgb(216,16,5)" fg:x="7542" fg:w="2"/><text x="70.3039%" y="303.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (159 samples, 1.48%)</title><rect x="68.6142%" y="373" width="1.4769%" height="15" fill="rgb(249,76,35)" fg:x="7387" fg:w="159"/><text x="68.8642%" y="383.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::_::&lt;impl serde::de::Deserialize for syntect::parsing::syntax_definition::Pattern&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (153 samples, 1.42%)</title><rect x="68.6699%" y="357" width="1.4211%" height="15" fill="rgb(207,11,44)" fg:x="7393" fg:w="153"/><text x="68.9199%" y="367.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (2 samples, 0.02%)</title><rect x="70.0725%" y="341" width="0.0186%" height="15" fill="rgb(228,190,49)" fg:x="7544" fg:w="2"/><text x="70.3225%" y="351.50"></text></g><g><title>neopoligengine`serde::de::SeqAccess::next_element (167 samples, 1.55%)</title><rect x="68.5956%" y="389" width="1.5512%" height="15" fill="rgb(214,173,12)" fg:x="7385" fg:w="167"/><text x="68.8456%" y="399.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (4 samples, 0.04%)</title><rect x="70.1096%" y="373" width="0.0372%" height="15" fill="rgb(218,26,35)" fg:x="7548" fg:w="4"/><text x="70.3596%" y="383.50"></text></g><g><title>neopoligengine`flate2::zio::read (4 samples, 0.04%)</title><rect x="70.1096%" y="357" width="0.0372%" height="15" fill="rgb(220,200,19)" fg:x="7548" fg:w="4"/><text x="70.3596%" y="367.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (3 samples, 0.03%)</title><rect x="70.1189%" y="341" width="0.0279%" height="15" fill="rgb(239,95,49)" fg:x="7549" fg:w="3"/><text x="70.3689%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="70.1282%" y="325" width="0.0186%" height="15" fill="rgb(235,85,53)" fg:x="7550" fg:w="2"/><text x="70.3782%" y="335.50"></text></g><g><title>neopoligengine`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (188 samples, 1.75%)</title><rect x="68.4284%" y="421" width="1.7462%" height="15" fill="rgb(233,133,31)" fg:x="7367" fg:w="188"/><text x="68.6784%" y="431.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (187 samples, 1.74%)</title><rect x="68.4377%" y="405" width="1.7369%" height="15" fill="rgb(218,25,20)" fg:x="7368" fg:w="187"/><text x="68.6877%" y="415.50"></text></g><g><title>neopoligengine`std::io::default_read_exact (3 samples, 0.03%)</title><rect x="70.1468%" y="389" width="0.0279%" height="15" fill="rgb(252,210,38)" fg:x="7552" fg:w="3"/><text x="70.3968%" y="399.50"></text></g><g><title>neopoligengine`flate2::zio::read (2 samples, 0.02%)</title><rect x="70.1560%" y="373" width="0.0186%" height="15" fill="rgb(242,134,21)" fg:x="7553" fg:w="2"/><text x="70.4060%" y="383.50"></text></g><g><title>neopoligengine`&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (2 samples, 0.02%)</title><rect x="70.1560%" y="357" width="0.0186%" height="15" fill="rgb(213,28,48)" fg:x="7553" fg:w="2"/><text x="70.4060%" y="367.50"></text></g><g><title>neopoligengine`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (262 samples, 2.43%)</title><rect x="67.7503%" y="437" width="2.4336%" height="15" fill="rgb(250,196,2)" fg:x="7294" fg:w="262"/><text x="68.0003%" y="447.50">ne..</text></g><g><title>neopoligengine`syntect::html::ClassedHTMLGenerator::new_with_class_style (298 samples, 2.77%)</title><rect x="67.4252%" y="533" width="2.7680%" height="15" fill="rgb(227,5,17)" fg:x="7259" fg:w="298"/><text x="67.6752%" y="543.50">ne..</text></g><g><title>neopoligengine`syntect::parsing::parser::ParseState::new (298 samples, 2.77%)</title><rect x="67.4252%" y="517" width="2.7680%" height="15" fill="rgb(221,226,24)" fg:x="7259" fg:w="298"/><text x="67.6752%" y="527.50">ne..</text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize (297 samples, 2.76%)</title><rect x="67.4345%" y="501" width="2.7587%" height="15" fill="rgb(211,5,48)" fg:x="7260" fg:w="297"/><text x="67.6845%" y="511.50">ne..</text></g><g><title>neopoligengine`once_cell::imp::initialize_or_wait (297 samples, 2.76%)</title><rect x="67.4345%" y="485" width="2.7587%" height="15" fill="rgb(219,150,6)" fg:x="7260" fg:w="297"/><text x="67.6845%" y="495.50">ne..</text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (297 samples, 2.76%)</title><rect x="67.4345%" y="469" width="2.7587%" height="15" fill="rgb(251,46,16)" fg:x="7260" fg:w="297"/><text x="67.6845%" y="479.50">ne..</text></g><g><title>neopoligengine`syntect::dumps::deserialize_from_reader_impl (297 samples, 2.76%)</title><rect x="67.4345%" y="453" width="2.7587%" height="15" fill="rgb(220,204,40)" fg:x="7260" fg:w="297"/><text x="67.6845%" y="463.50">ne..</text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::MatchIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="70.2211%" y="517" width="0.0464%" height="15" fill="rgb(211,85,2)" fg:x="7560" fg:w="5"/><text x="70.4711%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="70.3140%" y="485" width="0.0186%" height="15" fill="rgb(229,17,7)" fg:x="7570" fg:w="2"/><text x="70.5640%" y="495.50"></text></g><g><title>neopoligengine`syntect::html::line_tokens_to_classed_spans (6 samples, 0.06%)</title><rect x="70.2861%" y="517" width="0.0557%" height="15" fill="rgb(239,72,28)" fg:x="7567" fg:w="6"/><text x="70.5361%" y="527.50"></text></g><g><title>neopoligengine`syntect::html::line_tokens_to_classed_spans::_{{closure}} (4 samples, 0.04%)</title><rect x="70.3047%" y="501" width="0.0372%" height="15" fill="rgb(230,47,54)" fg:x="7569" fg:w="4"/><text x="70.5547%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="70.7412%" y="501" width="0.0279%" height="15" fill="rgb(214,50,8)" fg:x="7616" fg:w="3"/><text x="70.9912%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.04%)</title><rect x="70.7877%" y="485" width="0.0372%" height="15" fill="rgb(216,198,43)" fg:x="7621" fg:w="4"/><text x="71.0377%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.05%)</title><rect x="70.8248%" y="485" width="0.0464%" height="15" fill="rgb(234,20,35)" fg:x="7625" fg:w="5"/><text x="71.0748%" y="495.50"></text></g><g><title>neopoligengine`&lt;onig::match_param::MatchParam as core::default::Default&gt;::default (11 samples, 0.10%)</title><rect x="70.7877%" y="501" width="0.1022%" height="15" fill="rgb(254,45,19)" fg:x="7621" fg:w="11"/><text x="71.0377%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="70.8991%" y="485" width="0.0186%" height="15" fill="rgb(219,14,44)" fg:x="7633" fg:w="2"/><text x="71.1491%" y="495.50"></text></g><g><title>neopoligengine`&lt;onig::region::Region as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="70.8898%" y="501" width="0.0372%" height="15" fill="rgb(217,220,26)" fg:x="7632" fg:w="4"/><text x="71.1398%" y="511.50"></text></g><g><title>neopoligengine`__rdl_realloc (2 samples, 0.02%)</title><rect x="71.1035%" y="469" width="0.0186%" height="15" fill="rgb(213,158,28)" fg:x="7655" fg:w="2"/><text x="71.3535%" y="479.50"></text></g><g><title>neopoligengine`&lt;syntect::parsing::syntax_definition::MatchIter as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.23%)</title><rect x="70.9270%" y="501" width="0.2322%" height="15" fill="rgb(252,51,52)" fg:x="7636" fg:w="25"/><text x="71.1770%" y="511.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.07%)</title><rect x="71.0942%" y="485" width="0.0650%" height="15" fill="rgb(246,89,16)" fg:x="7654" fg:w="7"/><text x="71.3442%" y="495.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="71.1221%" y="469" width="0.0372%" height="15" fill="rgb(216,158,49)" fg:x="7657" fg:w="4"/><text x="71.3721%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.04%)</title><rect x="71.1221%" y="453" width="0.0372%" height="15" fill="rgb(236,107,19)" fg:x="7657" fg:w="4"/><text x="71.3721%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.03%)</title><rect x="71.1313%" y="437" width="0.0279%" height="15" fill="rgb(228,185,30)" fg:x="7658" fg:w="3"/><text x="71.3813%" y="447.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="71.1685%" y="501" width="0.0186%" height="15" fill="rgb(246,134,8)" fg:x="7662" fg:w="2"/><text x="71.4185%" y="511.50"></text></g><g><title>neopoligengine`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.07%)</title><rect x="71.1871%" y="501" width="0.0743%" height="15" fill="rgb(214,143,50)" fg:x="7664" fg:w="8"/><text x="71.4371%" y="511.50"></text></g><g><title>neopoligengine`hashbrown::raw::RawTableInner::with_capacity (2 samples, 0.02%)</title><rect x="71.2614%" y="501" width="0.0186%" height="15" fill="rgb(228,75,8)" fg:x="7672" fg:w="2"/><text x="71.5114%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="71.2614%" y="485" width="0.0186%" height="15" fill="rgb(207,175,4)" fg:x="7672" fg:w="2"/><text x="71.5114%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.04%)</title><rect x="71.3171%" y="421" width="0.0372%" height="15" fill="rgb(205,108,24)" fg:x="7678" fg:w="4"/><text x="71.5671%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="71.4564%" y="325" width="0.0186%" height="15" fill="rgb(244,120,49)" fg:x="7693" fg:w="2"/><text x="71.7064%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.04%)</title><rect x="71.4471%" y="341" width="0.0372%" height="15" fill="rgb(223,47,38)" fg:x="7692" fg:w="4"/><text x="71.6971%" y="351.50"></text></g><g><title>neopoligengine`add_op (7 samples, 0.07%)</title><rect x="71.4286%" y="373" width="0.0650%" height="15" fill="rgb(229,179,11)" fg:x="7690" fg:w="7"/><text x="71.6786%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.06%)</title><rect x="71.4379%" y="357" width="0.0557%" height="15" fill="rgb(231,122,1)" fg:x="7691" fg:w="6"/><text x="71.6879%" y="367.50"></text></g><g><title>neopoligengine`compile_length_tree (2 samples, 0.02%)</title><rect x="71.4936%" y="373" width="0.0186%" height="15" fill="rgb(245,119,9)" fg:x="7697" fg:w="2"/><text x="71.7436%" y="383.50"></text></g><g><title>neopoligengine`compile_length_tree (2 samples, 0.02%)</title><rect x="71.4936%" y="357" width="0.0186%" height="15" fill="rgb(241,163,25)" fg:x="7697" fg:w="2"/><text x="71.7436%" y="367.50"></text></g><g><title>neopoligengine`compile_length_tree (2 samples, 0.02%)</title><rect x="71.4936%" y="341" width="0.0186%" height="15" fill="rgb(217,214,3)" fg:x="7697" fg:w="2"/><text x="71.7436%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="71.5493%" y="341" width="0.0186%" height="15" fill="rgb(240,86,28)" fg:x="7703" fg:w="2"/><text x="71.7993%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="71.5493%" y="325" width="0.0186%" height="15" fill="rgb(215,47,9)" fg:x="7703" fg:w="2"/><text x="71.7993%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="71.5493%" y="309" width="0.0186%" height="15" fill="rgb(252,25,45)" fg:x="7703" fg:w="2"/><text x="71.7993%" y="319.50"></text></g><g><title>neopoligengine`add_op (3 samples, 0.03%)</title><rect x="71.5493%" y="357" width="0.0279%" height="15" fill="rgb(251,164,9)" fg:x="7703" fg:w="3"/><text x="71.7993%" y="367.50"></text></g><g><title>neopoligengine`compile_length_tree (8 samples, 0.07%)</title><rect x="71.5772%" y="357" width="0.0743%" height="15" fill="rgb(233,194,0)" fg:x="7706" fg:w="8"/><text x="71.8272%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="71.6701%" y="341" width="0.0186%" height="15" fill="rgb(249,111,24)" fg:x="7716" fg:w="2"/><text x="71.9201%" y="351.50"></text></g><g><title>neopoligengine`add_compile_string (2 samples, 0.02%)</title><rect x="71.6886%" y="341" width="0.0186%" height="15" fill="rgb(250,223,3)" fg:x="7718" fg:w="2"/><text x="71.9386%" y="351.50"></text></g><g><title>neopoligengine`add_op (2 samples, 0.02%)</title><rect x="71.6886%" y="325" width="0.0186%" height="15" fill="rgb(236,178,37)" fg:x="7718" fg:w="2"/><text x="71.9386%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="71.6886%" y="309" width="0.0186%" height="15" fill="rgb(241,158,50)" fg:x="7718" fg:w="2"/><text x="71.9386%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="71.6886%" y="293" width="0.0186%" height="15" fill="rgb(213,121,41)" fg:x="7718" fg:w="2"/><text x="71.9386%" y="303.50"></text></g><g><title>neopoligengine`compile_length_tree (4 samples, 0.04%)</title><rect x="71.7165%" y="341" width="0.0372%" height="15" fill="rgb(240,92,3)" fg:x="7721" fg:w="4"/><text x="71.9665%" y="351.50"></text></g><g><title>neopoligengine`compile_length_tree (2 samples, 0.02%)</title><rect x="71.7351%" y="325" width="0.0186%" height="15" fill="rgb(205,123,3)" fg:x="7723" fg:w="2"/><text x="71.9851%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="71.7537%" y="325" width="0.0279%" height="15" fill="rgb(205,97,47)" fg:x="7725" fg:w="3"/><text x="72.0037%" y="335.50"></text></g><g><title>neopoligengine`add_op (3 samples, 0.03%)</title><rect x="71.7908%" y="325" width="0.0279%" height="15" fill="rgb(247,152,14)" fg:x="7729" fg:w="3"/><text x="72.0408%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="71.8001%" y="309" width="0.0186%" height="15" fill="rgb(248,195,53)" fg:x="7730" fg:w="2"/><text x="72.0501%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.10%)</title><rect x="71.8466%" y="309" width="0.1022%" height="15" fill="rgb(226,201,16)" fg:x="7735" fg:w="11"/><text x="72.0966%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="71.9673%" y="293" width="0.0186%" height="15" fill="rgb(205,98,0)" fg:x="7748" fg:w="2"/><text x="72.2173%" y="303.50"></text></g><g><title>neopoligengine`compile_tree (27 samples, 0.25%)</title><rect x="71.7537%" y="341" width="0.2508%" height="15" fill="rgb(214,191,48)" fg:x="7725" fg:w="27"/><text x="72.0037%" y="351.50"></text></g><g><title>neopoligengine`compile_tree (19 samples, 0.18%)</title><rect x="71.8280%" y="325" width="0.1765%" height="15" fill="rgb(237,112,39)" fg:x="7733" fg:w="19"/><text x="72.0780%" y="335.50"></text></g><g><title>neopoligengine`compile_tree (5 samples, 0.05%)</title><rect x="71.9580%" y="309" width="0.0464%" height="15" fill="rgb(247,203,27)" fg:x="7747" fg:w="5"/><text x="72.2080%" y="319.50"></text></g><g><title>neopoligengine`compile_tree (66 samples, 0.61%)</title><rect x="71.4007%" y="405" width="0.6130%" height="15" fill="rgb(235,124,28)" fg:x="7687" fg:w="66"/><text x="71.6507%" y="415.50"></text></g><g><title>neopoligengine`compile_tree (64 samples, 0.59%)</title><rect x="71.4193%" y="389" width="0.5945%" height="15" fill="rgb(208,207,46)" fg:x="7689" fg:w="64"/><text x="71.6693%" y="399.50"></text></g><g><title>neopoligengine`compile_tree (54 samples, 0.50%)</title><rect x="71.5122%" y="373" width="0.5016%" height="15" fill="rgb(234,176,4)" fg:x="7699" fg:w="54"/><text x="71.7622%" y="383.50"></text></g><g><title>neopoligengine`compile_tree (39 samples, 0.36%)</title><rect x="71.6515%" y="357" width="0.3623%" height="15" fill="rgb(230,133,28)" fg:x="7714" fg:w="39"/><text x="71.9015%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (4 samples, 0.04%)</title><rect x="72.0230%" y="389" width="0.0372%" height="15" fill="rgb(211,137,40)" fg:x="7754" fg:w="4"/><text x="72.2730%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="72.1159%" y="341" width="0.0279%" height="15" fill="rgb(254,35,13)" fg:x="7764" fg:w="3"/><text x="72.3659%" y="351.50"></text></g><g><title>neopoligengine`onig_node_free (20 samples, 0.19%)</title><rect x="72.0230%" y="405" width="0.1858%" height="15" fill="rgb(225,49,51)" fg:x="7754" fg:w="20"/><text x="72.2730%" y="415.50"></text></g><g><title>neopoligengine`node_free_body (16 samples, 0.15%)</title><rect x="72.0602%" y="389" width="0.1486%" height="15" fill="rgb(251,10,15)" fg:x="7758" fg:w="16"/><text x="72.3102%" y="399.50"></text></g><g><title>neopoligengine`node_free_body (15 samples, 0.14%)</title><rect x="72.0695%" y="373" width="0.1393%" height="15" fill="rgb(228,207,15)" fg:x="7759" fg:w="15"/><text x="72.3195%" y="383.50"></text></g><g><title>neopoligengine`node_free_body (11 samples, 0.10%)</title><rect x="72.1066%" y="357" width="0.1022%" height="15" fill="rgb(241,99,19)" fg:x="7763" fg:w="11"/><text x="72.3566%" y="367.50"></text></g><g><title>neopoligengine`node_free_body (7 samples, 0.07%)</title><rect x="72.1438%" y="341" width="0.0650%" height="15" fill="rgb(207,104,49)" fg:x="7767" fg:w="7"/><text x="72.3938%" y="351.50"></text></g><g><title>neopoligengine`node_free_body (6 samples, 0.06%)</title><rect x="72.1531%" y="325" width="0.0557%" height="15" fill="rgb(234,99,18)" fg:x="7768" fg:w="6"/><text x="72.4031%" y="335.50"></text></g><g><title>neopoligengine`node_free_body (3 samples, 0.03%)</title><rect x="72.1809%" y="309" width="0.0279%" height="15" fill="rgb(213,191,49)" fg:x="7771" fg:w="3"/><text x="72.4309%" y="319.50"></text></g><g><title>neopoligengine`ops_make_string_pool (4 samples, 0.04%)</title><rect x="72.2088%" y="405" width="0.0372%" height="15" fill="rgb(210,226,19)" fg:x="7774" fg:w="4"/><text x="72.4588%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="72.2738%" y="357" width="0.0186%" height="15" fill="rgb(229,97,18)" fg:x="7781" fg:w="2"/><text x="72.5238%" y="367.50"></text></g><g><title>neopoligengine`ops_resize (6 samples, 0.06%)</title><rect x="72.2460%" y="405" width="0.0557%" height="15" fill="rgb(211,167,15)" fg:x="7778" fg:w="6"/><text x="72.4960%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.05%)</title><rect x="72.2552%" y="389" width="0.0464%" height="15" fill="rgb(210,169,34)" fg:x="7779" fg:w="5"/><text x="72.5052%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.04%)</title><rect x="72.2645%" y="373" width="0.0372%" height="15" fill="rgb(241,121,31)" fg:x="7780" fg:w="4"/><text x="72.5145%" y="383.50"></text></g><g><title>neopoligengine`concat_left_node_opt_info (2 samples, 0.02%)</title><rect x="72.3110%" y="389" width="0.0186%" height="15" fill="rgb(232,40,11)" fg:x="7785" fg:w="2"/><text x="72.5610%" y="399.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (16 samples, 0.15%)</title><rect x="72.3853%" y="357" width="0.1486%" height="15" fill="rgb(205,86,26)" fg:x="7793" fg:w="16"/><text x="72.6353%" y="367.50"></text></g><g><title>neopoligengine`concat_left_node_opt_info (2 samples, 0.02%)</title><rect x="72.5339%" y="357" width="0.0186%" height="15" fill="rgb(231,126,28)" fg:x="7809" fg:w="2"/><text x="72.7839%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="72.5896%" y="341" width="0.0186%" height="15" fill="rgb(219,221,18)" fg:x="7815" fg:w="2"/><text x="72.8396%" y="351.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (7 samples, 0.07%)</title><rect x="72.6082%" y="341" width="0.0650%" height="15" fill="rgb(211,40,0)" fg:x="7817" fg:w="7"/><text x="72.8582%" y="351.50"></text></g><g><title>neopoligengine`alt_merge_node_opt_info (3 samples, 0.03%)</title><rect x="72.7197%" y="277" width="0.0279%" height="15" fill="rgb(239,85,43)" fg:x="7829" fg:w="3"/><text x="72.9697%" y="287.50"></text></g><g><title>neopoligengine`optimize_nodes (50 samples, 0.46%)</title><rect x="72.3017%" y="405" width="0.4644%" height="15" fill="rgb(231,55,21)" fg:x="7784" fg:w="50"/><text x="72.5517%" y="415.50"></text></g><g><title>neopoligengine`optimize_nodes (47 samples, 0.44%)</title><rect x="72.3296%" y="389" width="0.4366%" height="15" fill="rgb(225,184,43)" fg:x="7787" fg:w="47"/><text x="72.5796%" y="399.50"></text></g><g><title>neopoligengine`optimize_nodes (45 samples, 0.42%)</title><rect x="72.3481%" y="373" width="0.4180%" height="15" fill="rgb(251,158,41)" fg:x="7789" fg:w="45"/><text x="72.5981%" y="383.50"></text></g><g><title>neopoligengine`optimize_nodes (23 samples, 0.21%)</title><rect x="72.5525%" y="357" width="0.2136%" height="15" fill="rgb(234,159,37)" fg:x="7811" fg:w="23"/><text x="72.8025%" y="367.50"></text></g><g><title>neopoligengine`optimize_nodes (10 samples, 0.09%)</title><rect x="72.6732%" y="341" width="0.0929%" height="15" fill="rgb(216,204,22)" fg:x="7824" fg:w="10"/><text x="72.9232%" y="351.50"></text></g><g><title>neopoligengine`optimize_nodes (5 samples, 0.05%)</title><rect x="72.7197%" y="325" width="0.0464%" height="15" fill="rgb(214,17,3)" fg:x="7829" fg:w="5"/><text x="72.9697%" y="335.50"></text></g><g><title>neopoligengine`optimize_nodes (5 samples, 0.05%)</title><rect x="72.7197%" y="309" width="0.0464%" height="15" fill="rgb(212,111,17)" fg:x="7829" fg:w="5"/><text x="72.9697%" y="319.50"></text></g><g><title>neopoligengine`optimize_nodes (5 samples, 0.05%)</title><rect x="72.7197%" y="293" width="0.0464%" height="15" fill="rgb(221,157,24)" fg:x="7829" fg:w="5"/><text x="72.9697%" y="303.50"></text></g><g><title>neopoligengine`optimize_nodes (2 samples, 0.02%)</title><rect x="72.7475%" y="277" width="0.0186%" height="15" fill="rgb(252,16,13)" fg:x="7832" fg:w="2"/><text x="72.9975%" y="287.50"></text></g><g><title>neopoligengine`optimize_nodes (2 samples, 0.02%)</title><rect x="72.7475%" y="261" width="0.0186%" height="15" fill="rgb(221,62,2)" fg:x="7832" fg:w="2"/><text x="72.9975%" y="271.50"></text></g><g><title>neopoligengine`optimize_nodes (2 samples, 0.02%)</title><rect x="72.7475%" y="245" width="0.0186%" height="15" fill="rgb(247,87,22)" fg:x="7832" fg:w="2"/><text x="72.9975%" y="255.50"></text></g><g><title>neopoligengine`check_backrefs (2 samples, 0.02%)</title><rect x="72.7661%" y="389" width="0.0186%" height="15" fill="rgb(215,73,9)" fg:x="7834" fg:w="2"/><text x="73.0161%" y="399.50"></text></g><g><title>neopoligengine`check_backrefs (2 samples, 0.02%)</title><rect x="72.7661%" y="373" width="0.0186%" height="15" fill="rgb(207,175,33)" fg:x="7834" fg:w="2"/><text x="73.0161%" y="383.50"></text></g><g><title>neopoligengine`is_valid_mbc_string (4 samples, 0.04%)</title><rect x="72.7940%" y="389" width="0.0372%" height="15" fill="rgb(243,129,54)" fg:x="7837" fg:w="4"/><text x="73.0440%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.02%)</title><rect x="72.8497%" y="357" width="0.0186%" height="15" fill="rgb(227,119,45)" fg:x="7843" fg:w="2"/><text x="73.0997%" y="367.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (2 samples, 0.02%)</title><rect x="72.9147%" y="325" width="0.0186%" height="15" fill="rgb(205,109,36)" fg:x="7850" fg:w="2"/><text x="73.1647%" y="335.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (2 samples, 0.02%)</title><rect x="72.9147%" y="309" width="0.0186%" height="15" fill="rgb(205,6,39)" fg:x="7850" fg:w="2"/><text x="73.1647%" y="319.50"></text></g><g><title>neopoligengine`fetch_token (7 samples, 0.07%)</title><rect x="72.9333%" y="325" width="0.0650%" height="15" fill="rgb(221,32,16)" fg:x="7852" fg:w="7"/><text x="73.1833%" y="335.50"></text></g><g><title>neopoligengine`mbc_enc_len (2 samples, 0.02%)</title><rect x="72.9983%" y="325" width="0.0186%" height="15" fill="rgb(228,144,50)" fg:x="7859" fg:w="2"/><text x="73.2483%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.02%)</title><rect x="73.0448%" y="309" width="0.0186%" height="15" fill="rgb(229,201,53)" fg:x="7864" fg:w="2"/><text x="73.2948%" y="319.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (3 samples, 0.03%)</title><rect x="73.0726%" y="277" width="0.0279%" height="15" fill="rgb(249,153,27)" fg:x="7867" fg:w="3"/><text x="73.3226%" y="287.50"></text></g><g><title>neopoligengine`fetch_token (2 samples, 0.02%)</title><rect x="73.1005%" y="277" width="0.0186%" height="15" fill="rgb(227,106,25)" fg:x="7870" fg:w="2"/><text x="73.3505%" y="287.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (4 samples, 0.04%)</title><rect x="73.1562%" y="229" width="0.0372%" height="15" fill="rgb(230,65,29)" fg:x="7876" fg:w="4"/><text x="73.4062%" y="239.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (3 samples, 0.03%)</title><rect x="73.1655%" y="213" width="0.0279%" height="15" fill="rgb(221,57,46)" fg:x="7877" fg:w="3"/><text x="73.4155%" y="223.50"></text></g><g><title>neopoligengine`fetch_token (3 samples, 0.03%)</title><rect x="73.1934%" y="229" width="0.0279%" height="15" fill="rgb(229,161,17)" fg:x="7880" fg:w="3"/><text x="73.4434%" y="239.50"></text></g><g><title>neopoligengine`prs_alts (2 samples, 0.02%)</title><rect x="73.2491%" y="181" width="0.0186%" height="15" fill="rgb(222,213,11)" fg:x="7886" fg:w="2"/><text x="73.4991%" y="191.50"></text></g><g><title>neopoligengine`prs_branch (2 samples, 0.02%)</title><rect x="73.2491%" y="165" width="0.0186%" height="15" fill="rgb(235,35,13)" fg:x="7886" fg:w="2"/><text x="73.4991%" y="175.50"></text></g><g><title>neopoligengine`prs_exp (2 samples, 0.02%)</title><rect x="73.2491%" y="149" width="0.0186%" height="15" fill="rgb(233,158,34)" fg:x="7886" fg:w="2"/><text x="73.4991%" y="159.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (9 samples, 0.08%)</title><rect x="73.2770%" y="165" width="0.0836%" height="15" fill="rgb(215,151,48)" fg:x="7889" fg:w="9"/><text x="73.5270%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.89%)</title><rect x="73.5185%" y="149" width="0.8917%" height="15" fill="rgb(229,84,14)" fg:x="7915" fg:w="96"/><text x="73.7685%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="78.9615%" y="85" width="0.0186%" height="15" fill="rgb(229,68,14)" fg:x="8501" fg:w="2"/><text x="79.2115%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="78.9615%" y="101" width="0.0279%" height="15" fill="rgb(243,106,26)" fg:x="8501" fg:w="3"/><text x="79.2115%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.05%)</title><rect x="78.9894%" y="101" width="0.0464%" height="15" fill="rgb(206,45,38)" fg:x="8504" fg:w="5"/><text x="79.2394%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="79.0173%" y="85" width="0.0186%" height="15" fill="rgb(226,6,15)" fg:x="8507" fg:w="2"/><text x="79.2673%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="79.0173%" y="69" width="0.0186%" height="15" fill="rgb(232,22,54)" fg:x="8507" fg:w="2"/><text x="79.2673%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.02%)</title><rect x="79.0173%" y="53" width="0.0186%" height="15" fill="rgb(229,222,32)" fg:x="8507" fg:w="2"/><text x="79.2673%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.10%)</title><rect x="78.9430%" y="117" width="0.1022%" height="15" fill="rgb(228,62,29)" fg:x="8499" fg:w="11"/><text x="79.1930%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.11%)</title><rect x="78.9430%" y="133" width="0.1115%" height="15" fill="rgb(251,103,34)" fg:x="8499" fg:w="12"/><text x="79.1930%" y="143.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (614 samples, 5.70%)</title><rect x="73.3606%" y="165" width="5.7031%" height="15" fill="rgb(233,12,30)" fg:x="7898" fg:w="614"/><text x="73.6106%" y="175.50">neopoli..</text></g><g><title>neopoligengine`add_code_range_to_buf (499 samples, 4.63%)</title><rect x="74.4288%" y="149" width="4.6350%" height="15" fill="rgb(238,52,0)" fg:x="8013" fg:w="499"/><text x="74.6788%" y="159.50">neopo..</text></g><g><title>neopoligengine`prs_alts (630 samples, 5.85%)</title><rect x="73.2213%" y="229" width="5.8518%" height="15" fill="rgb(223,98,5)" fg:x="7883" fg:w="630"/><text x="73.4713%" y="239.50">neopoli..</text></g><g><title>neopoligengine`prs_branch (630 samples, 5.85%)</title><rect x="73.2213%" y="213" width="5.8518%" height="15" fill="rgb(228,75,37)" fg:x="7883" fg:w="630"/><text x="73.4713%" y="223.50">neopoli..</text></g><g><title>neopoligengine`prs_exp (630 samples, 5.85%)</title><rect x="73.2213%" y="197" width="5.8518%" height="15" fill="rgb(205,115,49)" fg:x="7883" fg:w="630"/><text x="73.4713%" y="207.50">neopoli..</text></g><g><title>neopoligengine`prs_cc (625 samples, 5.81%)</title><rect x="73.2677%" y="181" width="5.8053%" height="15" fill="rgb(250,154,43)" fg:x="7888" fg:w="625"/><text x="73.5177%" y="191.50">neopoli..</text></g><g><title>neopoligengine`add_code_range_to_buf (4 samples, 0.04%)</title><rect x="79.0730%" y="213" width="0.0372%" height="15" fill="rgb(226,43,29)" fg:x="8513" fg:w="4"/><text x="79.3230%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="79.1659%" y="197" width="0.0186%" height="15" fill="rgb(249,228,39)" fg:x="8523" fg:w="2"/><text x="79.4159%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.52%)</title><rect x="79.1845%" y="197" width="0.5202%" height="15" fill="rgb(216,79,43)" fg:x="8525" fg:w="56"/><text x="79.4345%" y="207.50"></text></g><g><title>neopoligengine`DYLD-STUB$$memmove (4 samples, 0.04%)</title><rect x="79.7046%" y="197" width="0.0372%" height="15" fill="rgb(228,95,12)" fg:x="8581" fg:w="4"/><text x="79.9546%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.02%)</title><rect x="81.9524%" y="117" width="0.0186%" height="15" fill="rgb(249,221,15)" fg:x="8823" fg:w="2"/><text x="82.2024%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.08%)</title><rect x="81.8967%" y="149" width="0.0836%" height="15" fill="rgb(233,34,13)" fg:x="8817" fg:w="9"/><text x="82.1467%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="81.9524%" y="133" width="0.0279%" height="15" fill="rgb(214,103,39)" fg:x="8823" fg:w="3"/><text x="82.2024%" y="143.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (310 samples, 2.88%)</title><rect x="79.1102%" y="213" width="2.8794%" height="15" fill="rgb(251,126,39)" fg:x="8517" fg:w="310"/><text x="79.3602%" y="223.50">ne..</text></g><g><title>neopoligengine`add_code_range_to_buf (241 samples, 2.24%)</title><rect x="79.7511%" y="197" width="2.2385%" height="15" fill="rgb(214,216,36)" fg:x="8586" fg:w="241"/><text x="80.0011%" y="207.50">n..</text></g><g><title>libsystem_malloc.dylib`_realloc (13 samples, 0.12%)</title><rect x="81.8688%" y="181" width="0.1208%" height="15" fill="rgb(220,221,8)" fg:x="8814" fg:w="13"/><text x="82.1188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (12 samples, 0.11%)</title><rect x="81.8781%" y="165" width="0.1115%" height="15" fill="rgb(240,216,3)" fg:x="8815" fg:w="12"/><text x="82.1281%" y="175.50"></text></g><g><title>neopoligengine`prs_branch (954 samples, 8.86%)</title><rect x="73.1562%" y="261" width="8.8612%" height="15" fill="rgb(232,218,17)" fg:x="7876" fg:w="954"/><text x="73.4062%" y="271.50">neopoligengin..</text></g><g><title>neopoligengine`prs_exp (954 samples, 8.86%)</title><rect x="73.1562%" y="245" width="8.8612%" height="15" fill="rgb(229,163,45)" fg:x="7876" fg:w="954"/><text x="73.4062%" y="255.50">neopoligengin..</text></g><g><title>neopoligengine`prs_cc (317 samples, 2.94%)</title><rect x="79.0730%" y="229" width="2.9445%" height="15" fill="rgb(231,110,42)" fg:x="8513" fg:w="317"/><text x="79.3230%" y="239.50">ne..</text></g><g><title>neopoligengine`prs_alts (957 samples, 8.89%)</title><rect x="73.1377%" y="277" width="8.8891%" height="15" fill="rgb(208,170,48)" fg:x="7874" fg:w="957"/><text x="73.3877%" y="287.50">neopoligengin..</text></g><g><title>neopoligengine`add_code_range_to_buf (4 samples, 0.04%)</title><rect x="82.0268%" y="261" width="0.0372%" height="15" fill="rgb(239,116,25)" fg:x="8831" fg:w="4"/><text x="82.2768%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.12%)</title><rect x="82.0918%" y="245" width="0.1208%" height="15" fill="rgb(219,200,50)" fg:x="8838" fg:w="13"/><text x="82.3418%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (4 samples, 0.04%)</title><rect x="83.4293%" y="213" width="0.0372%" height="15" fill="rgb(245,200,0)" fg:x="8982" fg:w="4"/><text x="83.6793%" y="223.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (152 samples, 1.41%)</title><rect x="82.0639%" y="261" width="1.4119%" height="15" fill="rgb(245,119,33)" fg:x="8835" fg:w="152"/><text x="82.3139%" y="271.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (136 samples, 1.26%)</title><rect x="82.2125%" y="245" width="1.2632%" height="15" fill="rgb(231,125,12)" fg:x="8851" fg:w="136"/><text x="82.4625%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.05%)</title><rect x="83.4293%" y="229" width="0.0464%" height="15" fill="rgb(216,96,41)" fg:x="8982" fg:w="5"/><text x="83.6793%" y="239.50"></text></g><g><title>neopoligengine`prs_alts (1,126 samples, 10.46%)</title><rect x="73.0262%" y="325" width="10.4589%" height="15" fill="rgb(248,43,45)" fg:x="7862" fg:w="1126"/><text x="73.2762%" y="335.50">neopoligengine`..</text></g><g><title>neopoligengine`prs_branch (1,122 samples, 10.42%)</title><rect x="73.0633%" y="309" width="10.4217%" height="15" fill="rgb(217,222,7)" fg:x="7866" fg:w="1122"/><text x="73.3133%" y="319.50">neopoligengine`..</text></g><g><title>neopoligengine`prs_exp (1,121 samples, 10.41%)</title><rect x="73.0726%" y="293" width="10.4124%" height="15" fill="rgb(233,28,6)" fg:x="7867" fg:w="1121"/><text x="73.3226%" y="303.50">neopoligengine`..</text></g><g><title>neopoligengine`prs_cc (157 samples, 1.46%)</title><rect x="82.0268%" y="277" width="1.4583%" height="15" fill="rgb(231,218,15)" fg:x="8831" fg:w="157"/><text x="82.2768%" y="287.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (2 samples, 0.02%)</title><rect x="83.4943%" y="309" width="0.0186%" height="15" fill="rgb(226,171,48)" fg:x="8989" fg:w="2"/><text x="83.7443%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="83.5315%" y="293" width="0.0372%" height="15" fill="rgb(235,201,9)" fg:x="8993" fg:w="4"/><text x="83.7815%" y="303.50"></text></g><g><title>neopoligengine`add_ctype_to_cc (82 samples, 0.76%)</title><rect x="83.5129%" y="309" width="0.7617%" height="15" fill="rgb(217,80,15)" fg:x="8991" fg:w="82"/><text x="83.7629%" y="319.50"></text></g><g><title>neopoligengine`add_code_range_to_buf (76 samples, 0.71%)</title><rect x="83.5686%" y="293" width="0.7059%" height="15" fill="rgb(219,152,8)" fg:x="8997" fg:w="76"/><text x="83.8186%" y="303.50"></text></g><g><title>neopoligengine`prs_branch (1,229 samples, 11.42%)</title><rect x="72.8683%" y="357" width="11.4156%" height="15" fill="rgb(243,107,38)" fg:x="7845" fg:w="1229"/><text x="73.1183%" y="367.50">neopoligengine`pr..</text></g><g><title>neopoligengine`prs_exp (1,227 samples, 11.40%)</title><rect x="72.8869%" y="341" width="11.3970%" height="15" fill="rgb(231,17,5)" fg:x="7847" fg:w="1227"/><text x="73.1369%" y="351.50">neopoligengine`pr..</text></g><g><title>neopoligengine`prs_cc (85 samples, 0.79%)</title><rect x="83.4943%" y="325" width="0.7895%" height="15" fill="rgb(209,25,54)" fg:x="8989" fg:w="85"/><text x="83.7443%" y="335.50"></text></g><g><title>neopoligengine`onig_parse_tree (1,234 samples, 11.46%)</title><rect x="72.8311%" y="389" width="11.4620%" height="15" fill="rgb(219,0,2)" fg:x="7841" fg:w="1234"/><text x="73.0811%" y="399.50">neopoligengine`on..</text></g><g><title>neopoligengine`prs_alts (1,233 samples, 11.45%)</title><rect x="72.8404%" y="373" width="11.4527%" height="15" fill="rgb(246,9,5)" fg:x="7842" fg:w="1233"/><text x="73.0904%" y="383.50">neopoligengine`pr..</text></g><g><title>neopoligengine`reduce_string_list (11 samples, 0.10%)</title><rect x="84.2931%" y="389" width="0.1022%" height="15" fill="rgb(226,159,4)" fg:x="9075" fg:w="11"/><text x="84.5431%" y="399.50"></text></g><g><title>neopoligengine`reduce_string_list (10 samples, 0.09%)</title><rect x="84.3024%" y="373" width="0.0929%" height="15" fill="rgb(219,175,34)" fg:x="9076" fg:w="10"/><text x="84.5524%" y="383.50"></text></g><g><title>neopoligengine`reduce_string_list (8 samples, 0.07%)</title><rect x="84.3210%" y="357" width="0.0743%" height="15" fill="rgb(236,10,46)" fg:x="9078" fg:w="8"/><text x="84.5710%" y="367.50"></text></g><g><title>neopoligengine`reduce_string_list (6 samples, 0.06%)</title><rect x="84.3396%" y="341" width="0.0557%" height="15" fill="rgb(240,211,16)" fg:x="9080" fg:w="6"/><text x="84.5896%" y="351.50"></text></g><g><title>neopoligengine`reduce_string_list (2 samples, 0.02%)</title><rect x="84.3767%" y="325" width="0.0186%" height="15" fill="rgb(205,3,43)" fg:x="9084" fg:w="2"/><text x="84.6267%" y="335.50"></text></g><g><title>neopoligengine`onig_compile (1,414 samples, 13.13%)</title><rect x="71.3636%" y="421" width="13.1339%" height="15" fill="rgb(245,7,22)" fg:x="7683" fg:w="1414"/><text x="71.6136%" y="431.50">neopoligengine`onig_..</text></g><g><title>neopoligengine`parse_and_tune (1,263 samples, 11.73%)</title><rect x="72.7661%" y="405" width="11.7314%" height="15" fill="rgb(239,132,32)" fg:x="7834" fg:w="1263"/><text x="73.0161%" y="415.50">neopoligengine`pa..</text></g><g><title>neopoligengine`tune_tree (11 samples, 0.10%)</title><rect x="84.3953%" y="389" width="0.1022%" height="15" fill="rgb(228,202,34)" fg:x="9086" fg:w="11"/><text x="84.6453%" y="399.50"></text></g><g><title>neopoligengine`tune_tree (8 samples, 0.07%)</title><rect x="84.4232%" y="373" width="0.0743%" height="15" fill="rgb(254,200,22)" fg:x="9089" fg:w="8"/><text x="84.6732%" y="383.50"></text></g><g><title>neopoligengine`tune_tree (2 samples, 0.02%)</title><rect x="84.4789%" y="357" width="0.0186%" height="15" fill="rgb(219,10,39)" fg:x="9095" fg:w="2"/><text x="84.7289%" y="367.50"></text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize (1,424 samples, 13.23%)</title><rect x="71.2800%" y="501" width="13.2268%" height="15" fill="rgb(226,210,39)" fg:x="7674" fg:w="1424"/><text x="71.5300%" y="511.50">neopoligengine`once_..</text></g><g><title>neopoligengine`once_cell::imp::initialize_or_wait (1,424 samples, 13.23%)</title><rect x="71.2800%" y="485" width="13.2268%" height="15" fill="rgb(208,219,16)" fg:x="7674" fg:w="1424"/><text x="71.5300%" y="495.50">neopoligengine`once_..</text></g><g><title>neopoligengine`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1,423 samples, 13.22%)</title><rect x="71.2892%" y="469" width="13.2175%" height="15" fill="rgb(216,158,51)" fg:x="7675" fg:w="1423"/><text x="71.5392%" y="479.50">neopoligengine`once_..</text></g><g><title>neopoligengine`onig::Regex::with_options_and_encoding (1,423 samples, 13.22%)</title><rect x="71.2892%" y="453" width="13.2175%" height="15" fill="rgb(233,14,44)" fg:x="7675" fg:w="1423"/><text x="71.5392%" y="463.50">neopoligengine`onig:..</text></g><g><title>neopoligengine`onig_new (1,423 samples, 13.22%)</title><rect x="71.2892%" y="437" width="13.2175%" height="15" fill="rgb(237,97,39)" fg:x="7675" fg:w="1423"/><text x="71.5392%" y="447.50">neopoligengine`onig_..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.07%)</title><rect x="84.5532%" y="485" width="0.0650%" height="15" fill="rgb(218,198,43)" fg:x="9103" fg:w="7"/><text x="84.8032%" y="495.50"></text></g><g><title>neopoligengine`forward_search (4 samples, 0.04%)</title><rect x="84.6461%" y="469" width="0.0372%" height="15" fill="rgb(231,104,20)" fg:x="9113" fg:w="4"/><text x="84.8961%" y="479.50"></text></g><g><title>neopoligengine`mbc_enc_len (4 samples, 0.04%)</title><rect x="84.6926%" y="469" width="0.0372%" height="15" fill="rgb(254,36,13)" fg:x="9118" fg:w="4"/><text x="84.9426%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.15%)</title><rect x="84.8597%" y="453" width="0.1486%" height="15" fill="rgb(248,14,50)" fg:x="9136" fg:w="16"/><text x="85.1097%" y="463.50"></text></g><g><title>neopoligengine`forward_search (87 samples, 0.81%)</title><rect x="85.0176%" y="453" width="0.8081%" height="15" fill="rgb(217,107,29)" fg:x="9153" fg:w="87"/><text x="85.2676%" y="463.50"></text></g><g><title>neopoligengine`left_adjust_char_head (3 samples, 0.03%)</title><rect x="85.8257%" y="453" width="0.0279%" height="15" fill="rgb(251,169,33)" fg:x="9240" fg:w="3"/><text x="86.0757%" y="463.50"></text></g><g><title>neopoligengine`match_at (73 samples, 0.68%)</title><rect x="85.8536%" y="453" width="0.6781%" height="15" fill="rgb(217,108,32)" fg:x="9243" fg:w="73"/><text x="86.1036%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="86.5131%" y="437" width="0.0186%" height="15" fill="rgb(219,66,42)" fg:x="9314" fg:w="2"/><text x="86.7631%" y="447.50"></text></g><g><title>neopoligengine`mbc_enc_len (14 samples, 0.13%)</title><rect x="86.5317%" y="453" width="0.1300%" height="15" fill="rgb(206,180,7)" fg:x="9316" fg:w="14"/><text x="86.7817%" y="463.50"></text></g><g><title>neopoligengine`mbc_to_code (6 samples, 0.06%)</title><rect x="86.6617%" y="453" width="0.0557%" height="15" fill="rgb(208,226,31)" fg:x="9330" fg:w="6"/><text x="86.9117%" y="463.50"></text></g><g><title>neopoligengine`onig_region_resize_clear (11 samples, 0.10%)</title><rect x="86.7174%" y="453" width="0.1022%" height="15" fill="rgb(218,26,49)" fg:x="9336" fg:w="11"/><text x="86.9674%" y="463.50"></text></g><g><title>neopoligengine`onig_search_with_param (246 samples, 2.28%)</title><rect x="84.6275%" y="485" width="2.2850%" height="15" fill="rgb(233,197,48)" fg:x="9111" fg:w="246"/><text x="84.8775%" y="495.50">n..</text></g><g><title>neopoligengine`search_in_range (235 samples, 2.18%)</title><rect x="84.7297%" y="469" width="2.1828%" height="15" fill="rgb(252,181,51)" fg:x="9122" fg:w="235"/><text x="84.9797%" y="479.50">n..</text></g><g><title>neopoligengine`onigenc_unicode_is_code_ctype (9 samples, 0.08%)</title><rect x="86.8289%" y="453" width="0.0836%" height="15" fill="rgb(253,90,19)" fg:x="9348" fg:w="9"/><text x="87.0789%" y="463.50"></text></g><g><title>neopoligengine`onig::Regex::search_with_param (261 samples, 2.42%)</title><rect x="84.5068%" y="501" width="2.4243%" height="15" fill="rgb(215,171,30)" fg:x="9098" fg:w="261"/><text x="84.7568%" y="511.50">ne..</text></g><g><title>neopoligengine`search_in_range (2 samples, 0.02%)</title><rect x="86.9125%" y="485" width="0.0186%" height="15" fill="rgb(214,222,9)" fg:x="9357" fg:w="2"/><text x="87.1625%" y="495.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::highlight_code (2,999 samples, 27.86%)</title><rect x="59.1306%" y="549" width="27.8562%" height="15" fill="rgb(223,3,22)" fg:x="6366" fg:w="2999"/><text x="59.3806%" y="559.50">neopoligengine`neopoligengine::site::Site::hi..</text></g><g><title>neopoligengine`syntect::html::ClassedHTMLGenerator::parse_html_for_line_which_includes_newline (1,808 samples, 16.79%)</title><rect x="70.1932%" y="533" width="16.7936%" height="15" fill="rgb(225,196,46)" fg:x="7557" fg:w="1808"/><text x="70.4432%" y="543.50">neopoligengine`syntect::ht..</text></g><g><title>neopoligengine`syntect::parsing::parser::ParseState::parse_line (1,792 samples, 16.64%)</title><rect x="70.3418%" y="517" width="16.6450%" height="15" fill="rgb(209,110,37)" fg:x="7573" fg:w="1792"/><text x="70.5918%" y="527.50">neopoligengine`syntect::pa..</text></g><g><title>neopoligengine`onig_region_free (6 samples, 0.06%)</title><rect x="86.9311%" y="501" width="0.0557%" height="15" fill="rgb(249,89,12)" fg:x="9359" fg:w="6"/><text x="87.1811%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.05%)</title><rect x="86.9404%" y="485" width="0.0464%" height="15" fill="rgb(226,27,33)" fg:x="9360" fg:w="5"/><text x="87.1904%" y="495.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (8,465 samples, 78.63%)</title><rect x="8.3782%" y="581" width="78.6272%" height="15" fill="rgb(213,82,22)" fg:x="902" fg:w="8465"/><text x="8.6282%" y="591.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (3,002 samples, 27.88%)</title><rect x="59.1213%" y="565" width="27.8841%" height="15" fill="rgb(248,140,0)" fg:x="6365" fg:w="3002"/><text x="59.3713%" y="575.50">neopoligengine`neopoligengine::site::object::..</text></g><g><title>neopoligengine`syntect::parsing::syntax_set::SyntaxSet::find_syntax_by_token (2 samples, 0.02%)</title><rect x="86.9868%" y="549" width="0.0186%" height="15" fill="rgb(228,106,3)" fg:x="9365" fg:w="2"/><text x="87.2368%" y="559.50"></text></g><g><title>neopoligengine`minijinja::vm::state::State::get_template (2 samples, 0.02%)</title><rect x="87.0147%" y="581" width="0.0186%" height="15" fill="rgb(209,23,37)" fg:x="9368" fg:w="2"/><text x="87.2647%" y="591.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (8,962 samples, 83.24%)</title><rect x="3.8269%" y="629" width="83.2435%" height="15" fill="rgb(241,93,50)" fg:x="412" fg:w="8962"/><text x="4.0769%" y="639.50">neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (8,955 samples, 83.18%)</title><rect x="3.8919%" y="613" width="83.1785%" height="15" fill="rgb(253,46,43)" fg:x="419" fg:w="8955"/><text x="4.1419%" y="623.50">neopoligengine`minijinja::vm::Vm::eval_macro</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (8,509 samples, 79.04%)</title><rect x="8.0346%" y="597" width="79.0359%" height="15" fill="rgb(226,206,43)" fg:x="865" fg:w="8509"/><text x="8.2846%" y="607.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (4 samples, 0.04%)</title><rect x="87.0333%" y="581" width="0.0372%" height="15" fill="rgb(217,54,7)" fg:x="9370" fg:w="4"/><text x="87.2833%" y="591.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::does_template_exist (2 samples, 0.02%)</title><rect x="87.0518%" y="565" width="0.0186%" height="15" fill="rgb(223,5,52)" fg:x="9372" fg:w="2"/><text x="87.3018%" y="575.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="87.0518%" y="549" width="0.0186%" height="15" fill="rgb(206,52,46)" fg:x="9372" fg:w="2"/><text x="87.3018%" y="559.50"></text></g><g><title>neopoligengine`core::fmt::write (2 samples, 0.02%)</title><rect x="87.0518%" y="533" width="0.0186%" height="15" fill="rgb(253,136,11)" fg:x="9372" fg:w="2"/><text x="87.3018%" y="543.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="87.0704%" y="629" width="0.0186%" height="15" fill="rgb(208,106,33)" fg:x="9374" fg:w="2"/><text x="87.3204%" y="639.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="87.0704%" y="613" width="0.0186%" height="15" fill="rgb(206,54,4)" fg:x="9374" fg:w="2"/><text x="87.3204%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="87.0704%" y="597" width="0.0186%" height="15" fill="rgb(213,3,15)" fg:x="9374" fg:w="2"/><text x="87.3204%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="87.0704%" y="581" width="0.0186%" height="15" fill="rgb(252,211,39)" fg:x="9374" fg:w="2"/><text x="87.3204%" y="591.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (8,984 samples, 83.45%)</title><rect x="3.6690%" y="677" width="83.4479%" height="15" fill="rgb(223,6,36)" fg:x="395" fg:w="8984"/><text x="3.9190%" y="687.50">neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (8,984 samples, 83.45%)</title><rect x="3.6690%" y="661" width="83.4479%" height="15" fill="rgb(252,169,45)" fg:x="395" fg:w="8984"/><text x="3.9190%" y="671.50">neopoligengine`minijinja::vm::Vm::eval_macro</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (8,976 samples, 83.37%)</title><rect x="3.7433%" y="645" width="83.3736%" height="15" fill="rgb(212,48,26)" fg:x="403" fg:w="8976"/><text x="3.9933%" y="655.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="87.1354%" y="613" width="0.0186%" height="15" fill="rgb(251,102,48)" fg:x="9381" fg:w="2"/><text x="87.3854%" y="623.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="87.1819%" y="597" width="0.0186%" height="15" fill="rgb(243,208,16)" fg:x="9386" fg:w="2"/><text x="87.4319%" y="607.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="87.2190%" y="533" width="0.0186%" height="15" fill="rgb(219,96,24)" fg:x="9390" fg:w="2"/><text x="87.4690%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="87.2190%" y="517" width="0.0186%" height="15" fill="rgb(219,33,29)" fg:x="9390" fg:w="2"/><text x="87.4690%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="87.2469%" y="485" width="0.0279%" height="15" fill="rgb(223,176,5)" fg:x="9393" fg:w="3"/><text x="87.4969%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.03%)</title><rect x="87.3026%" y="469" width="0.0279%" height="15" fill="rgb(228,140,14)" fg:x="9399" fg:w="3"/><text x="87.5526%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_free (6 samples, 0.06%)</title><rect x="87.3305%" y="453" width="0.0557%" height="15" fill="rgb(217,179,31)" fg:x="9402" fg:w="6"/><text x="87.5805%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_free (4 samples, 0.04%)</title><rect x="87.3955%" y="437" width="0.0372%" height="15" fill="rgb(230,9,30)" fg:x="9409" fg:w="4"/><text x="87.6455%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="87.4327%" y="437" width="0.0372%" height="15" fill="rgb(230,136,20)" fg:x="9413" fg:w="4"/><text x="87.6827%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.02%)</title><rect x="87.4698%" y="437" width="0.0186%" height="15" fill="rgb(215,210,22)" fg:x="9417" fg:w="2"/><text x="87.7198%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.02%)</title><rect x="87.4698%" y="421" width="0.0186%" height="15" fill="rgb(218,43,5)" fg:x="9417" fg:w="2"/><text x="87.7198%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="87.4698%" y="405" width="0.0186%" height="15" fill="rgb(216,11,5)" fg:x="9417" fg:w="2"/><text x="87.7198%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="87.4884%" y="437" width="0.0186%" height="15" fill="rgb(209,82,29)" fg:x="9419" fg:w="2"/><text x="87.7384%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.05%)</title><rect x="87.5999%" y="389" width="0.0464%" height="15" fill="rgb(244,115,12)" fg:x="9431" fg:w="5"/><text x="87.8499%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.12%)</title><rect x="87.5441%" y="421" width="0.1208%" height="15" fill="rgb(222,82,18)" fg:x="9425" fg:w="13"/><text x="87.7941%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.12%)</title><rect x="87.5441%" y="405" width="0.1208%" height="15" fill="rgb(249,227,8)" fg:x="9425" fg:w="13"/><text x="87.7941%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (2 samples, 0.02%)</title><rect x="87.6463%" y="389" width="0.0186%" height="15" fill="rgb(253,141,45)" fg:x="9436" fg:w="2"/><text x="87.8963%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="87.6463%" y="373" width="0.0186%" height="15" fill="rgb(234,184,4)" fg:x="9436" fg:w="2"/><text x="87.8963%" y="383.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.18%)</title><rect x="87.5163%" y="437" width="0.1765%" height="15" fill="rgb(218,194,23)" fg:x="9422" fg:w="19"/><text x="87.7663%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="87.6742%" y="421" width="0.0186%" height="15" fill="rgb(235,66,41)" fg:x="9439" fg:w="2"/><text x="87.9242%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.05%)</title><rect x="87.7020%" y="421" width="0.0464%" height="15" fill="rgb(245,217,1)" fg:x="9442" fg:w="5"/><text x="87.9520%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.07%)</title><rect x="87.7763%" y="405" width="0.0743%" height="15" fill="rgb(229,91,1)" fg:x="9450" fg:w="8"/><text x="88.0263%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.03%)</title><rect x="87.8506%" y="405" width="0.0279%" height="15" fill="rgb(207,101,30)" fg:x="9458" fg:w="3"/><text x="88.1006%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (2 samples, 0.02%)</title><rect x="87.9157%" y="389" width="0.0186%" height="15" fill="rgb(223,82,49)" fg:x="9465" fg:w="2"/><text x="88.1657%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="87.9900%" y="357" width="0.0279%" height="15" fill="rgb(218,167,17)" fg:x="9473" fg:w="3"/><text x="88.2400%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.08%)</title><rect x="87.9435%" y="389" width="0.0836%" height="15" fill="rgb(208,103,14)" fg:x="9468" fg:w="9"/><text x="88.1935%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.08%)</title><rect x="87.9435%" y="373" width="0.0836%" height="15" fill="rgb(238,20,8)" fg:x="9468" fg:w="9"/><text x="88.1935%" y="383.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.19%)</title><rect x="87.8785%" y="405" width="0.1858%" height="15" fill="rgb(218,80,54)" fg:x="9461" fg:w="20"/><text x="88.1285%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.04%)</title><rect x="88.0271%" y="389" width="0.0372%" height="15" fill="rgb(240,144,17)" fg:x="9477" fg:w="4"/><text x="88.2771%" y="399.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="88.1014%" y="357" width="0.0186%" height="15" fill="rgb(245,27,50)" fg:x="9485" fg:w="2"/><text x="88.3514%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="88.1014%" y="341" width="0.0186%" height="15" fill="rgb(251,51,7)" fg:x="9485" fg:w="2"/><text x="88.3514%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="88.1014%" y="325" width="0.0186%" height="15" fill="rgb(245,217,29)" fg:x="9485" fg:w="2"/><text x="88.3514%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="88.1200%" y="325" width="0.0186%" height="15" fill="rgb(221,176,29)" fg:x="9487" fg:w="2"/><text x="88.3700%" y="335.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.07%)</title><rect x="88.0921%" y="373" width="0.0743%" height="15" fill="rgb(212,180,24)" fg:x="9484" fg:w="8"/><text x="88.3421%" y="383.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.05%)</title><rect x="88.1200%" y="357" width="0.0464%" height="15" fill="rgb(254,24,2)" fg:x="9487" fg:w="5"/><text x="88.3700%" y="367.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="88.1200%" y="341" width="0.0464%" height="15" fill="rgb(230,100,2)" fg:x="9487" fg:w="5"/><text x="88.3700%" y="351.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.02%)</title><rect x="88.1479%" y="325" width="0.0186%" height="15" fill="rgb(219,142,25)" fg:x="9490" fg:w="2"/><text x="88.3979%" y="335.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.42%)</title><rect x="87.7578%" y="421" width="0.4180%" height="15" fill="rgb(240,73,43)" fg:x="9448" fg:w="45"/><text x="88.0078%" y="431.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.11%)</title><rect x="88.0643%" y="405" width="0.1115%" height="15" fill="rgb(214,114,15)" fg:x="9481" fg:w="12"/><text x="88.3143%" y="415.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.08%)</title><rect x="88.0921%" y="389" width="0.0836%" height="15" fill="rgb(207,130,4)" fg:x="9484" fg:w="9"/><text x="88.3421%" y="399.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.81%)</title><rect x="87.3955%" y="453" width="0.8081%" height="15" fill="rgb(221,25,40)" fg:x="9409" fg:w="87"/><text x="87.6455%" y="463.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (55 samples, 0.51%)</title><rect x="87.6927%" y="437" width="0.5109%" height="15" fill="rgb(241,184,7)" fg:x="9441" fg:w="55"/><text x="87.9427%" y="447.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="88.1850%" y="421" width="0.0186%" height="15" fill="rgb(235,159,4)" fg:x="9494" fg:w="2"/><text x="88.4350%" y="431.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 1.04%)</title><rect x="87.2004%" y="581" width="1.0403%" height="15" fill="rgb(214,87,48)" fg:x="9388" fg:w="112"/><text x="87.4504%" y="591.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (112 samples, 1.04%)</title><rect x="87.2004%" y="565" width="1.0403%" height="15" fill="rgb(246,198,24)" fg:x="9388" fg:w="112"/><text x="87.4504%" y="575.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 1.04%)</title><rect x="87.2004%" y="549" width="1.0403%" height="15" fill="rgb(209,66,40)" fg:x="9388" fg:w="112"/><text x="87.4504%" y="559.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (108 samples, 1.00%)</title><rect x="87.2376%" y="533" width="1.0032%" height="15" fill="rgb(233,147,39)" fg:x="9392" fg:w="108"/><text x="87.4876%" y="543.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (107 samples, 0.99%)</title><rect x="87.2469%" y="517" width="0.9939%" height="15" fill="rgb(231,145,52)" fg:x="9393" fg:w="107"/><text x="87.4969%" y="527.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.99%)</title><rect x="87.2469%" y="501" width="0.9939%" height="15" fill="rgb(206,20,26)" fg:x="9393" fg:w="107"/><text x="87.4969%" y="511.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (104 samples, 0.97%)</title><rect x="87.2748%" y="485" width="0.9660%" height="15" fill="rgb(238,220,4)" fg:x="9396" fg:w="104"/><text x="87.5248%" y="495.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (98 samples, 0.91%)</title><rect x="87.3305%" y="469" width="0.9103%" height="15" fill="rgb(252,195,42)" fg:x="9402" fg:w="98"/><text x="87.5805%" y="479.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="88.2872%" y="405" width="0.0557%" height="15" fill="rgb(209,10,6)" fg:x="9505" fg:w="6"/><text x="88.5372%" y="415.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.05%)</title><rect x="88.2965%" y="389" width="0.0464%" height="15" fill="rgb(229,3,52)" fg:x="9506" fg:w="5"/><text x="88.5465%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.04%)</title><rect x="88.3058%" y="373" width="0.0372%" height="15" fill="rgb(253,49,37)" fg:x="9507" fg:w="4"/><text x="88.5558%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="88.3244%" y="357" width="0.0186%" height="15" fill="rgb(240,103,49)" fg:x="9509" fg:w="2"/><text x="88.5744%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="88.3244%" y="341" width="0.0186%" height="15" fill="rgb(250,182,30)" fg:x="9509" fg:w="2"/><text x="88.5744%" y="351.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.13%)</title><rect x="88.2408%" y="581" width="0.1300%" height="15" fill="rgb(248,8,30)" fg:x="9500" fg:w="14"/><text x="88.4908%" y="591.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.13%)</title><rect x="88.2408%" y="565" width="0.1300%" height="15" fill="rgb(237,120,30)" fg:x="9500" fg:w="14"/><text x="88.4908%" y="575.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.12%)</title><rect x="88.2500%" y="549" width="0.1208%" height="15" fill="rgb(221,146,34)" fg:x="9501" fg:w="13"/><text x="88.5000%" y="559.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.12%)</title><rect x="88.2500%" y="533" width="0.1208%" height="15" fill="rgb(242,55,13)" fg:x="9501" fg:w="13"/><text x="88.5000%" y="543.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.10%)</title><rect x="88.2686%" y="517" width="0.1022%" height="15" fill="rgb(242,112,31)" fg:x="9503" fg:w="11"/><text x="88.5186%" y="527.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.10%)</title><rect x="88.2686%" y="501" width="0.1022%" height="15" fill="rgb(249,192,27)" fg:x="9503" fg:w="11"/><text x="88.5186%" y="511.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.10%)</title><rect x="88.2686%" y="485" width="0.1022%" height="15" fill="rgb(208,204,44)" fg:x="9503" fg:w="11"/><text x="88.5186%" y="495.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (11 samples, 0.10%)</title><rect x="88.2686%" y="469" width="0.1022%" height="15" fill="rgb(208,93,54)" fg:x="9503" fg:w="11"/><text x="88.5186%" y="479.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.09%)</title><rect x="88.2779%" y="453" width="0.0929%" height="15" fill="rgb(242,1,31)" fg:x="9504" fg:w="10"/><text x="88.5279%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.09%)</title><rect x="88.2779%" y="437" width="0.0929%" height="15" fill="rgb(241,83,25)" fg:x="9504" fg:w="10"/><text x="88.5279%" y="447.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.08%)</title><rect x="88.2872%" y="421" width="0.0836%" height="15" fill="rgb(205,169,50)" fg:x="9505" fg:w="9"/><text x="88.5372%" y="431.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 1.23%)</title><rect x="87.1540%" y="613" width="1.2261%" height="15" fill="rgb(239,186,37)" fg:x="9383" fg:w="132"/><text x="87.4040%" y="623.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (127 samples, 1.18%)</title><rect x="87.2004%" y="597" width="1.1796%" height="15" fill="rgb(205,221,10)" fg:x="9388" fg:w="127"/><text x="87.4504%" y="607.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 samples, 1.25%)</title><rect x="87.1354%" y="677" width="1.2539%" height="15" fill="rgb(218,196,15)" fg:x="9381" fg:w="135"/><text x="87.3854%" y="687.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 samples, 1.25%)</title><rect x="87.1354%" y="661" width="1.2539%" height="15" fill="rgb(218,196,35)" fg:x="9381" fg:w="135"/><text x="87.3854%" y="671.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 1.25%)</title><rect x="87.1354%" y="645" width="1.2539%" height="15" fill="rgb(233,63,24)" fg:x="9381" fg:w="135"/><text x="87.3854%" y="655.50"></text></g><g><title>neopoligengine`alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 samples, 1.25%)</title><rect x="87.1354%" y="629" width="1.2539%" height="15" fill="rgb(225,8,4)" fg:x="9381" fg:w="135"/><text x="87.3854%" y="639.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;minijinja::value::Value&gt; (2 samples, 0.02%)</title><rect x="88.3987%" y="677" width="0.0186%" height="15" fill="rgb(234,105,35)" fg:x="9517" fg:w="2"/><text x="88.6487%" y="687.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="88.4172%" y="661" width="0.0186%" height="15" fill="rgb(236,21,32)" fg:x="9519" fg:w="2"/><text x="88.6672%" y="671.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="88.4172%" y="645" width="0.0186%" height="15" fill="rgb(228,109,6)" fg:x="9519" fg:w="2"/><text x="88.6672%" y="655.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="88.4172%" y="629" width="0.0186%" height="15" fill="rgb(229,215,31)" fg:x="9519" fg:w="2"/><text x="88.6672%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="88.4172%" y="613" width="0.0186%" height="15" fill="rgb(221,52,54)" fg:x="9519" fg:w="2"/><text x="88.6672%" y="623.50"></text></g><g><title>neopoligengine`minijinja::defaults::escape_formatter (3 samples, 0.03%)</title><rect x="88.4172%" y="677" width="0.0279%" height="15" fill="rgb(252,129,43)" fg:x="9519" fg:w="3"/><text x="88.6672%" y="687.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (2 samples, 0.02%)</title><rect x="88.4451%" y="677" width="0.0186%" height="15" fill="rgb(248,183,27)" fg:x="9522" fg:w="2"/><text x="88.6951%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="88.4451%" y="661" width="0.0186%" height="15" fill="rgb(250,0,22)" fg:x="9522" fg:w="2"/><text x="88.6951%" y="671.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (4 samples, 0.04%)</title><rect x="88.4637%" y="677" width="0.0372%" height="15" fill="rgb(213,166,10)" fg:x="9524" fg:w="4"/><text x="88.7137%" y="687.50"></text></g><g><title>neopoligengine`minijinja::value::Value::get_attr_fast (3 samples, 0.03%)</title><rect x="88.4730%" y="661" width="0.0279%" height="15" fill="rgb(207,163,36)" fg:x="9525" fg:w="3"/><text x="88.7230%" y="671.50"></text></g><g><title>neopoligengine`&lt;minijinja::vm::closure_object::Closure as minijinja::value::object::StructObject&gt;::get_field (3 samples, 0.03%)</title><rect x="88.4730%" y="645" width="0.0279%" height="15" fill="rgb(208,122,22)" fg:x="9525" fg:w="3"/><text x="88.7230%" y="655.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (2 samples, 0.02%)</title><rect x="88.5008%" y="677" width="0.0186%" height="15" fill="rgb(207,104,49)" fg:x="9528" fg:w="2"/><text x="88.7508%" y="687.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.02%)</title><rect x="88.5751%" y="629" width="0.0186%" height="15" fill="rgb(248,211,50)" fg:x="9536" fg:w="2"/><text x="88.8251%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.05%)</title><rect x="88.6959%" y="597" width="0.0464%" height="15" fill="rgb(217,13,45)" fg:x="9549" fg:w="5"/><text x="88.9459%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="88.7423%" y="597" width="0.0279%" height="15" fill="rgb(211,216,49)" fg:x="9554" fg:w="3"/><text x="88.9923%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.10%)</title><rect x="88.7702%" y="597" width="0.1022%" height="15" fill="rgb(221,58,53)" fg:x="9557" fg:w="11"/><text x="89.0202%" y="607.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="88.8817%" y="597" width="0.0557%" height="15" fill="rgb(220,112,41)" fg:x="9569" fg:w="6"/><text x="89.1317%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.03%)</title><rect x="88.9095%" y="581" width="0.0279%" height="15" fill="rgb(236,38,28)" fg:x="9572" fg:w="3"/><text x="89.1595%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="88.9188%" y="565" width="0.0186%" height="15" fill="rgb(227,195,22)" fg:x="9573" fg:w="2"/><text x="89.1688%" y="575.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.34%)</title><rect x="88.6030%" y="629" width="0.3437%" height="15" fill="rgb(214,55,33)" fg:x="9539" fg:w="37"/><text x="88.8530%" y="639.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.33%)</title><rect x="88.6216%" y="613" width="0.3251%" height="15" fill="rgb(248,80,13)" fg:x="9541" fg:w="35"/><text x="88.8716%" y="623.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.40%)</title><rect x="88.5566%" y="645" width="0.3994%" height="15" fill="rgb(238,52,6)" fg:x="9534" fg:w="43"/><text x="88.8066%" y="655.50"></text></g><g><title>neopoligengine`alloc::vec::in_place_collect::from_iter_in_place (6 samples, 0.06%)</title><rect x="88.9560%" y="645" width="0.0557%" height="15" fill="rgb(224,198,47)" fg:x="9577" fg:w="6"/><text x="89.2060%" y="655.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::child::Child&gt; (3 samples, 0.03%)</title><rect x="88.9838%" y="629" width="0.0279%" height="15" fill="rgb(233,171,20)" fg:x="9580" fg:w="3"/><text x="89.2338%" y="639.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::section_category::SectionCategory&gt; (3 samples, 0.03%)</title><rect x="88.9838%" y="613" width="0.0279%" height="15" fill="rgb(241,30,25)" fg:x="9580" fg:w="3"/><text x="89.2338%" y="623.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::child::Child&gt; (3 samples, 0.03%)</title><rect x="88.9838%" y="597" width="0.0279%" height="15" fill="rgb(207,171,38)" fg:x="9580" fg:w="3"/><text x="89.2338%" y="607.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::span::Span&gt; (2 samples, 0.02%)</title><rect x="88.9931%" y="581" width="0.0186%" height="15" fill="rgb(234,70,1)" fg:x="9581" fg:w="2"/><text x="89.2431%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="89.0303%" y="613" width="0.0186%" height="15" fill="rgb(232,178,18)" fg:x="9585" fg:w="2"/><text x="89.2803%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="89.0489%" y="597" width="0.0186%" height="15" fill="rgb(241,78,40)" fg:x="9587" fg:w="2"/><text x="89.2989%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.03%)</title><rect x="89.0767%" y="597" width="0.0279%" height="15" fill="rgb(222,35,25)" fg:x="9590" fg:w="3"/><text x="89.3267%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.03%)</title><rect x="89.0767%" y="581" width="0.0279%" height="15" fill="rgb(207,92,16)" fg:x="9590" fg:w="3"/><text x="89.3267%" y="591.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::section::Section&gt; (12 samples, 0.11%)</title><rect x="89.0210%" y="645" width="0.1115%" height="15" fill="rgb(216,59,51)" fg:x="9584" fg:w="12"/><text x="89.2710%" y="655.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::section_category::SectionCategory&gt; (12 samples, 0.11%)</title><rect x="89.0210%" y="629" width="0.1115%" height="15" fill="rgb(213,80,28)" fg:x="9584" fg:w="12"/><text x="89.2710%" y="639.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;[neopoligengine::child::Child]&gt; (9 samples, 0.08%)</title><rect x="89.0489%" y="613" width="0.0836%" height="15" fill="rgb(220,93,7)" fg:x="9587" fg:w="9"/><text x="89.2989%" y="623.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;neopoligengine::span::Span&gt; (3 samples, 0.03%)</title><rect x="89.1046%" y="597" width="0.0279%" height="15" fill="rgb(225,24,44)" fg:x="9593" fg:w="3"/><text x="89.3546%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="89.1139%" y="581" width="0.0186%" height="15" fill="rgb(243,74,40)" fg:x="9594" fg:w="2"/><text x="89.3639%" y="591.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::end (2 samples, 0.02%)</title><rect x="89.1975%" y="469" width="0.0186%" height="15" fill="rgb(228,39,7)" fg:x="9603" fg:w="2"/><text x="89.4475%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="89.1975%" y="453" width="0.0186%" height="15" fill="rgb(227,79,8)" fg:x="9603" fg:w="2"/><text x="89.4475%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="89.1975%" y="437" width="0.0186%" height="15" fill="rgb(236,58,11)" fg:x="9603" fg:w="2"/><text x="89.4475%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.03%)</title><rect x="89.2161%" y="469" width="0.0279%" height="15" fill="rgb(249,63,35)" fg:x="9605" fg:w="3"/><text x="89.4661%" y="479.50"></text></g><g><title>neopoligengine`&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (2 samples, 0.02%)</title><rect x="89.2253%" y="453" width="0.0186%" height="15" fill="rgb(252,114,16)" fg:x="9606" fg:w="2"/><text x="89.4753%" y="463.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::span::_::&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (12 samples, 0.11%)</title><rect x="89.1882%" y="485" width="0.1115%" height="15" fill="rgb(254,151,24)" fg:x="9602" fg:w="12"/><text x="89.4382%" y="495.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.05%)</title><rect x="89.2532%" y="469" width="0.0464%" height="15" fill="rgb(253,54,39)" fg:x="9609" fg:w="5"/><text x="89.5032%" y="479.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::list::_::&lt;impl serde::ser::Serialize for neopoligengine::list::Item&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (20 samples, 0.19%)</title><rect x="89.1696%" y="565" width="0.1858%" height="15" fill="rgb(243,25,45)" fg:x="9600" fg:w="20"/><text x="89.4196%" y="575.50"></text></g><g><title>neopoligengine`minijinja::value::serialize::transform (20 samples, 0.19%)</title><rect x="89.1696%" y="549" width="0.1858%" height="15" fill="rgb(234,134,9)" fg:x="9600" fg:w="20"/><text x="89.4196%" y="559.50"></text></g><g><title>neopoligengine`neopoligengine::child::_::_&lt;impl serde::ser::Serialize for neopoligengine::child::Child&gt;::serialize (20 samples, 0.19%)</title><rect x="89.1696%" y="533" width="0.1858%" height="15" fill="rgb(227,166,31)" fg:x="9600" fg:w="20"/><text x="89.4196%" y="543.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 0.19%)</title><rect x="89.1696%" y="517" width="0.1858%" height="15" fill="rgb(245,143,41)" fg:x="9600" fg:w="20"/><text x="89.4196%" y="527.50"></text></g><g><title>neopoligengine`neopoligengine::span::_::_&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize (19 samples, 0.18%)</title><rect x="89.1789%" y="501" width="0.1765%" height="15" fill="rgb(238,181,32)" fg:x="9601" fg:w="19"/><text x="89.4289%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.06%)</title><rect x="89.2996%" y="485" width="0.0557%" height="15" fill="rgb(224,113,18)" fg:x="9614" fg:w="6"/><text x="89.5496%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="89.3368%" y="469" width="0.0186%" height="15" fill="rgb(240,229,28)" fg:x="9618" fg:w="2"/><text x="89.5868%" y="479.50"></text></g><g><title>neopoligengine`neopoligengine::list::_::_&lt;impl serde::ser::Serialize for neopoligengine::list::List&gt;::serialize (21 samples, 0.20%)</title><rect x="89.1696%" y="613" width="0.1951%" height="15" fill="rgb(250,185,3)" fg:x="9600" fg:w="21"/><text x="89.4196%" y="623.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.20%)</title><rect x="89.1696%" y="597" width="0.1951%" height="15" fill="rgb(212,59,25)" fg:x="9600" fg:w="21"/><text x="89.4196%" y="607.50"></text></g><g><title>neopoligengine`neopoligengine::list::_::_&lt;impl serde::ser::Serialize for neopoligengine::list::Item&gt;::serialize (21 samples, 0.20%)</title><rect x="89.1696%" y="581" width="0.1951%" height="15" fill="rgb(221,87,20)" fg:x="9600" fg:w="21"/><text x="89.4196%" y="591.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="89.3647%" y="581" width="0.0186%" height="15" fill="rgb(213,74,28)" fg:x="9621" fg:w="2"/><text x="89.6147%" y="591.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="89.4204%" y="533" width="0.0279%" height="15" fill="rgb(224,132,34)" fg:x="9627" fg:w="3"/><text x="89.6704%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="89.4297%" y="517" width="0.0186%" height="15" fill="rgb(222,101,24)" fg:x="9628" fg:w="2"/><text x="89.6797%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="89.4297%" y="501" width="0.0186%" height="15" fill="rgb(254,142,4)" fg:x="9628" fg:w="2"/><text x="89.6797%" y="511.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="89.4576%" y="485" width="0.0279%" height="15" fill="rgb(230,229,49)" fg:x="9631" fg:w="3"/><text x="89.7076%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.05%)</title><rect x="89.4947%" y="469" width="0.0464%" height="15" fill="rgb(238,70,47)" fg:x="9635" fg:w="5"/><text x="89.7447%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.06%)</title><rect x="89.5411%" y="469" width="0.0557%" height="15" fill="rgb(231,160,17)" fg:x="9640" fg:w="6"/><text x="89.7911%" y="479.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::end (5 samples, 0.05%)</title><rect x="89.6062%" y="469" width="0.0464%" height="15" fill="rgb(218,68,53)" fg:x="9647" fg:w="5"/><text x="89.8562%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.03%)</title><rect x="89.6247%" y="453" width="0.0279%" height="15" fill="rgb(236,111,10)" fg:x="9649" fg:w="3"/><text x="89.8747%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.03%)</title><rect x="89.6247%" y="437" width="0.0279%" height="15" fill="rgb(224,34,41)" fg:x="9649" fg:w="3"/><text x="89.8747%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="89.6526%" y="453" width="0.0186%" height="15" fill="rgb(241,118,19)" fg:x="9652" fg:w="2"/><text x="89.9026%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.06%)</title><rect x="89.6805%" y="453" width="0.0557%" height="15" fill="rgb(238,129,25)" fg:x="9655" fg:w="6"/><text x="89.9305%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="89.7548%" y="437" width="0.0279%" height="15" fill="rgb(238,22,31)" fg:x="9663" fg:w="3"/><text x="90.0048%" y="447.50"></text></g><g><title>neopoligengine`&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (7 samples, 0.07%)</title><rect x="89.7455%" y="453" width="0.0650%" height="15" fill="rgb(222,174,48)" fg:x="9662" fg:w="7"/><text x="89.9955%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.03%)</title><rect x="89.7826%" y="437" width="0.0279%" height="15" fill="rgb(206,152,40)" fg:x="9666" fg:w="3"/><text x="90.0326%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_unit_variant (21 samples, 0.20%)</title><rect x="89.6526%" y="469" width="0.1951%" height="15" fill="rgb(218,99,54)" fg:x="9652" fg:w="21"/><text x="89.9026%" y="479.50"></text></g><g><title>neopoligengine`alloc::sync::arcinner_layout_for_value_layout (3 samples, 0.03%)</title><rect x="89.8198%" y="453" width="0.0279%" height="15" fill="rgb(220,174,26)" fg:x="9670" fg:w="3"/><text x="90.0698%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="89.8570%" y="453" width="0.0279%" height="15" fill="rgb(245,116,9)" fg:x="9674" fg:w="3"/><text x="90.1070%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.05%)</title><rect x="89.8848%" y="453" width="0.0464%" height="15" fill="rgb(209,72,35)" fg:x="9677" fg:w="5"/><text x="90.1348%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="89.9406%" y="453" width="0.0372%" height="15" fill="rgb(226,126,21)" fg:x="9683" fg:w="4"/><text x="90.1906%" y="463.50"></text></g><g><title>neopoligengine`&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (3 samples, 0.03%)</title><rect x="89.9777%" y="453" width="0.0279%" height="15" fill="rgb(227,192,1)" fg:x="9687" fg:w="3"/><text x="90.2277%" y="463.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::end (4 samples, 0.04%)</title><rect x="90.0056%" y="453" width="0.0372%" height="15" fill="rgb(237,180,29)" fg:x="9690" fg:w="4"/><text x="90.2556%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.04%)</title><rect x="90.0056%" y="437" width="0.0372%" height="15" fill="rgb(230,197,35)" fg:x="9690" fg:w="4"/><text x="90.2556%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="90.0242%" y="421" width="0.0186%" height="15" fill="rgb(246,193,31)" fg:x="9692" fg:w="2"/><text x="90.2742%" y="431.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="90.0985%" y="405" width="0.0186%" height="15" fill="rgb(241,36,4)" fg:x="9700" fg:w="2"/><text x="90.3485%" y="415.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::span::_::&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (5 samples, 0.05%)</title><rect x="90.0985%" y="421" width="0.0464%" height="15" fill="rgb(241,130,17)" fg:x="9700" fg:w="5"/><text x="90.3485%" y="431.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="90.1170%" y="405" width="0.0279%" height="15" fill="rgb(206,137,32)" fg:x="9702" fg:w="3"/><text x="90.3670%" y="415.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 0.14%)</title><rect x="90.0427%" y="453" width="0.1393%" height="15" fill="rgb(237,228,51)" fg:x="9694" fg:w="15"/><text x="90.2927%" y="463.50"></text></g><g><title>neopoligengine`neopoligengine::span::_::_&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize (13 samples, 0.12%)</title><rect x="90.0613%" y="437" width="0.1208%" height="15" fill="rgb(243,6,42)" fg:x="9696" fg:w="13"/><text x="90.3113%" y="447.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.04%)</title><rect x="90.1449%" y="421" width="0.0372%" height="15" fill="rgb(251,74,28)" fg:x="9705" fg:w="4"/><text x="90.3949%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="90.1913%" y="437" width="0.0186%" height="15" fill="rgb(218,20,49)" fg:x="9710" fg:w="2"/><text x="90.4413%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.03%)</title><rect x="90.2099%" y="437" width="0.0279%" height="15" fill="rgb(238,28,14)" fg:x="9712" fg:w="3"/><text x="90.4599%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.05%)</title><rect x="90.2378%" y="437" width="0.0464%" height="15" fill="rgb(229,40,46)" fg:x="9715" fg:w="5"/><text x="90.4878%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="90.2842%" y="437" width="0.0186%" height="15" fill="rgb(244,195,20)" fg:x="9720" fg:w="2"/><text x="90.5342%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.05%)</title><rect x="90.3121%" y="421" width="0.0464%" height="15" fill="rgb(253,56,35)" fg:x="9723" fg:w="5"/><text x="90.5621%" y="431.50"></text></g><g><title>neopoligengine`&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (9 samples, 0.08%)</title><rect x="90.3028%" y="437" width="0.0836%" height="15" fill="rgb(210,149,44)" fg:x="9722" fg:w="9"/><text x="90.5528%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (3 samples, 0.03%)</title><rect x="90.3585%" y="421" width="0.0279%" height="15" fill="rgb(240,135,12)" fg:x="9728" fg:w="3"/><text x="90.6085%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="90.3678%" y="405" width="0.0186%" height="15" fill="rgb(251,24,50)" fg:x="9729" fg:w="2"/><text x="90.6178%" y="415.50"></text></g><g><title>neopoligengine`__rdl_alloc (2 samples, 0.02%)</title><rect x="90.3957%" y="437" width="0.0186%" height="15" fill="rgb(243,200,47)" fg:x="9732" fg:w="2"/><text x="90.6457%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (27 samples, 0.25%)</title><rect x="90.1821%" y="453" width="0.2508%" height="15" fill="rgb(224,166,26)" fg:x="9709" fg:w="27"/><text x="90.4321%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.06%)</title><rect x="90.6929%" y="437" width="0.0557%" height="15" fill="rgb(233,0,47)" fg:x="9764" fg:w="6"/><text x="90.9429%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.05%)</title><rect x="90.7022%" y="421" width="0.0464%" height="15" fill="rgb(253,80,5)" fg:x="9765" fg:w="5"/><text x="90.9522%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="90.7208%" y="405" width="0.0279%" height="15" fill="rgb(214,133,25)" fg:x="9767" fg:w="3"/><text x="90.9708%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="90.7579%" y="437" width="0.0372%" height="15" fill="rgb(209,27,14)" fg:x="9771" fg:w="4"/><text x="91.0079%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="90.7951%" y="437" width="0.0186%" height="15" fill="rgb(219,102,51)" fg:x="9775" fg:w="2"/><text x="91.0451%" y="447.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::span::_::&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (106 samples, 0.98%)</title><rect x="89.8477%" y="469" width="0.9846%" height="15" fill="rgb(237,18,16)" fg:x="9673" fg:w="106"/><text x="90.0977%" y="479.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (41 samples, 0.38%)</title><rect x="90.4514%" y="453" width="0.3808%" height="15" fill="rgb(241,85,17)" fg:x="9738" fg:w="41"/><text x="90.7014%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="90.8137%" y="437" width="0.0186%" height="15" fill="rgb(236,90,42)" fg:x="9777" fg:w="2"/><text x="91.0637%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="90.9809%" y="421" width="0.0186%" height="15" fill="rgb(249,57,21)" fg:x="9795" fg:w="2"/><text x="91.2309%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.14%)</title><rect x="90.9530%" y="453" width="0.1393%" height="15" fill="rgb(243,12,36)" fg:x="9792" fg:w="15"/><text x="91.2030%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.12%)</title><rect x="90.9716%" y="437" width="0.1208%" height="15" fill="rgb(253,128,47)" fg:x="9794" fg:w="13"/><text x="91.2216%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.09%)</title><rect x="90.9994%" y="421" width="0.0929%" height="15" fill="rgb(207,33,20)" fg:x="9797" fg:w="10"/><text x="91.2494%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="91.0738%" y="405" width="0.0186%" height="15" fill="rgb(233,215,35)" fg:x="9805" fg:w="2"/><text x="91.3238%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="91.1016%" y="453" width="0.0279%" height="15" fill="rgb(249,188,52)" fg:x="9808" fg:w="3"/><text x="91.3516%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (31 samples, 0.29%)</title><rect x="90.8508%" y="469" width="0.2879%" height="15" fill="rgb(225,12,32)" fg:x="9781" fg:w="31"/><text x="91.1008%" y="479.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (187 samples, 1.74%)</title><rect x="89.4204%" y="565" width="1.7369%" height="15" fill="rgb(247,98,14)" fg:x="9627" fg:w="187"/><text x="89.6704%" y="575.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::section_category::_::&lt;impl serde::ser::Serialize for neopoligengine::section_category::SectionCategory&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (187 samples, 1.74%)</title><rect x="89.4204%" y="549" width="1.7369%" height="15" fill="rgb(247,219,48)" fg:x="9627" fg:w="187"/><text x="89.6704%" y="559.50"></text></g><g><title>neopoligengine`minijinja::value::serialize::transform (184 samples, 1.71%)</title><rect x="89.4483%" y="533" width="1.7091%" height="15" fill="rgb(253,60,48)" fg:x="9630" fg:w="184"/><text x="89.6983%" y="543.50"></text></g><g><title>neopoligengine`neopoligengine::child::_::_&lt;impl serde::ser::Serialize for neopoligengine::child::Child&gt;::serialize (184 samples, 1.71%)</title><rect x="89.4483%" y="517" width="1.7091%" height="15" fill="rgb(245,15,52)" fg:x="9630" fg:w="184"/><text x="89.6983%" y="527.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (183 samples, 1.70%)</title><rect x="89.4576%" y="501" width="1.6998%" height="15" fill="rgb(220,133,28)" fg:x="9631" fg:w="183"/><text x="89.7076%" y="511.50"></text></g><g><title>neopoligengine`neopoligengine::span::_::_&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize (180 samples, 1.67%)</title><rect x="89.4854%" y="485" width="1.6719%" height="15" fill="rgb(217,180,4)" fg:x="9634" fg:w="180"/><text x="89.7354%" y="495.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="91.1388%" y="469" width="0.0186%" height="15" fill="rgb(251,24,1)" fg:x="9812" fg:w="2"/><text x="91.3888%" y="479.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (195 samples, 1.81%)</title><rect x="89.3647%" y="597" width="1.8113%" height="15" fill="rgb(212,185,49)" fg:x="9621" fg:w="195"/><text x="89.6147%" y="607.50">n..</text></g><g><title>neopoligengine`neopoligengine::section_category::_::_&lt;impl serde::ser::Serialize for neopoligengine::section_category::SectionCategory&gt;::serialize (191 samples, 1.77%)</title><rect x="89.4018%" y="581" width="1.7741%" height="15" fill="rgb(215,175,22)" fg:x="9625" fg:w="191"/><text x="89.6518%" y="591.50">n..</text></g><g><title>neopoligengine`neopoligengine::site::Site::page_main_body (286 samples, 2.66%)</title><rect x="88.5473%" y="661" width="2.6565%" height="15" fill="rgb(250,205,14)" fg:x="9533" fg:w="286"/><text x="88.7973%" y="671.50">ne..</text></g><g><title>neopoligengine`minijinja::value::serialize::transform (223 samples, 2.07%)</title><rect x="89.1325%" y="645" width="2.0713%" height="15" fill="rgb(225,211,22)" fg:x="9596" fg:w="223"/><text x="89.3825%" y="655.50">n..</text></g><g><title>neopoligengine`neopoligengine::child::_::_&lt;impl serde::ser::Serialize for neopoligengine::child::Child&gt;::serialize (223 samples, 2.07%)</title><rect x="89.1325%" y="629" width="2.0713%" height="15" fill="rgb(251,179,42)" fg:x="9596" fg:w="223"/><text x="89.3825%" y="639.50">n..</text></g><g><title>neopoligengine`neopoligengine::section::_::_&lt;impl serde::ser::Serialize for neopoligengine::section::Section&gt;::serialize (198 samples, 1.84%)</title><rect x="89.3647%" y="613" width="1.8391%" height="15" fill="rgb(208,216,51)" fg:x="9621" fg:w="198"/><text x="89.6147%" y="623.50">n..</text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="91.1852%" y="597" width="0.0186%" height="15" fill="rgb(235,36,11)" fg:x="9817" fg:w="2"/><text x="91.4352%" y="607.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="91.2595%" y="581" width="0.0279%" height="15" fill="rgb(213,189,28)" fg:x="9825" fg:w="3"/><text x="91.5095%" y="591.50"></text></g><g><title>neopoligengine`&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;alloc::string::String&gt;&gt;::from (2 samples, 0.02%)</title><rect x="91.3338%" y="421" width="0.0186%" height="15" fill="rgb(227,203,42)" fg:x="9833" fg:w="2"/><text x="91.5838%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="91.3338%" y="405" width="0.0186%" height="15" fill="rgb(244,72,36)" fg:x="9833" fg:w="2"/><text x="91.5838%" y="415.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_unit_variant (3 samples, 0.03%)</title><rect x="91.3338%" y="437" width="0.0279%" height="15" fill="rgb(213,53,17)" fg:x="9833" fg:w="3"/><text x="91.5838%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::end (2 samples, 0.02%)</title><rect x="91.3896%" y="421" width="0.0186%" height="15" fill="rgb(207,167,3)" fg:x="9839" fg:w="2"/><text x="91.6396%" y="431.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="91.4081%" y="421" width="0.0186%" height="15" fill="rgb(216,98,30)" fg:x="9841" fg:w="2"/><text x="91.6581%" y="431.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::span::_::&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (11 samples, 0.10%)</title><rect x="91.3617%" y="437" width="0.1022%" height="15" fill="rgb(236,123,15)" fg:x="9836" fg:w="11"/><text x="91.6117%" y="447.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="91.4360%" y="421" width="0.0279%" height="15" fill="rgb(248,81,50)" fg:x="9844" fg:w="3"/><text x="91.6860%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="91.4453%" y="405" width="0.0186%" height="15" fill="rgb(214,120,4)" fg:x="9845" fg:w="2"/><text x="91.6953%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="91.4824%" y="421" width="0.0186%" height="15" fill="rgb(208,179,34)" fg:x="9849" fg:w="2"/><text x="91.7324%" y="431.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.20%)</title><rect x="91.3060%" y="533" width="0.2043%" height="15" fill="rgb(227,140,7)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="543.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::section_category::_::&lt;impl serde::ser::Serialize for neopoligengine::section_category::SectionCategory&gt;::serialize::__AdjacentlyTagged as serde::ser::Serialize&gt;::serialize (22 samples, 0.20%)</title><rect x="91.3060%" y="517" width="0.2043%" height="15" fill="rgb(214,22,6)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="527.50"></text></g><g><title>neopoligengine`minijinja::value::serialize::transform (22 samples, 0.20%)</title><rect x="91.3060%" y="501" width="0.2043%" height="15" fill="rgb(207,137,27)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="511.50"></text></g><g><title>neopoligengine`neopoligengine::child::_::_&lt;impl serde::ser::Serialize for neopoligengine::child::Child&gt;::serialize (22 samples, 0.20%)</title><rect x="91.3060%" y="485" width="0.2043%" height="15" fill="rgb(210,8,46)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="495.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.20%)</title><rect x="91.3060%" y="469" width="0.2043%" height="15" fill="rgb(240,16,54)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="479.50"></text></g><g><title>neopoligengine`neopoligengine::span::_::_&lt;impl serde::ser::Serialize for neopoligengine::span::Span&gt;::serialize (22 samples, 0.20%)</title><rect x="91.3060%" y="453" width="0.2043%" height="15" fill="rgb(211,209,29)" fg:x="9830" fg:w="22"/><text x="91.5560%" y="463.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.05%)</title><rect x="91.4639%" y="437" width="0.0464%" height="15" fill="rgb(226,228,24)" fg:x="9847" fg:w="5"/><text x="91.7139%" y="447.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 0.23%)</title><rect x="91.2874%" y="565" width="0.2322%" height="15" fill="rgb(222,84,9)" fg:x="9828" fg:w="25"/><text x="91.5374%" y="575.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::_::_&lt;impl serde::ser::Serialize for neopoligengine::section_category::SectionCategory&gt;::serialize (23 samples, 0.21%)</title><rect x="91.3060%" y="549" width="0.2136%" height="15" fill="rgb(234,203,30)" fg:x="9830" fg:w="23"/><text x="91.5560%" y="559.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.30%)</title><rect x="91.2317%" y="645" width="0.2972%" height="15" fill="rgb(238,109,14)" fg:x="9822" fg:w="32"/><text x="91.4817%" y="655.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.28%)</title><rect x="91.2502%" y="629" width="0.2787%" height="15" fill="rgb(233,206,34)" fg:x="9824" fg:w="30"/><text x="91.5002%" y="639.50"></text></g><g><title>neopoligengine`minijinja::value::Value::from_serializable (29 samples, 0.27%)</title><rect x="91.2595%" y="613" width="0.2694%" height="15" fill="rgb(220,167,47)" fg:x="9825" fg:w="29"/><text x="91.5095%" y="623.50"></text></g><g><title>neopoligengine`neopoligengine::child::_::_&lt;impl serde::ser::Serialize for neopoligengine::child::Child&gt;::serialize (29 samples, 0.27%)</title><rect x="91.2595%" y="597" width="0.2694%" height="15" fill="rgb(238,105,10)" fg:x="9825" fg:w="29"/><text x="91.5095%" y="607.50"></text></g><g><title>neopoligengine`neopoligengine::section::_::_&lt;impl serde::ser::Serialize for neopoligengine::section::Section&gt;::serialize (26 samples, 0.24%)</title><rect x="91.2874%" y="581" width="0.2415%" height="15" fill="rgb(213,227,17)" fg:x="9828" fg:w="26"/><text x="91.5374%" y="591.50"></text></g><g><title>neopoligengine`minijinja::value::Value::call_method (9,511 samples, 88.34%)</title><rect x="3.2138%" y="741" width="88.3429%" height="15" fill="rgb(217,132,38)" fg:x="346" fg:w="9511"/><text x="3.4638%" y="751.50">neopoligengine`minijinja::value::Value::call_method</text></g><g><title>neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call (9,509 samples, 88.32%)</title><rect x="3.2324%" y="725" width="88.3244%" height="15" fill="rgb(242,146,4)" fg:x="348" fg:w="9509"/><text x="3.4824%" y="735.50">neopoligengine`&lt;minijinja::vm::macro_object::Macro as minijinja::value::object::Object&gt;::call</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_macro (9,503 samples, 88.27%)</title><rect x="3.2881%" y="709" width="88.2686%" height="15" fill="rgb(212,61,9)" fg:x="354" fg:w="9503"/><text x="3.5381%" y="719.50">neopoligengine`minijinja::vm::Vm::eval_macro</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (9,498 samples, 88.22%)</title><rect x="3.3346%" y="693" width="88.2222%" height="15" fill="rgb(247,126,22)" fg:x="359" fg:w="9498"/><text x="3.5846%" y="703.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (327 samples, 3.04%)</title><rect x="88.5194%" y="677" width="3.0373%" height="15" fill="rgb(220,196,2)" fg:x="9530" fg:w="327"/><text x="88.7694%" y="687.50">neo..</text></g><g><title>neopoligengine`neopoligengine::site::Site::page_place_section (38 samples, 0.35%)</title><rect x="91.2038%" y="661" width="0.3530%" height="15" fill="rgb(208,46,4)" fg:x="9819" fg:w="38"/><text x="91.4538%" y="671.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="91.5289%" y="645" width="0.0279%" height="15" fill="rgb(252,104,46)" fg:x="9854" fg:w="3"/><text x="91.7789%" y="655.50"></text></g><g><title>neopoligengine`core::fmt::write (2 samples, 0.02%)</title><rect x="91.5382%" y="629" width="0.0186%" height="15" fill="rgb(237,152,48)" fg:x="9855" fg:w="2"/><text x="91.7882%" y="639.50"></text></g><g><title>neopoligengine`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="91.5382%" y="613" width="0.0186%" height="15" fill="rgb(221,59,37)" fg:x="9855" fg:w="2"/><text x="91.7882%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="91.6218%" y="725" width="0.0186%" height="15" fill="rgb(209,202,51)" fg:x="9864" fg:w="2"/><text x="91.8718%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="91.6403%" y="725" width="0.0186%" height="15" fill="rgb(228,81,30)" fg:x="9866" fg:w="2"/><text x="91.8903%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="91.7054%" y="709" width="0.0186%" height="15" fill="rgb(227,42,39)" fg:x="9873" fg:w="2"/><text x="91.9554%" y="719.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::keyref::KeyRef as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="91.7239%" y="709" width="0.0186%" height="15" fill="rgb(221,26,2)" fg:x="9875" fg:w="2"/><text x="91.9739%" y="719.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.08%)</title><rect x="91.6775%" y="725" width="0.0836%" height="15" fill="rgb(254,61,31)" fg:x="9870" fg:w="9"/><text x="91.9275%" y="735.50"></text></g><g><title>neopoligengine`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="91.7425%" y="709" width="0.0186%" height="15" fill="rgb(222,173,38)" fg:x="9877" fg:w="2"/><text x="91.9925%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="91.7983%" y="709" width="0.0186%" height="15" fill="rgb(218,50,12)" fg:x="9883" fg:w="2"/><text x="92.0483%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="91.8633%" y="677" width="0.0279%" height="15" fill="rgb(223,88,40)" fg:x="9890" fg:w="3"/><text x="92.1133%" y="687.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::enclose (12 samples, 0.11%)</title><rect x="91.8168%" y="709" width="0.1115%" height="15" fill="rgb(237,54,19)" fg:x="9885" fg:w="12"/><text x="92.0668%" y="719.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store_if_missing (9 samples, 0.08%)</title><rect x="91.8447%" y="693" width="0.0836%" height="15" fill="rgb(251,129,25)" fg:x="9888" fg:w="9"/><text x="92.0947%" y="703.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="91.9376%" y="693" width="0.0279%" height="15" fill="rgb(238,97,19)" fg:x="9898" fg:w="3"/><text x="92.1876%" y="703.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (22 samples, 0.20%)</title><rect x="91.7704%" y="725" width="0.2043%" height="15" fill="rgb(240,169,18)" fg:x="9880" fg:w="22"/><text x="92.0204%" y="735.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (5 samples, 0.05%)</title><rect x="91.9283%" y="709" width="0.0464%" height="15" fill="rgb(230,187,49)" fg:x="9897" fg:w="5"/><text x="92.1783%" y="719.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::enclose (2 samples, 0.02%)</title><rect x="91.9747%" y="725" width="0.0186%" height="15" fill="rgb(209,44,26)" fg:x="9902" fg:w="2"/><text x="92.2247%" y="735.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::load (2 samples, 0.02%)</title><rect x="91.9933%" y="725" width="0.0186%" height="15" fill="rgb(244,0,6)" fg:x="9904" fg:w="2"/><text x="92.2433%" y="735.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="92.0305%" y="693" width="0.0186%" height="15" fill="rgb(248,18,21)" fg:x="9908" fg:w="2"/><text x="92.2805%" y="703.50"></text></g><g><title>neopoligengine`minijinja::vm::context::Context::store (7 samples, 0.07%)</title><rect x="92.0119%" y="725" width="0.0650%" height="15" fill="rgb(245,180,19)" fg:x="9906" fg:w="7"/><text x="92.2619%" y="735.50"></text></g><g><title>neopoligengine`minijinja::vm::closure_object::Closure::store (6 samples, 0.06%)</title><rect x="92.0212%" y="709" width="0.0557%" height="15" fill="rgb(252,118,36)" fg:x="9907" fg:w="6"/><text x="92.2712%" y="719.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.03%)</title><rect x="92.0490%" y="693" width="0.0279%" height="15" fill="rgb(210,224,19)" fg:x="9910" fg:w="3"/><text x="92.2990%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::ilink (2 samples, 0.02%)</title><rect x="92.0862%" y="709" width="0.0186%" height="15" fill="rgb(218,30,24)" fg:x="9914" fg:w="2"/><text x="92.3362%" y="719.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::page_head (2 samples, 0.02%)</title><rect x="92.1048%" y="709" width="0.0186%" height="15" fill="rgb(219,75,50)" fg:x="9916" fg:w="2"/><text x="92.3548%" y="719.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (62 samples, 0.58%)</title><rect x="91.5568%" y="741" width="0.5759%" height="15" fill="rgb(234,72,50)" fg:x="9857" fg:w="62"/><text x="91.8068%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (6 samples, 0.06%)</title><rect x="92.0769%" y="725" width="0.0557%" height="15" fill="rgb(219,100,48)" fg:x="9913" fg:w="6"/><text x="92.3269%" y="735.50"></text></g><g><title>neopoligengine`minijinja::vm::state::State::get_template (2 samples, 0.02%)</title><rect x="92.1419%" y="741" width="0.0186%" height="15" fill="rgb(253,5,41)" fg:x="9920" fg:w="2"/><text x="92.3919%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="92.1419%" y="725" width="0.0186%" height="15" fill="rgb(247,181,11)" fg:x="9920" fg:w="2"/><text x="92.3919%" y="735.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::SerializeStruct as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.02%)</title><rect x="92.1605%" y="693" width="0.0186%" height="15" fill="rgb(222,223,25)" fg:x="9922" fg:w="2"/><text x="92.4105%" y="703.50"></text></g><g><title>neopoligengine`minijinja::value::serialize::transform (2 samples, 0.02%)</title><rect x="92.1605%" y="677" width="0.0186%" height="15" fill="rgb(214,198,28)" fg:x="9922" fg:w="2"/><text x="92.4105%" y="687.50"></text></g><g><title>neopoligengine`neopoligengine::collection::_::_&lt;impl serde::ser::Serialize for neopoligengine::collection::CollectionItem&gt;::serialize (2 samples, 0.02%)</title><rect x="92.1605%" y="661" width="0.0186%" height="15" fill="rgb(230,46,43)" fg:x="9922" fg:w="2"/><text x="92.4105%" y="671.50"></text></g><g><title>neopoligengine`minijinja::value::Value::from_serializable (3 samples, 0.03%)</title><rect x="92.1605%" y="725" width="0.0279%" height="15" fill="rgb(233,65,53)" fg:x="9922" fg:w="3"/><text x="92.4105%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::collection::_::_&lt;impl serde::ser::Serialize for neopoligengine::collection::Collection&gt;::serialize (3 samples, 0.03%)</title><rect x="92.1605%" y="709" width="0.0279%" height="15" fill="rgb(221,121,27)" fg:x="9922" fg:w="3"/><text x="92.4105%" y="719.50"></text></g><g><title>neopoligengine`neopoligengine::collection::new_from_tags::_&lt;impl neopoligengine::collection::Collection&gt;::new_from_tags (2 samples, 0.02%)</title><rect x="92.1884%" y="709" width="0.0186%" height="15" fill="rgb(247,70,47)" fg:x="9925" fg:w="2"/><text x="92.4384%" y="719.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="92.1884%" y="693" width="0.0186%" height="15" fill="rgb(228,85,35)" fg:x="9925" fg:w="2"/><text x="92.4384%" y="703.50"></text></g><g><title>neopoligengine`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="92.1884%" y="677" width="0.0186%" height="15" fill="rgb(209,50,18)" fg:x="9925" fg:w="2"/><text x="92.4384%" y="687.50"></text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (9,597 samples, 89.14%)</title><rect x="3.0838%" y="757" width="89.1417%" height="15" fill="rgb(250,19,35)" fg:x="332" fg:w="9597"/><text x="3.3338%" y="767.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (7 samples, 0.07%)</title><rect x="92.1605%" y="741" width="0.0650%" height="15" fill="rgb(253,107,29)" fg:x="9922" fg:w="7"/><text x="92.4105%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::collection_from_tags (4 samples, 0.04%)</title><rect x="92.1884%" y="725" width="0.0372%" height="15" fill="rgb(252,179,29)" fg:x="9925" fg:w="4"/><text x="92.4384%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::set_cache (2 samples, 0.02%)</title><rect x="92.2069%" y="709" width="0.0186%" height="15" fill="rgb(238,194,6)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="719.50"></text></g><g><title>neopoligengine`tracing::span::Span::new (2 samples, 0.02%)</title><rect x="92.2069%" y="693" width="0.0186%" height="15" fill="rgb(238,164,29)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="703.50"></text></g><g><title>neopoligengine`tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="92.2069%" y="677" width="0.0186%" height="15" fill="rgb(224,25,9)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="687.50"></text></g><g><title>neopoligengine`tracing::span::Span::make_with (2 samples, 0.02%)</title><rect x="92.2069%" y="661" width="0.0186%" height="15" fill="rgb(244,153,23)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="671.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="92.2069%" y="645" width="0.0186%" height="15" fill="rgb(212,203,14)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="655.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.02%)</title><rect x="92.2069%" y="629" width="0.0186%" height="15" fill="rgb(220,164,20)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="639.50"></text></g><g><title>neopoligengine`tracing_core::span::Attributes::record (2 samples, 0.02%)</title><rect x="92.2069%" y="613" width="0.0186%" height="15" fill="rgb(222,203,48)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="623.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="92.2069%" y="597" width="0.0186%" height="15" fill="rgb(215,159,22)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="607.50"></text></g><g><title>neopoligengine`core::fmt::write (2 samples, 0.02%)</title><rect x="92.2069%" y="581" width="0.0186%" height="15" fill="rgb(216,183,47)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="591.50"></text></g><g><title>neopoligengine`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="92.2069%" y="565" width="0.0186%" height="15" fill="rgb(229,195,25)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="575.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.02%)</title><rect x="92.2069%" y="549" width="0.0186%" height="15" fill="rgb(224,132,51)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="559.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugTuple::field (2 samples, 0.02%)</title><rect x="92.2069%" y="533" width="0.0186%" height="15" fill="rgb(240,63,7)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="543.50"></text></g><g><title>neopoligengine`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="92.2069%" y="517" width="0.0186%" height="15" fill="rgb(249,182,41)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="527.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (2 samples, 0.02%)</title><rect x="92.2069%" y="501" width="0.0186%" height="15" fill="rgb(243,47,26)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="511.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="92.2069%" y="485" width="0.0186%" height="15" fill="rgb(233,48,2)" fg:x="9927" fg:w="2"/><text x="92.4569%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.03%)</title><rect x="92.2534%" y="741" width="0.0279%" height="15" fill="rgb(244,165,34)" fg:x="9932" fg:w="3"/><text x="92.5034%" y="751.50"></text></g><g><title>neopoligengine`minijinja::value::Value::from_serializable (2 samples, 0.02%)</title><rect x="92.2905%" y="741" width="0.0186%" height="15" fill="rgb(207,89,7)" fg:x="9936" fg:w="2"/><text x="92.5405%" y="751.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::serialize::ValueSerializer as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="92.2905%" y="725" width="0.0186%" height="15" fill="rgb(244,117,36)" fg:x="9936" fg:w="2"/><text x="92.5405%" y="735.50"></text></g><g><title>neopoligengine`&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="92.3184%" y="693" width="0.0279%" height="15" fill="rgb(226,144,34)" fg:x="9939" fg:w="3"/><text x="92.5684%" y="703.50"></text></g><g><title>neopoligengine`core::char::methods::_&lt;impl char&gt;::escape_debug_ext (2 samples, 0.02%)</title><rect x="92.3277%" y="677" width="0.0186%" height="15" fill="rgb(213,23,19)" fg:x="9940" fg:w="2"/><text x="92.5777%" y="687.50"></text></g><g><title>neopoligengine`&lt;minijinja::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.05%)</title><rect x="92.3091%" y="725" width="0.0464%" height="15" fill="rgb(217,75,12)" fg:x="9938" fg:w="5"/><text x="92.5591%" y="735.50"></text></g><g><title>neopoligengine`core::fmt::write (4 samples, 0.04%)</title><rect x="92.3184%" y="709" width="0.0372%" height="15" fill="rgb(224,159,17)" fg:x="9939" fg:w="4"/><text x="92.5684%" y="719.50"></text></g><g><title>neopoligengine`core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.02%)</title><rect x="92.3556%" y="725" width="0.0186%" height="15" fill="rgb(217,118,1)" fg:x="9943" fg:w="2"/><text x="92.6056%" y="735.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::Subscriber&lt;N,E,F,W&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="92.3556%" y="709" width="0.0186%" height="15" fill="rgb(232,180,48)" fg:x="9943" fg:w="2"/><text x="92.6056%" y="719.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (2 samples, 0.02%)</title><rect x="92.3741%" y="661" width="0.0186%" height="15" fill="rgb(230,27,33)" fg:x="9945" fg:w="2"/><text x="92.6241%" y="671.50"></text></g><g><title>neopoligengine`tracing_core::span::Attributes::record (2 samples, 0.02%)</title><rect x="92.3741%" y="645" width="0.0186%" height="15" fill="rgb(205,31,21)" fg:x="9945" fg:w="2"/><text x="92.6241%" y="655.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="92.3741%" y="629" width="0.0186%" height="15" fill="rgb(253,59,4)" fg:x="9945" fg:w="2"/><text x="92.6241%" y="639.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (2 samples, 0.02%)</title><rect x="92.3927%" y="661" width="0.0186%" height="15" fill="rgb(224,201,9)" fg:x="9947" fg:w="2"/><text x="92.6427%" y="671.50"></text></g><g><title>neopoligengine`tracing::span::Span::new (6 samples, 0.06%)</title><rect x="92.3741%" y="725" width="0.0557%" height="15" fill="rgb(229,206,30)" fg:x="9945" fg:w="6"/><text x="92.6241%" y="735.50"></text></g><g><title>neopoligengine`tracing_core::dispatcher::get_default (6 samples, 0.06%)</title><rect x="92.3741%" y="709" width="0.0557%" height="15" fill="rgb(212,67,47)" fg:x="9945" fg:w="6"/><text x="92.6241%" y="719.50"></text></g><g><title>neopoligengine`tracing::span::Span::make_with (6 samples, 0.06%)</title><rect x="92.3741%" y="693" width="0.0557%" height="15" fill="rgb(211,96,50)" fg:x="9945" fg:w="6"/><text x="92.6241%" y="703.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (6 samples, 0.06%)</title><rect x="92.3741%" y="677" width="0.0557%" height="15" fill="rgb(252,114,18)" fg:x="9945" fg:w="6"/><text x="92.6241%" y="687.50"></text></g><g><title>neopoligengine`&lt;tracing_appender::non_blocking::NonBlocking as std::io::Write&gt;::write (8 samples, 0.07%)</title><rect x="92.4577%" y="693" width="0.0743%" height="15" fill="rgb(223,58,37)" fg:x="9954" fg:w="8"/><text x="92.7077%" y="703.50"></text></g><g><title>neopoligengine`crossbeam_channel::waker::SyncWaker::notify (5 samples, 0.05%)</title><rect x="92.4856%" y="677" width="0.0464%" height="15" fill="rgb(237,70,4)" fg:x="9957" fg:w="5"/><text x="92.7356%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (5 samples, 0.05%)</title><rect x="92.4856%" y="661" width="0.0464%" height="15" fill="rgb(244,85,46)" fg:x="9957" fg:w="5"/><text x="92.7356%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (5 samples, 0.05%)</title><rect x="92.4856%" y="645" width="0.0464%" height="15" fill="rgb(223,39,52)" fg:x="9957" fg:w="5"/><text x="92.7356%" y="655.50"></text></g><g><title>neopoligengine`core::fmt::write (2 samples, 0.02%)</title><rect x="92.5413%" y="693" width="0.0186%" height="15" fill="rgb(218,200,14)" fg:x="9963" fg:w="2"/><text x="92.7913%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::log_from_template (29 samples, 0.27%)</title><rect x="92.3091%" y="741" width="0.2694%" height="15" fill="rgb(208,171,16)" fg:x="9938" fg:w="29"/><text x="92.5591%" y="751.50"></text></g><g><title>neopoligengine`tracing_core::event::Event::dispatch (15 samples, 0.14%)</title><rect x="92.4392%" y="725" width="0.1393%" height="15" fill="rgb(234,200,18)" fg:x="9952" fg:w="15"/><text x="92.6892%" y="735.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (14 samples, 0.13%)</title><rect x="92.4484%" y="709" width="0.1300%" height="15" fill="rgb(228,45,11)" fg:x="9953" fg:w="14"/><text x="92.6984%" y="719.50"></text></g><g><title>neopoligengine`core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.02%)</title><rect x="92.5599%" y="693" width="0.0186%" height="15" fill="rgb(237,182,11)" fg:x="9965" fg:w="2"/><text x="92.8099%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::site::Site::page_output_path (3 samples, 0.03%)</title><rect x="92.5878%" y="741" width="0.0279%" height="15" fill="rgb(241,175,49)" fg:x="9968" fg:w="3"/><text x="92.8378%" y="751.50"></text></g><g><title>neopoligengine`minijinja::template::Template::render (9,833 samples, 91.33%)</title><rect x="1.3097%" y="821" width="91.3338%" height="15" fill="rgb(247,38,35)" fg:x="141" fg:w="9833"/><text x="1.5597%" y="831.50">neopoligengine`minijinja::template::Template::render</text></g><g><title>neopoligengine`minijinja::template::Template::_render (9,650 samples, 89.63%)</title><rect x="3.0095%" y="805" width="89.6340%" height="15" fill="rgb(228,39,49)" fg:x="324" fg:w="9650"/><text x="3.2595%" y="815.50">neopoligengine`minijinja::template::Template::_render</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval (9,650 samples, 89.63%)</title><rect x="3.0095%" y="789" width="89.6340%" height="15" fill="rgb(226,101,26)" fg:x="324" fg:w="9650"/><text x="3.2595%" y="799.50">neopoligengine`minijinja::vm::Vm::eval</text></g><g><title>neopoligengine`minijinja::vm::Vm::eval_impl (9,650 samples, 89.63%)</title><rect x="3.0095%" y="773" width="89.6340%" height="15" fill="rgb(206,141,19)" fg:x="324" fg:w="9650"/><text x="3.2595%" y="783.50">neopoligengine`minijinja::vm::Vm::eval_impl</text></g><g><title>neopoligengine`neopoligengine::site::object::_&lt;impl minijinja::value::object::Object for neopoligengine::site::Site&gt;::call_method (43 samples, 0.40%)</title><rect x="92.2441%" y="757" width="0.3994%" height="15" fill="rgb(211,200,13)" fg:x="9931" fg:w="43"/><text x="92.4941%" y="767.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (2 samples, 0.02%)</title><rect x="92.7178%" y="709" width="0.0186%" height="15" fill="rgb(241,121,6)" fg:x="9982" fg:w="2"/><text x="92.9678%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (2 samples, 0.02%)</title><rect x="92.7178%" y="693" width="0.0186%" height="15" fill="rgb(234,221,29)" fg:x="9982" fg:w="2"/><text x="92.9678%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::list::list (5 samples, 0.05%)</title><rect x="92.7178%" y="757" width="0.0464%" height="15" fill="rgb(229,136,5)" fg:x="9982" fg:w="5"/><text x="92.9678%" y="767.50"></text></g><g><title>neopoligengine`neopoligengine::list::list_full (5 samples, 0.05%)</title><rect x="92.7178%" y="741" width="0.0464%" height="15" fill="rgb(238,36,11)" fg:x="9982" fg:w="5"/><text x="92.9678%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_section_full (5 samples, 0.05%)</title><rect x="92.7178%" y="725" width="0.0464%" height="15" fill="rgb(251,55,41)" fg:x="9982" fg:w="5"/><text x="92.9678%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_item_wrapper (3 samples, 0.03%)</title><rect x="92.7364%" y="709" width="0.0279%" height="15" fill="rgb(242,34,40)" fg:x="9984" fg:w="3"/><text x="92.9864%" y="719.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_item_block (3 samples, 0.03%)</title><rect x="92.7364%" y="693" width="0.0279%" height="15" fill="rgb(215,42,17)" fg:x="9984" fg:w="3"/><text x="92.9864%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::span::span (2 samples, 0.02%)</title><rect x="92.7457%" y="677" width="0.0186%" height="15" fill="rgb(207,44,46)" fg:x="9985" fg:w="2"/><text x="92.9957%" y="687.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::end::preformatted_section_end (4 samples, 0.04%)</title><rect x="92.7735%" y="725" width="0.0372%" height="15" fill="rgb(211,206,28)" fg:x="9988" fg:w="4"/><text x="93.0235%" y="735.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (4 samples, 0.04%)</title><rect x="92.7735%" y="709" width="0.0372%" height="15" fill="rgb(237,167,16)" fg:x="9988" fg:w="4"/><text x="93.0235%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (4 samples, 0.04%)</title><rect x="92.7735%" y="693" width="0.0372%" height="15" fill="rgb(233,66,6)" fg:x="9988" fg:w="4"/><text x="93.0235%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::section::section_end (8 samples, 0.07%)</title><rect x="92.7643%" y="741" width="0.0743%" height="15" fill="rgb(246,123,29)" fg:x="9987" fg:w="8"/><text x="93.0143%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::standard::end::standard_section_end (3 samples, 0.03%)</title><rect x="92.8107%" y="725" width="0.0279%" height="15" fill="rgb(209,62,40)" fg:x="9992" fg:w="3"/><text x="93.0607%" y="735.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (3 samples, 0.03%)</title><rect x="92.8107%" y="709" width="0.0279%" height="15" fill="rgb(218,4,25)" fg:x="9992" fg:w="3"/><text x="93.0607%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (3 samples, 0.03%)</title><rect x="92.8107%" y="693" width="0.0279%" height="15" fill="rgb(253,91,49)" fg:x="9992" fg:w="3"/><text x="93.0607%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::json::full::json_section_full (2 samples, 0.02%)</title><rect x="92.8850%" y="725" width="0.0186%" height="15" fill="rgb(228,155,29)" fg:x="10000" fg:w="2"/><text x="93.1350%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::full::preformatted_section_full (16 samples, 0.15%)</title><rect x="92.9036%" y="725" width="0.1486%" height="15" fill="rgb(243,57,37)" fg:x="10002" fg:w="16"/><text x="93.1536%" y="735.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (15 samples, 0.14%)</title><rect x="92.9129%" y="709" width="0.1393%" height="15" fill="rgb(244,167,17)" fg:x="10003" fg:w="15"/><text x="93.1629%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (15 samples, 0.14%)</title><rect x="92.9129%" y="693" width="0.1393%" height="15" fill="rgb(207,181,38)" fg:x="10003" fg:w="15"/><text x="93.1629%" y="703.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (64 samples, 0.59%)</title><rect x="93.0522%" y="709" width="0.5945%" height="15" fill="rgb(211,8,23)" fg:x="10018" fg:w="64"/><text x="93.3022%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (60 samples, 0.56%)</title><rect x="93.0894%" y="693" width="0.5573%" height="15" fill="rgb(235,11,44)" fg:x="10022" fg:w="60"/><text x="93.3394%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="93.6560%" y="629" width="0.0186%" height="15" fill="rgb(248,18,52)" fg:x="10083" fg:w="2"/><text x="93.9060%" y="639.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.03%)</title><rect x="93.6560%" y="677" width="0.0279%" height="15" fill="rgb(208,4,7)" fg:x="10083" fg:w="3"/><text x="93.9060%" y="687.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="93.6560%" y="661" width="0.0279%" height="15" fill="rgb(240,17,39)" fg:x="10083" fg:w="3"/><text x="93.9060%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.03%)</title><rect x="93.6560%" y="645" width="0.0279%" height="15" fill="rgb(207,170,3)" fg:x="10083" fg:w="3"/><text x="93.9060%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="93.7210%" y="661" width="0.0186%" height="15" fill="rgb(236,100,52)" fg:x="10090" fg:w="2"/><text x="93.9710%" y="671.50"></text></g><g><title>neopoligengine`&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (2 samples, 0.02%)</title><rect x="93.7488%" y="661" width="0.0186%" height="15" fill="rgb(246,78,51)" fg:x="10093" fg:w="2"/><text x="93.9988%" y="671.50"></text></g><g><title>neopoligengine`neopoligengine::span::inline_key_value_span_no_attributes::inline_key_value_span_no_attributes (3 samples, 0.03%)</title><rect x="93.7767%" y="661" width="0.0279%" height="15" fill="rgb(211,17,15)" fg:x="10096" fg:w="3"/><text x="94.0267%" y="671.50"></text></g><g><title>neopoligengine`nom::bytes::complete::tag_no_case::_{{closure}} (2 samples, 0.02%)</title><rect x="93.7860%" y="645" width="0.0186%" height="15" fill="rgb(209,59,46)" fg:x="10097" fg:w="2"/><text x="94.0360%" y="655.50"></text></g><g><title>neopoligengine`&lt;&amp;str as nom::traits::FindToken&lt;char&gt;&gt;::find_token (5 samples, 0.05%)</title><rect x="93.8231%" y="645" width="0.0464%" height="15" fill="rgb(210,92,25)" fg:x="10101" fg:w="5"/><text x="94.0731%" y="655.50"></text></g><g><title>neopoligengine`neopoligengine::span::word::word (7 samples, 0.07%)</title><rect x="93.8231%" y="661" width="0.0650%" height="15" fill="rgb(238,174,52)" fg:x="10101" fg:w="7"/><text x="94.0731%" y="671.50"></text></g><g><title>neopoligengine`&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (2 samples, 0.02%)</title><rect x="93.8696%" y="645" width="0.0186%" height="15" fill="rgb(230,73,7)" fg:x="10106" fg:w="2"/><text x="94.1196%" y="655.50"></text></g><g><title>neopoligengine`neopoligengine::block::block (28 samples, 0.26%)</title><rect x="93.6467%" y="693" width="0.2601%" height="15" fill="rgb(243,124,40)" fg:x="10082" fg:w="28"/><text x="93.8967%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::span::span (21 samples, 0.20%)</title><rect x="93.7117%" y="677" width="0.1951%" height="15" fill="rgb(244,170,11)" fg:x="10089" fg:w="21"/><text x="93.9617%" y="687.50"></text></g><g><title>neopoligengine`nom::bytes::complete::tag_no_case::_{{closure}} (2 samples, 0.02%)</title><rect x="93.8882%" y="661" width="0.0186%" height="15" fill="rgb(207,114,54)" fg:x="10108" fg:w="2"/><text x="94.1382%" y="671.50"></text></g><g><title>neopoligengine`neopoligengine::section::section_full (116 samples, 1.08%)</title><rect x="92.8386%" y="741" width="1.0775%" height="15" fill="rgb(205,42,20)" fg:x="9995" fg:w="116"/><text x="93.0886%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::standard::full::standard_section_full (93 samples, 0.86%)</title><rect x="93.0522%" y="725" width="0.8638%" height="15" fill="rgb(230,30,28)" fg:x="10018" fg:w="93"/><text x="93.3022%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::child::child (29 samples, 0.27%)</title><rect x="93.6467%" y="709" width="0.2694%" height="15" fill="rgb(205,73,54)" fg:x="10082" fg:w="29"/><text x="93.8967%" y="719.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::start::preformatted_section_start (10 samples, 0.09%)</title><rect x="93.9253%" y="725" width="0.0929%" height="15" fill="rgb(254,227,23)" fg:x="10112" fg:w="10"/><text x="94.1753%" y="735.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (9 samples, 0.08%)</title><rect x="93.9346%" y="709" width="0.0836%" height="15" fill="rgb(228,202,34)" fg:x="10113" fg:w="9"/><text x="94.1846%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (8 samples, 0.07%)</title><rect x="93.9439%" y="693" width="0.0743%" height="15" fill="rgb(222,225,37)" fg:x="10114" fg:w="8"/><text x="94.1939%" y="703.50"></text></g><g><title>neopoligengine`neopoligengine::ast::ast (143 samples, 1.33%)</title><rect x="92.7085%" y="789" width="1.3283%" height="15" fill="rgb(221,14,54)" fg:x="9981" fg:w="143"/><text x="92.9585%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::child::child (142 samples, 1.32%)</title><rect x="92.7178%" y="773" width="1.3190%" height="15" fill="rgb(254,102,2)" fg:x="9982" fg:w="142"/><text x="92.9678%" y="783.50"></text></g><g><title>neopoligengine`neopoligengine::section::section (137 samples, 1.27%)</title><rect x="92.7643%" y="757" width="1.2725%" height="15" fill="rgb(232,104,17)" fg:x="9987" fg:w="137"/><text x="93.0143%" y="767.50"></text></g><g><title>neopoligengine`neopoligengine::section::section_start (13 samples, 0.12%)</title><rect x="93.9160%" y="741" width="0.1208%" height="15" fill="rgb(250,220,14)" fg:x="10111" fg:w="13"/><text x="94.1660%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::standard::start::standard_section_start (2 samples, 0.02%)</title><rect x="94.0182%" y="725" width="0.0186%" height="15" fill="rgb(241,158,9)" fg:x="10122" fg:w="2"/><text x="94.2682%" y="735.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (2 samples, 0.02%)</title><rect x="94.0182%" y="709" width="0.0186%" height="15" fill="rgb(246,9,43)" fg:x="10122" fg:w="2"/><text x="94.2682%" y="719.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (2 samples, 0.02%)</title><rect x="94.0182%" y="693" width="0.0186%" height="15" fill="rgb(206,73,33)" fg:x="10122" fg:w="2"/><text x="94.2682%" y="703.50"></text></g><g><title>neopoligengine`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="94.0461%" y="581" width="0.0186%" height="15" fill="rgb(222,79,8)" fg:x="10125" fg:w="2"/><text x="94.2961%" y="591.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="94.0368%" y="613" width="0.0372%" height="15" fill="rgb(234,8,54)" fg:x="10124" fg:w="4"/><text x="94.2868%" y="623.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugSet::entry (4 samples, 0.04%)</title><rect x="94.0368%" y="597" width="0.0372%" height="15" fill="rgb(209,134,38)" fg:x="10124" fg:w="4"/><text x="94.2868%" y="607.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::config_folders::ConfigFolders as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="94.0739%" y="613" width="0.0279%" height="15" fill="rgb(230,127,29)" fg:x="10128" fg:w="3"/><text x="94.3239%" y="623.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (3 samples, 0.03%)</title><rect x="94.0739%" y="597" width="0.0279%" height="15" fill="rgb(242,44,41)" fg:x="10128" fg:w="3"/><text x="94.3239%" y="607.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (3 samples, 0.03%)</title><rect x="94.0739%" y="581" width="0.0279%" height="15" fill="rgb(222,56,43)" fg:x="10128" fg:w="3"/><text x="94.3239%" y="591.50"></text></g><g><title>neopoligengine`&lt;std::path::PathBuf as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="94.0739%" y="565" width="0.0279%" height="15" fill="rgb(238,39,47)" fg:x="10128" fg:w="3"/><text x="94.3239%" y="575.50"></text></g><g><title>neopoligengine`&lt;core::str::lossy::Debug as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="94.0739%" y="549" width="0.0279%" height="15" fill="rgb(226,79,43)" fg:x="10128" fg:w="3"/><text x="94.3239%" y="559.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::config_section_categories::ConfigSectionCategories as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="94.1018%" y="613" width="0.0186%" height="15" fill="rgb(242,105,53)" fg:x="10131" fg:w="2"/><text x="94.3518%" y="623.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (2 samples, 0.02%)</title><rect x="94.1018%" y="597" width="0.0186%" height="15" fill="rgb(251,132,46)" fg:x="10131" fg:w="2"/><text x="94.3518%" y="607.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="94.1018%" y="581" width="0.0186%" height="15" fill="rgb(231,77,14)" fg:x="10131" fg:w="2"/><text x="94.3518%" y="591.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::set::BTreeSet&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="94.1018%" y="565" width="0.0186%" height="15" fill="rgb(240,135,9)" fg:x="10131" fg:w="2"/><text x="94.3518%" y="575.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugSet::entry (2 samples, 0.02%)</title><rect x="94.1018%" y="549" width="0.0186%" height="15" fill="rgb(248,109,14)" fg:x="10131" fg:w="2"/><text x="94.3518%" y="559.50"></text></g><g><title>neopoligengine`tracing::span::Span::new (11 samples, 0.10%)</title><rect x="94.0368%" y="789" width="0.1022%" height="15" fill="rgb(227,146,52)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="799.50"></text></g><g><title>neopoligengine`tracing_core::dispatcher::get_default (11 samples, 0.10%)</title><rect x="94.0368%" y="773" width="0.1022%" height="15" fill="rgb(232,54,3)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="783.50"></text></g><g><title>neopoligengine`tracing::span::Span::make_with (11 samples, 0.10%)</title><rect x="94.0368%" y="757" width="0.1022%" height="15" fill="rgb(229,201,43)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="767.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (11 samples, 0.10%)</title><rect x="94.0368%" y="741" width="0.1022%" height="15" fill="rgb(252,161,33)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="751.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (11 samples, 0.10%)</title><rect x="94.0368%" y="725" width="0.1022%" height="15" fill="rgb(226,146,40)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="735.50"></text></g><g><title>neopoligengine`tracing_core::span::Attributes::record (11 samples, 0.10%)</title><rect x="94.0368%" y="709" width="0.1022%" height="15" fill="rgb(219,47,25)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="719.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (11 samples, 0.10%)</title><rect x="94.0368%" y="693" width="0.1022%" height="15" fill="rgb(250,135,13)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="703.50"></text></g><g><title>neopoligengine`core::fmt::write (11 samples, 0.10%)</title><rect x="94.0368%" y="677" width="0.1022%" height="15" fill="rgb(219,229,18)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="687.50"></text></g><g><title>neopoligengine`&lt;&amp;T as core::fmt::Debug&gt;::fmt (11 samples, 0.10%)</title><rect x="94.0368%" y="661" width="0.1022%" height="15" fill="rgb(217,152,27)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="671.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (11 samples, 0.10%)</title><rect x="94.0368%" y="645" width="0.1022%" height="15" fill="rgb(225,71,47)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="655.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (11 samples, 0.10%)</title><rect x="94.0368%" y="629" width="0.1022%" height="15" fill="rgb(220,139,14)" fg:x="10124" fg:w="11"/><text x="94.2868%" y="639.50"></text></g><g><title>neopoligengine`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="94.1204%" y="613" width="0.0186%" height="15" fill="rgb(247,54,32)" fg:x="10133" fg:w="2"/><text x="94.3704%" y="623.50"></text></g><g><title>neopoligengine`&lt;tracing_appender::non_blocking::NonBlocking as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="94.1575%" y="757" width="0.0186%" height="15" fill="rgb(252,131,39)" fg:x="10137" fg:w="2"/><text x="94.4075%" y="767.50"></text></g><g><title>neopoligengine`crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.02%)</title><rect x="94.1575%" y="741" width="0.0186%" height="15" fill="rgb(210,108,39)" fg:x="10137" fg:w="2"/><text x="94.4075%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (2 samples, 0.02%)</title><rect x="94.1575%" y="725" width="0.0186%" height="15" fill="rgb(205,23,29)" fg:x="10137" fg:w="2"/><text x="94.4075%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (2 samples, 0.02%)</title><rect x="94.1575%" y="709" width="0.0186%" height="15" fill="rgb(246,139,46)" fg:x="10137" fg:w="2"/><text x="94.4075%" y="719.50"></text></g><g><title>neopoligengine`neopoligengine::builder::Builder::files_to_output (10,011 samples, 92.99%)</title><rect x="1.1982%" y="837" width="92.9872%" height="15" fill="rgb(250,81,26)" fg:x="129" fg:w="10011"/><text x="1.4482%" y="847.50">neopoligengine`neopoligengine::builder::Builder::files_to_output</text></g><g><title>neopoligengine`neopoligengine::site::new::_&lt;impl neopoligengine::site::Site&gt;::new (165 samples, 1.53%)</title><rect x="92.6528%" y="821" width="1.5326%" height="15" fill="rgb(214,104,7)" fg:x="9975" fg:w="165"/><text x="92.9028%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::page::new::_&lt;impl neopoligengine::page::Page&gt;::new (163 samples, 1.51%)</title><rect x="92.6714%" y="805" width="1.5140%" height="15" fill="rgb(233,189,8)" fg:x="9977" fg:w="163"/><text x="92.9214%" y="815.50"></text></g><g><title>neopoligengine`tracing_core::event::Event::dispatch (5 samples, 0.05%)</title><rect x="94.1390%" y="789" width="0.0464%" height="15" fill="rgb(228,141,17)" fg:x="10135" fg:w="5"/><text x="94.3890%" y="799.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (5 samples, 0.05%)</title><rect x="94.1390%" y="773" width="0.0464%" height="15" fill="rgb(247,157,1)" fg:x="10135" fg:w="5"/><text x="94.3890%" y="783.50"></text></g><g><title>neopoligengine`std::fs::DirBuilder::create_dir_all (3 samples, 0.03%)</title><rect x="94.1854%" y="837" width="0.0279%" height="15" fill="rgb(249,225,5)" fg:x="10140" fg:w="3"/><text x="94.4354%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`stat (3 samples, 0.03%)</title><rect x="94.1854%" y="821" width="0.0279%" height="15" fill="rgb(242,55,13)" fg:x="10140" fg:w="3"/><text x="94.4354%" y="831.50"></text></g><g><title>neopoligengine`std::fs::write::inner (62 samples, 0.58%)</title><rect x="94.2133%" y="837" width="0.5759%" height="15" fill="rgb(230,49,50)" fg:x="10143" fg:w="62"/><text x="94.4633%" y="847.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::File::open_c (62 samples, 0.58%)</title><rect x="94.2133%" y="821" width="0.5759%" height="15" fill="rgb(241,111,38)" fg:x="10143" fg:w="62"/><text x="94.4633%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__open (62 samples, 0.58%)</title><rect x="94.2133%" y="805" width="0.5759%" height="15" fill="rgb(252,155,4)" fg:x="10143" fg:w="62"/><text x="94.4633%" y="815.50"></text></g><g><title>neopoligengine`&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="94.7984%" y="821" width="0.0186%" height="15" fill="rgb(212,69,32)" fg:x="10206" fg:w="2"/><text x="95.0484%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::builder::Builder::write_files (10,199 samples, 94.73%)</title><rect x="0.0929%" y="853" width="94.7334%" height="15" fill="rgb(243,107,47)" fg:x="10" fg:w="10199"/><text x="0.3429%" y="863.50">neopoligengine`neopoligengine::builder::Builder::write_files</text></g><g><title>neopoligengine`std::path::Path::_starts_with (4 samples, 0.04%)</title><rect x="94.7892%" y="837" width="0.0372%" height="15" fill="rgb(247,130,12)" fg:x="10205" fg:w="4"/><text x="95.0392%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`close (2 samples, 0.02%)</title><rect x="94.8263%" y="837" width="0.0186%" height="15" fill="rgb(233,74,16)" fg:x="10209" fg:w="2"/><text x="95.0763%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`fstat (4 samples, 0.04%)</title><rect x="94.8449%" y="837" width="0.0372%" height="15" fill="rgb(208,58,18)" fg:x="10211" fg:w="4"/><text x="95.0949%" y="847.50"></text></g><g><title>neopoligengine`&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="94.8820%" y="837" width="0.0186%" height="15" fill="rgb(242,225,1)" fg:x="10215" fg:w="2"/><text x="95.1320%" y="847.50"></text></g><g><title>neopoligengine`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.04%)</title><rect x="94.9006%" y="837" width="0.0372%" height="15" fill="rgb(249,39,40)" fg:x="10217" fg:w="4"/><text x="95.1506%" y="847.50"></text></g><g><title>neopoligengine`std::path::compare_components (4 samples, 0.04%)</title><rect x="94.9006%" y="821" width="0.0372%" height="15" fill="rgb(207,72,44)" fg:x="10217" fg:w="4"/><text x="95.1506%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`read (7 samples, 0.07%)</title><rect x="94.9378%" y="821" width="0.0650%" height="15" fill="rgb(215,193,12)" fg:x="10221" fg:w="7"/><text x="95.1878%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::file_set::FileSet::load_content (45 samples, 0.42%)</title><rect x="94.8263%" y="853" width="0.4180%" height="15" fill="rgb(248,41,39)" fg:x="10209" fg:w="45"/><text x="95.0763%" y="863.50"></text></g><g><title>neopoligengine`std::fs::read_to_string::inner (33 samples, 0.31%)</title><rect x="94.9378%" y="837" width="0.3065%" height="15" fill="rgb(253,85,4)" fg:x="10221" fg:w="33"/><text x="95.1878%" y="847.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::File::open_c (25 samples, 0.23%)</title><rect x="95.0121%" y="821" width="0.2322%" height="15" fill="rgb(243,70,31)" fg:x="10229" fg:w="25"/><text x="95.2621%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__open (25 samples, 0.23%)</title><rect x="95.0121%" y="805" width="0.2322%" height="15" fill="rgb(253,195,26)" fg:x="10229" fg:w="25"/><text x="95.2621%" y="815.50"></text></g><g><title>neopoligengine`&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="95.2536%" y="837" width="0.0464%" height="15" fill="rgb(243,42,11)" fg:x="10255" fg:w="5"/><text x="95.5036%" y="847.50"></text></g><g><title>neopoligengine`walkdir::IntoIter::handle_entry (4 samples, 0.04%)</title><rect x="95.2629%" y="821" width="0.0372%" height="15" fill="rgb(239,66,17)" fg:x="10256" fg:w="4"/><text x="95.5129%" y="831.50"></text></g><g><title>neopoligengine`walkdir::IntoIter::push (4 samples, 0.04%)</title><rect x="95.2629%" y="805" width="0.0372%" height="15" fill="rgb(217,132,21)" fg:x="10256" fg:w="4"/><text x="95.5129%" y="815.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::readdir (4 samples, 0.04%)</title><rect x="95.2629%" y="789" width="0.0372%" height="15" fill="rgb(252,202,21)" fg:x="10256" fg:w="4"/><text x="95.5129%" y="799.50"></text></g><g><title>libsystem_c.dylib`__opendir2 (4 samples, 0.04%)</title><rect x="95.2629%" y="773" width="0.0372%" height="15" fill="rgb(233,98,36)" fg:x="10256" fg:w="4"/><text x="95.5129%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`__open_nocancel (4 samples, 0.04%)</title><rect x="95.2629%" y="757" width="0.0372%" height="15" fill="rgb(216,153,54)" fg:x="10256" fg:w="4"/><text x="95.5129%" y="767.50"></text></g><g><title>neopoligengine`neopoligengine::build_site (10,263 samples, 95.33%)</title><rect x="0.0186%" y="869" width="95.3279%" height="15" fill="rgb(250,99,7)" fg:x="2" fg:w="10263"/><text x="0.2686%" y="879.50">neopoligengine`neopoligengine::build_site</text></g><g><title>neopoligengine`neopoligengine::file_set::FileSet::load_templates (11 samples, 0.10%)</title><rect x="95.2443%" y="853" width="0.1022%" height="15" fill="rgb(207,56,50)" fg:x="10254" fg:w="11"/><text x="95.4943%" y="863.50"></text></g><g><title>neopoligengine`std::fs::read_to_string::inner (5 samples, 0.05%)</title><rect x="95.3000%" y="837" width="0.0464%" height="15" fill="rgb(244,61,34)" fg:x="10260" fg:w="5"/><text x="95.5500%" y="847.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::File::open_c (5 samples, 0.05%)</title><rect x="95.3000%" y="821" width="0.0464%" height="15" fill="rgb(241,50,38)" fg:x="10260" fg:w="5"/><text x="95.5500%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__open (5 samples, 0.05%)</title><rect x="95.3000%" y="805" width="0.0464%" height="15" fill="rgb(212,166,30)" fg:x="10260" fg:w="5"/><text x="95.5500%" y="815.50"></text></g><g><title>neopoligengine`neopoligengine::config::new::_&lt;impl neopoligengine::config::Config&gt;::new (3 samples, 0.03%)</title><rect x="95.3465%" y="869" width="0.0279%" height="15" fill="rgb(249,127,32)" fg:x="10265" fg:w="3"/><text x="95.5965%" y="879.50"></text></g><g><title>neopoligengine`std::fs::read_to_string::inner (2 samples, 0.02%)</title><rect x="95.3557%" y="853" width="0.0186%" height="15" fill="rgb(209,103,0)" fg:x="10266" fg:w="2"/><text x="95.6057%" y="863.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::fs::File::open_c (2 samples, 0.02%)</title><rect x="95.3557%" y="837" width="0.0186%" height="15" fill="rgb(238,209,51)" fg:x="10266" fg:w="2"/><text x="95.6057%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__open (2 samples, 0.02%)</title><rect x="95.3557%" y="821" width="0.0186%" height="15" fill="rgb(237,56,23)" fg:x="10266" fg:w="2"/><text x="95.6057%" y="831.50"></text></g><g><title>dyld`start (10,269 samples, 95.38%)</title><rect x="0.0000%" y="997" width="95.3836%" height="15" fill="rgb(215,153,46)" fg:x="0" fg:w="10269"/><text x="0.2500%" y="1007.50">dyld`start</text></g><g><title>neopoligengine`main (10,268 samples, 95.37%)</title><rect x="0.0093%" y="981" width="95.3743%" height="15" fill="rgb(224,49,31)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="991.50">neopoligengine`main</text></g><g><title>neopoligengine`std::rt::lang_start_internal (10,268 samples, 95.37%)</title><rect x="0.0093%" y="965" width="95.3743%" height="15" fill="rgb(250,18,42)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="975.50">neopoligengine`std::rt::lang_start_internal</text></g><g><title>neopoligengine`std::rt::lang_start::_{{closure}} (10,268 samples, 95.37%)</title><rect x="0.0093%" y="949" width="95.3743%" height="15" fill="rgb(215,176,39)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="959.50">neopoligengine`std::rt::lang_start::_{{closure}}</text></g><g><title>neopoligengine`std::sys_common::backtrace::__rust_begin_short_backtrace (10,268 samples, 95.37%)</title><rect x="0.0093%" y="933" width="95.3743%" height="15" fill="rgb(223,77,29)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="943.50">neopoligengine`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>neopoligengine`neopoligengine::main (10,268 samples, 95.37%)</title><rect x="0.0093%" y="917" width="95.3743%" height="15" fill="rgb(234,94,52)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="927.50">neopoligengine`neopoligengine::main</text></g><g><title>neopoligengine`tokio::runtime::context::runtime::enter_runtime (10,268 samples, 95.37%)</title><rect x="0.0093%" y="901" width="95.3743%" height="15" fill="rgb(220,154,50)" fg:x="1" fg:w="10268"/><text x="0.2593%" y="911.50">neopoligengine`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>neopoligengine`tokio::runtime::park::CachedParkThread::block_on (10,267 samples, 95.37%)</title><rect x="0.0186%" y="885" width="95.3650%" height="15" fill="rgb(212,11,10)" fg:x="2" fg:w="10267"/><text x="0.2686%" y="895.50">neopoligengine`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>libsystem_kernel.dylib`__exit (8 samples, 0.07%)</title><rect x="95.3836%" y="997" width="0.0743%" height="15" fill="rgb(205,166,19)" fg:x="10269" fg:w="8"/><text x="95.6336%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.03%)</title><rect x="95.4672%" y="901" width="0.0279%" height="15" fill="rgb(244,198,16)" fg:x="10278" fg:w="3"/><text x="95.7172%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.03%)</title><rect x="95.4672%" y="885" width="0.0279%" height="15" fill="rgb(219,69,12)" fg:x="10278" fg:w="3"/><text x="95.7172%" y="895.50"></text></g><g><title>neopoligengine`tokio::runtime::blocking::pool::Inner::run (6 samples, 0.06%)</title><rect x="95.4672%" y="917" width="0.0557%" height="15" fill="rgb(245,30,7)" fg:x="10278" fg:w="6"/><text x="95.7172%" y="927.50"></text></g><g><title>neopoligengine`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.02%)</title><rect x="95.5044%" y="901" width="0.0186%" height="15" fill="rgb(218,221,48)" fg:x="10282" fg:w="2"/><text x="95.7544%" y="911.50"></text></g><g><title>neopoligengine`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2 samples, 0.02%)</title><rect x="95.5044%" y="885" width="0.0186%" height="15" fill="rgb(216,66,15)" fg:x="10282" fg:w="2"/><text x="95.7544%" y="895.50"></text></g><g><title>neopoligengine`tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 0.02%)</title><rect x="95.5044%" y="869" width="0.0186%" height="15" fill="rgb(226,122,50)" fg:x="10282" fg:w="2"/><text x="95.7544%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (9 samples, 0.08%)</title><rect x="95.6251%" y="885" width="0.0836%" height="15" fill="rgb(239,156,16)" fg:x="10295" fg:w="9"/><text x="95.8751%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (5 samples, 0.05%)</title><rect x="95.7737%" y="853" width="0.0464%" height="15" fill="rgb(224,27,38)" fg:x="10311" fg:w="5"/><text x="96.0237%" y="863.50"></text></g><g><title>neopoligengine`crossbeam_channel::channel::Receiver&lt;T&gt;::recv (44 samples, 0.41%)</title><rect x="95.5601%" y="901" width="0.4087%" height="15" fill="rgb(224,39,27)" fg:x="10288" fg:w="44"/><text x="95.8101%" y="911.50"></text></g><g><title>neopoligengine`crossbeam_channel::flavors::array::Channel&lt;T&gt;::recv::_{{closure}} (28 samples, 0.26%)</title><rect x="95.7087%" y="885" width="0.2601%" height="15" fill="rgb(215,92,29)" fg:x="10304" fg:w="28"/><text x="95.9587%" y="895.50"></text></g><g><title>neopoligengine`crossbeam_channel::context::Context::wait_until (28 samples, 0.26%)</title><rect x="95.7087%" y="869" width="0.2601%" height="15" fill="rgb(207,159,16)" fg:x="10304" fg:w="28"/><text x="95.9587%" y="879.50"></text></g><g><title>neopoligengine`std::thread::park (16 samples, 0.15%)</title><rect x="95.8202%" y="853" width="0.1486%" height="15" fill="rgb(238,163,47)" fg:x="10316" fg:w="16"/><text x="96.0702%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (16 samples, 0.15%)</title><rect x="95.8202%" y="837" width="0.1486%" height="15" fill="rgb(219,91,49)" fg:x="10316" fg:w="16"/><text x="96.0702%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (15 samples, 0.14%)</title><rect x="95.8295%" y="821" width="0.1393%" height="15" fill="rgb(227,167,31)" fg:x="10317" fg:w="15"/><text x="96.0795%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (72 samples, 0.67%)</title><rect x="95.9781%" y="885" width="0.6688%" height="15" fill="rgb(234,80,54)" fg:x="10333" fg:w="72"/><text x="96.2281%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (129 samples, 1.20%)</title><rect x="95.4579%" y="997" width="1.1982%" height="15" fill="rgb(212,114,2)" fg:x="10277" fg:w="129"/><text x="95.7079%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (129 samples, 1.20%)</title><rect x="95.4579%" y="981" width="1.1982%" height="15" fill="rgb(234,50,24)" fg:x="10277" fg:w="129"/><text x="95.7079%" y="991.50"></text></g><g><title>neopoligengine`std::sys::pal::unix::thread::Thread::new::thread_start (129 samples, 1.20%)</title><rect x="95.4579%" y="965" width="1.1982%" height="15" fill="rgb(221,68,8)" fg:x="10277" fg:w="129"/><text x="95.7079%" y="975.50"></text></g><g><title>neopoligengine`core::ops::function::FnOnce::call_once{{vtable.shim}} (129 samples, 1.20%)</title><rect x="95.4579%" y="949" width="1.1982%" height="15" fill="rgb(254,180,31)" fg:x="10277" fg:w="129"/><text x="95.7079%" y="959.50"></text></g><g><title>neopoligengine`std::sys_common::backtrace::__rust_begin_short_backtrace (129 samples, 1.20%)</title><rect x="95.4579%" y="933" width="1.1982%" height="15" fill="rgb(247,130,50)" fg:x="10277" fg:w="129"/><text x="95.7079%" y="943.50"></text></g><g><title>neopoligengine`tracing_appender::worker::Worker&lt;T&gt;::work (122 samples, 1.13%)</title><rect x="95.5229%" y="917" width="1.1332%" height="15" fill="rgb(211,109,4)" fg:x="10284" fg:w="122"/><text x="95.7729%" y="927.50"></text></g><g><title>neopoligengine`std::io::Write::write_all (73 samples, 0.68%)</title><rect x="95.9781%" y="901" width="0.6781%" height="15" fill="rgb(238,50,21)" fg:x="10333" fg:w="73"/><text x="96.2281%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="96.6654%" y="901" width="0.0186%" height="15" fill="rgb(225,57,45)" fg:x="10407" fg:w="2"/><text x="96.9154%" y="911.50"></text></g><g><title>neopoligengine`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="96.7212%" y="869" width="0.0186%" height="15" fill="rgb(209,196,50)" fg:x="10413" fg:w="2"/><text x="96.9712%" y="879.50"></text></g><g><title>neopoligengine`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="96.7212%" y="853" width="0.0186%" height="15" fill="rgb(242,140,13)" fg:x="10413" fg:w="2"/><text x="96.9712%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="96.7212%" y="837" width="0.0186%" height="15" fill="rgb(217,111,7)" fg:x="10413" fg:w="2"/><text x="96.9712%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="96.7212%" y="821" width="0.0186%" height="15" fill="rgb(253,193,51)" fg:x="10413" fg:w="2"/><text x="96.9712%" y="831.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (5 samples, 0.05%)</title><rect x="96.7490%" y="805" width="0.0464%" height="15" fill="rgb(252,70,29)" fg:x="10416" fg:w="5"/><text x="96.9990%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (5 samples, 0.05%)</title><rect x="96.7490%" y="789" width="0.0464%" height="15" fill="rgb(232,127,12)" fg:x="10416" fg:w="5"/><text x="96.9990%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::checklist::full::checklist_section_full (6 samples, 0.06%)</title><rect x="96.7490%" y="821" width="0.0557%" height="15" fill="rgb(211,180,21)" fg:x="10416" fg:w="6"/><text x="96.9990%" y="831.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (7 samples, 0.07%)</title><rect x="96.8048%" y="805" width="0.0650%" height="15" fill="rgb(229,72,13)" fg:x="10422" fg:w="7"/><text x="97.0548%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (7 samples, 0.07%)</title><rect x="96.8048%" y="789" width="0.0650%" height="15" fill="rgb(240,211,49)" fg:x="10422" fg:w="7"/><text x="97.0548%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::list::list (18 samples, 0.17%)</title><rect x="96.7490%" y="853" width="0.1672%" height="15" fill="rgb(219,149,40)" fg:x="10416" fg:w="18"/><text x="96.9990%" y="863.50"></text></g><g><title>neopoligengine`neopoligengine::list::list_full (18 samples, 0.17%)</title><rect x="96.7490%" y="837" width="0.1672%" height="15" fill="rgb(210,127,46)" fg:x="10416" fg:w="18"/><text x="96.9990%" y="847.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_section_full (12 samples, 0.11%)</title><rect x="96.8048%" y="821" width="0.1115%" height="15" fill="rgb(220,106,7)" fg:x="10422" fg:w="12"/><text x="97.0548%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_item_wrapper (5 samples, 0.05%)</title><rect x="96.8698%" y="805" width="0.0464%" height="15" fill="rgb(249,31,22)" fg:x="10429" fg:w="5"/><text x="97.1198%" y="815.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::list::full::list_item_block (5 samples, 0.05%)</title><rect x="96.8698%" y="789" width="0.0464%" height="15" fill="rgb(253,1,49)" fg:x="10429" fg:w="5"/><text x="97.1198%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::span::span (3 samples, 0.03%)</title><rect x="96.8884%" y="773" width="0.0279%" height="15" fill="rgb(227,144,33)" fg:x="10431" fg:w="3"/><text x="97.1384%" y="783.50"></text></g><g><title>neopoligengine`neopoligengine::section::section_end (19 samples, 0.18%)</title><rect x="96.9348%" y="837" width="0.1765%" height="15" fill="rgb(249,163,44)" fg:x="10436" fg:w="19"/><text x="97.1848%" y="847.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::end::preformatted_section_end (18 samples, 0.17%)</title><rect x="96.9441%" y="821" width="0.1672%" height="15" fill="rgb(234,15,39)" fg:x="10437" fg:w="18"/><text x="97.1941%" y="831.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (16 samples, 0.15%)</title><rect x="96.9627%" y="805" width="0.1486%" height="15" fill="rgb(207,66,16)" fg:x="10439" fg:w="16"/><text x="97.2127%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (14 samples, 0.13%)</title><rect x="96.9812%" y="789" width="0.1300%" height="15" fill="rgb(233,112,24)" fg:x="10441" fg:w="14"/><text x="97.2312%" y="799.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="97.1484%" y="821" width="0.0279%" height="15" fill="rgb(230,90,22)" fg:x="10459" fg:w="3"/><text x="97.3984%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::full::preformatted_section_full (26 samples, 0.24%)</title><rect x="97.2134%" y="821" width="0.2415%" height="15" fill="rgb(229,61,13)" fg:x="10466" fg:w="26"/><text x="97.4634%" y="831.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (24 samples, 0.22%)</title><rect x="97.2320%" y="805" width="0.2229%" height="15" fill="rgb(225,57,24)" fg:x="10468" fg:w="24"/><text x="97.4820%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (24 samples, 0.22%)</title><rect x="97.2320%" y="789" width="0.2229%" height="15" fill="rgb(208,169,48)" fg:x="10468" fg:w="24"/><text x="97.4820%" y="799.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (187 samples, 1.74%)</title><rect x="97.4642%" y="805" width="1.7369%" height="15" fill="rgb(244,218,51)" fg:x="10493" fg:w="187"/><text x="97.7142%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (163 samples, 1.51%)</title><rect x="97.6872%" y="789" width="1.5140%" height="15" fill="rgb(214,148,10)" fg:x="10517" fg:w="163"/><text x="97.9372%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.04%)</title><rect x="99.3219%" y="757" width="0.0372%" height="15" fill="rgb(225,174,27)" fg:x="10693" fg:w="4"/><text x="99.5719%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="99.3591%" y="757" width="0.0186%" height="15" fill="rgb(230,96,26)" fg:x="10697" fg:w="2"/><text x="99.6091%" y="767.50"></text></g><g><title>neopoligengine`&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (2 samples, 0.02%)</title><rect x="99.3870%" y="757" width="0.0186%" height="15" fill="rgb(232,10,30)" fg:x="10700" fg:w="2"/><text x="99.6370%" y="767.50"></text></g><g><title>neopoligengine`neopoligengine::span::inline_standard_span_no_attributes::inline_standard_span_no_attributes (3 samples, 0.03%)</title><rect x="99.4148%" y="757" width="0.0279%" height="15" fill="rgb(222,8,50)" fg:x="10703" fg:w="3"/><text x="99.6648%" y="767.50"></text></g><g><title>neopoligengine`nom::bytes::complete::tag_no_case::_{{closure}} (2 samples, 0.02%)</title><rect x="99.4241%" y="741" width="0.0186%" height="15" fill="rgb(213,81,27)" fg:x="10704" fg:w="2"/><text x="99.6741%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::span::span (4 samples, 0.04%)</title><rect x="99.4984%" y="741" width="0.0372%" height="15" fill="rgb(245,50,10)" fg:x="10712" fg:w="4"/><text x="99.7484%" y="751.50"></text></g><g><title>neopoligengine`neopoligengine::span::inline_standard_span_with_attributes::inline_standard_span_with_attributes (12 samples, 0.11%)</title><rect x="99.4427%" y="757" width="0.1115%" height="15" fill="rgb(216,100,18)" fg:x="10706" fg:w="12"/><text x="99.6927%" y="767.50"></text></g><g><title>neopoligengine`nom::bytes::complete::tag_no_case::_{{closure}} (2 samples, 0.02%)</title><rect x="99.5356%" y="741" width="0.0186%" height="15" fill="rgb(236,147,54)" fg:x="10716" fg:w="2"/><text x="99.7856%" y="751.50"></text></g><g><title>neopoligengine`&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="99.5356%" y="725" width="0.0186%" height="15" fill="rgb(205,143,26)" fg:x="10716" fg:w="2"/><text x="99.7856%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::span::space::space (5 samples, 0.05%)</title><rect x="99.5542%" y="757" width="0.0464%" height="15" fill="rgb(236,26,9)" fg:x="10718" fg:w="5"/><text x="99.8042%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.04%)</title><rect x="99.5634%" y="741" width="0.0372%" height="15" fill="rgb(221,165,53)" fg:x="10719" fg:w="4"/><text x="99.8134%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (4 samples, 0.04%)</title><rect x="99.5634%" y="725" width="0.0372%" height="15" fill="rgb(214,110,17)" fg:x="10719" fg:w="4"/><text x="99.8134%" y="735.50"></text></g><g><title>neopoligengine`neopoligengine::block::block (42 samples, 0.39%)</title><rect x="99.2198%" y="789" width="0.3901%" height="15" fill="rgb(237,197,12)" fg:x="10682" fg:w="42"/><text x="99.4698%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::span::span (32 samples, 0.30%)</title><rect x="99.3127%" y="773" width="0.2972%" height="15" fill="rgb(205,84,17)" fg:x="10692" fg:w="32"/><text x="99.5627%" y="783.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::standard::full::standard_section_full (235 samples, 2.18%)</title><rect x="97.4550%" y="821" width="2.1828%" height="15" fill="rgb(237,18,45)" fg:x="10492" fg:w="235"/><text x="97.7050%" y="831.50">n..</text></g><g><title>neopoligengine`neopoligengine::child::child (46 samples, 0.43%)</title><rect x="99.2105%" y="805" width="0.4273%" height="15" fill="rgb(221,87,14)" fg:x="10681" fg:w="46"/><text x="99.4605%" y="815.50"></text></g><g><title>neopoligengine`neopoligengine::section::section_full (275 samples, 2.55%)</title><rect x="97.1113%" y="837" width="2.5543%" height="15" fill="rgb(238,186,15)" fg:x="10455" fg:w="275"/><text x="97.3613%" y="847.50">ne..</text></g><g><title>neopoligengine`nom::multi::many0::_{{closure}} (2 samples, 0.02%)</title><rect x="99.6470%" y="821" width="0.0186%" height="15" fill="rgb(208,115,11)" fg:x="10728" fg:w="2"/><text x="99.8970%" y="831.50"></text></g><g><title>neopoligengine`neopoligengine::section_attribute::section_attribute (2 samples, 0.02%)</title><rect x="99.6470%" y="805" width="0.0186%" height="15" fill="rgb(254,175,0)" fg:x="10728" fg:w="2"/><text x="99.8970%" y="815.50"></text></g><g><title>neopoligengine`neopoligengine::section_attribute::section_key_value_attribute::section_key_value_attribute (2 samples, 0.02%)</title><rect x="99.6470%" y="789" width="0.0186%" height="15" fill="rgb(227,24,42)" fg:x="10728" fg:w="2"/><text x="99.8970%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::section_category::raw::start::preformatted_section_start (14 samples, 0.13%)</title><rect x="99.6842%" y="821" width="0.1300%" height="15" fill="rgb(223,211,37)" fg:x="10732" fg:w="14"/><text x="99.9342%" y="831.50"></text></g><g><title>neopoligengine`alloc::str::_&lt;impl str&gt;::replace (11 samples, 0.10%)</title><rect x="99.7121%" y="805" width="0.1022%" height="15" fill="rgb(235,49,27)" fg:x="10735" fg:w="11"/><text x="99.9621%" y="815.50"></text></g><g><title>neopoligengine`core::str::pattern::StrSearcher::new (9 samples, 0.08%)</title><rect x="99.7306%" y="789" width="0.0836%" height="15" fill="rgb(254,97,51)" fg:x="10737" fg:w="9"/><text x="99.9806%" y="799.50"></text></g><g><title>neopoligengine`neopoligengine::ast::ast (334 samples, 3.10%)</title><rect x="96.7212%" y="885" width="3.1024%" height="15" fill="rgb(249,51,40)" fg:x="10413" fg:w="334"/><text x="96.9712%" y="895.50">neo..</text></g><g><title>neopoligengine`neopoligengine::child::child (332 samples, 3.08%)</title><rect x="96.7397%" y="869" width="3.0838%" height="15" fill="rgb(210,128,45)" fg:x="10415" fg:w="332"/><text x="96.9897%" y="879.50">neo..</text></g><g><title>neopoligengine`neopoligengine::section::section (313 samples, 2.91%)</title><rect x="96.9162%" y="853" width="2.9073%" height="15" fill="rgb(224,137,50)" fg:x="10434" fg:w="313"/><text x="97.1662%" y="863.50">ne..</text></g><g><title>neopoligengine`neopoligengine::section::section_start (17 samples, 0.16%)</title><rect x="99.6656%" y="837" width="0.1579%" height="15" fill="rgb(242,15,9)" fg:x="10730" fg:w="17"/><text x="99.9156%" y="847.50"></text></g><g><title>neopoligengine`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="99.8235%" y="709" width="0.0372%" height="15" fill="rgb(233,187,41)" fg:x="10747" fg:w="4"/><text x="100.0735%" y="719.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugSet::entry (3 samples, 0.03%)</title><rect x="99.8328%" y="693" width="0.0279%" height="15" fill="rgb(227,2,29)" fg:x="10748" fg:w="3"/><text x="100.0828%" y="703.50"></text></g><g><title>neopoligengine`&lt;core::str::lossy::Debug as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="99.8607%" y="645" width="0.0186%" height="15" fill="rgb(222,70,3)" fg:x="10751" fg:w="2"/><text x="100.1107%" y="655.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::config_folders::ConfigFolders as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="99.8607%" y="709" width="0.0279%" height="15" fill="rgb(213,11,42)" fg:x="10751" fg:w="3"/><text x="100.1107%" y="719.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (3 samples, 0.03%)</title><rect x="99.8607%" y="693" width="0.0279%" height="15" fill="rgb(225,150,9)" fg:x="10751" fg:w="3"/><text x="100.1107%" y="703.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (3 samples, 0.03%)</title><rect x="99.8607%" y="677" width="0.0279%" height="15" fill="rgb(230,162,45)" fg:x="10751" fg:w="3"/><text x="100.1107%" y="687.50"></text></g><g><title>neopoligengine`&lt;std::path::PathBuf as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="99.8607%" y="661" width="0.0279%" height="15" fill="rgb(222,14,52)" fg:x="10751" fg:w="3"/><text x="100.1107%" y="671.50"></text></g><g><title>neopoligengine`&lt;alloc::collections::btree::set::BTreeSet&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="99.8885%" y="661" width="0.0464%" height="15" fill="rgb(254,198,14)" fg:x="10754" fg:w="5"/><text x="100.1385%" y="671.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugSet::entry (4 samples, 0.04%)</title><rect x="99.8978%" y="645" width="0.0372%" height="15" fill="rgb(220,217,30)" fg:x="10755" fg:w="4"/><text x="100.1478%" y="655.50"></text></g><g><title>neopoligengine`&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="99.9071%" y="629" width="0.0279%" height="15" fill="rgb(215,146,41)" fg:x="10756" fg:w="3"/><text x="100.1571%" y="639.50"></text></g><g><title>neopoligengine`tracing::span::Span::new (13 samples, 0.12%)</title><rect x="99.8235%" y="885" width="0.1208%" height="15" fill="rgb(217,27,36)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="895.50"></text></g><g><title>neopoligengine`tracing_core::dispatcher::get_default (13 samples, 0.12%)</title><rect x="99.8235%" y="869" width="0.1208%" height="15" fill="rgb(219,218,39)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="879.50"></text></g><g><title>neopoligengine`tracing::span::Span::make_with (13 samples, 0.12%)</title><rect x="99.8235%" y="853" width="0.1208%" height="15" fill="rgb(219,4,42)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="863.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (13 samples, 0.12%)</title><rect x="99.8235%" y="837" width="0.1208%" height="15" fill="rgb(249,119,36)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="847.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_new_span (13 samples, 0.12%)</title><rect x="99.8235%" y="821" width="0.1208%" height="15" fill="rgb(209,23,33)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="831.50"></text></g><g><title>neopoligengine`tracing_core::span::Attributes::record (13 samples, 0.12%)</title><rect x="99.8235%" y="805" width="0.1208%" height="15" fill="rgb(211,10,0)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="815.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (13 samples, 0.12%)</title><rect x="99.8235%" y="789" width="0.1208%" height="15" fill="rgb(208,99,37)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="799.50"></text></g><g><title>neopoligengine`core::fmt::write (13 samples, 0.12%)</title><rect x="99.8235%" y="773" width="0.1208%" height="15" fill="rgb(213,132,31)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="783.50"></text></g><g><title>neopoligengine`&lt;&amp;T as core::fmt::Debug&gt;::fmt (13 samples, 0.12%)</title><rect x="99.8235%" y="757" width="0.1208%" height="15" fill="rgb(243,129,40)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="767.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (13 samples, 0.12%)</title><rect x="99.8235%" y="741" width="0.1208%" height="15" fill="rgb(210,66,33)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="751.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (13 samples, 0.12%)</title><rect x="99.8235%" y="725" width="0.1208%" height="15" fill="rgb(209,189,4)" fg:x="10747" fg:w="13"/><text x="100.0735%" y="735.50"></text></g><g><title>neopoligengine`&lt;neopoligengine::config_section_categories::ConfigSectionCategories as core::fmt::Debug&gt;::fmt (6 samples, 0.06%)</title><rect x="99.8885%" y="709" width="0.0557%" height="15" fill="rgb(214,107,37)" fg:x="10754" fg:w="6"/><text x="100.1385%" y="719.50"></text></g><g><title>neopoligengine`core::fmt::Formatter::debug_struct_fields_finish (6 samples, 0.06%)</title><rect x="99.8885%" y="693" width="0.0557%" height="15" fill="rgb(245,88,54)" fg:x="10754" fg:w="6"/><text x="100.1385%" y="703.50"></text></g><g><title>neopoligengine`core::fmt::builders::DebugStruct::field (6 samples, 0.06%)</title><rect x="99.8885%" y="677" width="0.0557%" height="15" fill="rgb(205,146,20)" fg:x="10754" fg:w="6"/><text x="100.1385%" y="687.50"></text></g><g><title>all (10,766 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(220,161,25)" fg:x="0" fg:w="10766"/><text x="0.2500%" y="1023.50"></text></g><g><title>neopoligengine`tokio::runtime::context::runtime::enter_runtime (359 samples, 3.33%)</title><rect x="96.6654%" y="997" width="3.3346%" height="15" fill="rgb(215,152,15)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="1007.50">neo..</text></g><g><title>neopoligengine`tokio::runtime::park::CachedParkThread::block_on (359 samples, 3.33%)</title><rect x="96.6654%" y="981" width="3.3346%" height="15" fill="rgb(233,192,44)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="991.50">neo..</text></g><g><title>neopoligengine`neopoligengine::build_site (359 samples, 3.33%)</title><rect x="96.6654%" y="965" width="3.3346%" height="15" fill="rgb(240,170,46)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="975.50">neo..</text></g><g><title>neopoligengine`neopoligengine::builder::Builder::write_files (359 samples, 3.33%)</title><rect x="96.6654%" y="949" width="3.3346%" height="15" fill="rgb(207,104,33)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="959.50">neo..</text></g><g><title>neopoligengine`neopoligengine::builder::Builder::files_to_output (359 samples, 3.33%)</title><rect x="96.6654%" y="933" width="3.3346%" height="15" fill="rgb(219,21,39)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="943.50">neo..</text></g><g><title>neopoligengine`neopoligengine::site::new::_&lt;impl neopoligengine::site::Site&gt;::new (359 samples, 3.33%)</title><rect x="96.6654%" y="917" width="3.3346%" height="15" fill="rgb(214,133,29)" fg:x="10407" fg:w="359"/><text x="96.9154%" y="927.50">neo..</text></g><g><title>neopoligengine`neopoligengine::page::new::_&lt;impl neopoligengine::page::Page&gt;::new (355 samples, 3.30%)</title><rect x="96.7026%" y="901" width="3.2974%" height="15" fill="rgb(226,93,6)" fg:x="10411" fg:w="355"/><text x="96.9526%" y="911.50">neo..</text></g><g><title>neopoligengine`tracing_core::event::Event::dispatch (6 samples, 0.06%)</title><rect x="99.9443%" y="885" width="0.0557%" height="15" fill="rgb(252,222,34)" fg:x="10760" fg:w="6"/><text x="100.1943%" y="895.50"></text></g><g><title>neopoligengine`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (6 samples, 0.06%)</title><rect x="99.9443%" y="869" width="0.0557%" height="15" fill="rgb(252,92,48)" fg:x="10760" fg:w="6"/><text x="100.1943%" y="879.50"></text></g><g><title>neopoligengine`&lt;tracing_appender::non_blocking::NonBlocking as std::io::Write&gt;::write (5 samples, 0.05%)</title><rect x="99.9536%" y="853" width="0.0464%" height="15" fill="rgb(245,223,24)" fg:x="10761" fg:w="5"/><text x="100.2036%" y="863.50"></text></g><g><title>neopoligengine`crossbeam_channel::waker::SyncWaker::notify (4 samples, 0.04%)</title><rect x="99.9628%" y="837" width="0.0372%" height="15" fill="rgb(205,176,3)" fg:x="10762" fg:w="4"/><text x="100.2128%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (4 samples, 0.04%)</title><rect x="99.9628%" y="821" width="0.0372%" height="15" fill="rgb(235,151,15)" fg:x="10762" fg:w="4"/><text x="100.2128%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (4 samples, 0.04%)</title><rect x="99.9628%" y="805" width="0.0372%" height="15" fill="rgb(237,209,11)" fg:x="10762" fg:w="4"/><text x="100.2128%" y="815.50"></text></g></svg></svg>